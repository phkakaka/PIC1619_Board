

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Jun 24 12:40:01 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,inline,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,inline,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	text35,local,class=CODE,merge=1,delta=2
    47                           	psect	text36,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    49                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    50                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    51                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    52                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    53                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text43,local,class=CODE,merge=1,delta=2
    55                           	psect	text44,local,class=CODE,merge=1,delta=2
    56                           	psect	text45,local,class=CODE,merge=1,delta=2
    57                           	psect	text46,local,class=CODE,merge=1,delta=2
    58                           	psect	text47,local,class=CODE,merge=1,delta=2
    59                           	psect	text48,local,class=CODE,merge=1,delta=2
    60                           	psect	text49,local,class=CODE,merge=1,delta=2
    61                           	psect	text50,local,class=CODE,merge=1,delta=2
    62                           	psect	text51,local,class=CODE,merge=1,delta=2
    63                           	psect	text52,local,class=CODE,merge=1,delta=2
    64                           	psect	text53,local,class=CODE,merge=1,inline,delta=2
    65                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
    66                           	dabs	1,0x7E,2
    67  0000                     
    68                           ; Version 1.45
    69                           ; Generated 16/11/2017 GMT
    70                           ; 
    71                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC16F1619 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102  0000                     	;# 
   103  0001                     	;# 
   104  0002                     	;# 
   105  0003                     	;# 
   106  0004                     	;# 
   107  0005                     	;# 
   108  0006                     	;# 
   109  0007                     	;# 
   110  0008                     	;# 
   111  0009                     	;# 
   112  000A                     	;# 
   113  000B                     	;# 
   114  000C                     	;# 
   115  000D                     	;# 
   116  000E                     	;# 
   117  0010                     	;# 
   118  0011                     	;# 
   119  0012                     	;# 
   120  0013                     	;# 
   121  0014                     	;# 
   122  0015                     	;# 
   123  0016                     	;# 
   124  0016                     	;# 
   125  0017                     	;# 
   126  0018                     	;# 
   127  0019                     	;# 
   128  001A                     	;# 
   129  001A                     	;# 
   130  001B                     	;# 
   131  001B                     	;# 
   132  001C                     	;# 
   133  001D                     	;# 
   134  001E                     	;# 
   135  001F                     	;# 
   136  008C                     	;# 
   137  008D                     	;# 
   138  008E                     	;# 
   139  0090                     	;# 
   140  0091                     	;# 
   141  0092                     	;# 
   142  0093                     	;# 
   143  0094                     	;# 
   144  0095                     	;# 
   145  0096                     	;# 
   146  0098                     	;# 
   147  0099                     	;# 
   148  009A                     	;# 
   149  009B                     	;# 
   150  009B                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  009F                     	;# 
   155  010C                     	;# 
   156  010D                     	;# 
   157  010E                     	;# 
   158  0111                     	;# 
   159  0112                     	;# 
   160  0113                     	;# 
   161  0114                     	;# 
   162  0115                     	;# 
   163  0116                     	;# 
   164  0117                     	;# 
   165  0118                     	;# 
   166  0119                     	;# 
   167  011C                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  018E                     	;# 
   171  0191                     	;# 
   172  0191                     	;# 
   173  0192                     	;# 
   174  0193                     	;# 
   175  0193                     	;# 
   176  0194                     	;# 
   177  0195                     	;# 
   178  0196                     	;# 
   179  0197                     	;# 
   180  0199                     	;# 
   181  0199                     	;# 
   182  0199                     	;# 
   183  019A                     	;# 
   184  019A                     	;# 
   185  019A                     	;# 
   186  019B                     	;# 
   187  019B                     	;# 
   188  019B                     	;# 
   189  019B                     	;# 
   190  019B                     	;# 
   191  019C                     	;# 
   192  019C                     	;# 
   193  019C                     	;# 
   194  019D                     	;# 
   195  019D                     	;# 
   196  019D                     	;# 
   197  019E                     	;# 
   198  019E                     	;# 
   199  019E                     	;# 
   200  019F                     	;# 
   201  019F                     	;# 
   202  019F                     	;# 
   203  019F                     	;# 
   204  019F                     	;# 
   205  020C                     	;# 
   206  020D                     	;# 
   207  020E                     	;# 
   208  0211                     	;# 
   209  0211                     	;# 
   210  0212                     	;# 
   211  0212                     	;# 
   212  0213                     	;# 
   213  0213                     	;# 
   214  0214                     	;# 
   215  0214                     	;# 
   216  0215                     	;# 
   217  0215                     	;# 
   218  0215                     	;# 
   219  0215                     	;# 
   220  0216                     	;# 
   221  0216                     	;# 
   222  0217                     	;# 
   223  0217                     	;# 
   224  028C                     	;# 
   225  028D                     	;# 
   226  028E                     	;# 
   227  0291                     	;# 
   228  0291                     	;# 
   229  0292                     	;# 
   230  0293                     	;# 
   231  0294                     	;# 
   232  0298                     	;# 
   233  0298                     	;# 
   234  0299                     	;# 
   235  029A                     	;# 
   236  029B                     	;# 
   237  029E                     	;# 
   238  030C                     	;# 
   239  030D                     	;# 
   240  030E                     	;# 
   241  038C                     	;# 
   242  038D                     	;# 
   243  038E                     	;# 
   244  0391                     	;# 
   245  0392                     	;# 
   246  0393                     	;# 
   247  0394                     	;# 
   248  0395                     	;# 
   249  0396                     	;# 
   250  0397                     	;# 
   251  0398                     	;# 
   252  0399                     	;# 
   253  040E                     	;# 
   254  0413                     	;# 
   255  0413                     	;# 
   256  0414                     	;# 
   257  0414                     	;# 
   258  0415                     	;# 
   259  0416                     	;# 
   260  0417                     	;# 
   261  0418                     	;# 
   262  041A                     	;# 
   263  041A                     	;# 
   264  041B                     	;# 
   265  041B                     	;# 
   266  041C                     	;# 
   267  041D                     	;# 
   268  041E                     	;# 
   269  041F                     	;# 
   270  0493                     	;# 
   271  0494                     	;# 
   272  0495                     	;# 
   273  0496                     	;# 
   274  049A                     	;# 
   275  049B                     	;# 
   276  049C                     	;# 
   277  049D                     	;# 
   278  058C                     	;# 
   279  058C                     	;# 
   280  058D                     	;# 
   281  058E                     	;# 
   282  058E                     	;# 
   283  058F                     	;# 
   284  0590                     	;# 
   285  0590                     	;# 
   286  0591                     	;# 
   287  0592                     	;# 
   288  0592                     	;# 
   289  0593                     	;# 
   290  0594                     	;# 
   291  0594                     	;# 
   292  0595                     	;# 
   293  0596                     	;# 
   294  0596                     	;# 
   295  0597                     	;# 
   296  0598                     	;# 
   297  0599                     	;# 
   298  059A                     	;# 
   299  059B                     	;# 
   300  059B                     	;# 
   301  059C                     	;# 
   302  059D                     	;# 
   303  060C                     	;# 
   304  060C                     	;# 
   305  060D                     	;# 
   306  060E                     	;# 
   307  060F                     	;# 
   308  060F                     	;# 
   309  0610                     	;# 
   310  0611                     	;# 
   311  0612                     	;# 
   312  0613                     	;# 
   313  0614                     	;# 
   314  0617                     	;# 
   315  0618                     	;# 
   316  0619                     	;# 
   317  061A                     	;# 
   318  061B                     	;# 
   319  061C                     	;# 
   320  0691                     	;# 
   321  0692                     	;# 
   322  0693                     	;# 
   323  0694                     	;# 
   324  0695                     	;# 
   325  0696                     	;# 
   326  0697                     	;# 
   327  0699                     	;# 
   328  069A                     	;# 
   329  0711                     	;# 
   330  0712                     	;# 
   331  0713                     	;# 
   332  0714                     	;# 
   333  0715                     	;# 
   334  0718                     	;# 
   335  0718                     	;# 
   336  0719                     	;# 
   337  071A                     	;# 
   338  071A                     	;# 
   339  071B                     	;# 
   340  071C                     	;# 
   341  071D                     	;# 
   342  0791                     	;# 
   343  0791                     	;# 
   344  0792                     	;# 
   345  0793                     	;# 
   346  0793                     	;# 
   347  0794                     	;# 
   348  0795                     	;# 
   349  0795                     	;# 
   350  0796                     	;# 
   351  0797                     	;# 
   352  0797                     	;# 
   353  0798                     	;# 
   354  0799                     	;# 
   355  079A                     	;# 
   356  080C                     	;# 
   357  080C                     	;# 
   358  080D                     	;# 
   359  080E                     	;# 
   360  080E                     	;# 
   361  080F                     	;# 
   362  0810                     	;# 
   363  0810                     	;# 
   364  0811                     	;# 
   365  0812                     	;# 
   366  0812                     	;# 
   367  0813                     	;# 
   368  0814                     	;# 
   369  0815                     	;# 
   370  0816                     	;# 
   371  0817                     	;# 
   372  0818                     	;# 
   373  0819                     	;# 
   374  081A                     	;# 
   375  081A                     	;# 
   376  081B                     	;# 
   377  081C                     	;# 
   378  081C                     	;# 
   379  081D                     	;# 
   380  088C                     	;# 
   381  088D                     	;# 
   382  088E                     	;# 
   383  088F                     	;# 
   384  088F                     	;# 
   385  0890                     	;# 
   386  0891                     	;# 
   387  0892                     	;# 
   388  0893                     	;# 
   389  0893                     	;# 
   390  0894                     	;# 
   391  0895                     	;# 
   392  0896                     	;# 
   393  0897                     	;# 
   394  0897                     	;# 
   395  0898                     	;# 
   396  0899                     	;# 
   397  0D8C                     	;# 
   398  0D8C                     	;# 
   399  0D8D                     	;# 
   400  0D8E                     	;# 
   401  0D8F                     	;# 
   402  0D8F                     	;# 
   403  0D90                     	;# 
   404  0D91                     	;# 
   405  0D92                     	;# 
   406  0D92                     	;# 
   407  0D93                     	;# 
   408  0D94                     	;# 
   409  0D95                     	;# 
   410  0D95                     	;# 
   411  0D96                     	;# 
   412  0D97                     	;# 
   413  0D98                     	;# 
   414  0D99                     	;# 
   415  0D9A                     	;# 
   416  0D9B                     	;# 
   417  0D9C                     	;# 
   418  0D9D                     	;# 
   419  0D9E                     	;# 
   420  0D9E                     	;# 
   421  0D9F                     	;# 
   422  0DA0                     	;# 
   423  0DA1                     	;# 
   424  0DA1                     	;# 
   425  0DA2                     	;# 
   426  0DA3                     	;# 
   427  0DA4                     	;# 
   428  0DA4                     	;# 
   429  0DA5                     	;# 
   430  0DA6                     	;# 
   431  0DA7                     	;# 
   432  0DA7                     	;# 
   433  0DA8                     	;# 
   434  0DA9                     	;# 
   435  0DAA                     	;# 
   436  0DAB                     	;# 
   437  0DAC                     	;# 
   438  0DAD                     	;# 
   439  0DAE                     	;# 
   440  0DAF                     	;# 
   441  0E0F                     	;# 
   442  0E10                     	;# 
   443  0E11                     	;# 
   444  0E12                     	;# 
   445  0E13                     	;# 
   446  0E14                     	;# 
   447  0E15                     	;# 
   448  0E16                     	;# 
   449  0E17                     	;# 
   450  0E18                     	;# 
   451  0E19                     	;# 
   452  0E1A                     	;# 
   453  0E1B                     	;# 
   454  0E1C                     	;# 
   455  0E1D                     	;# 
   456  0E1E                     	;# 
   457  0E1F                     	;# 
   458  0E20                     	;# 
   459  0E21                     	;# 
   460  0E22                     	;# 
   461  0E23                     	;# 
   462  0E24                     	;# 
   463  0E25                     	;# 
   464  0E26                     	;# 
   465  0E27                     	;# 
   466  0E28                     	;# 
   467  0E29                     	;# 
   468  0E2A                     	;# 
   469  0E2B                     	;# 
   470  0E2C                     	;# 
   471  0E2D                     	;# 
   472  0E2E                     	;# 
   473  0E90                     	;# 
   474  0E91                     	;# 
   475  0E92                     	;# 
   476  0E94                     	;# 
   477  0E95                     	;# 
   478  0E9C                     	;# 
   479  0E9D                     	;# 
   480  0E9E                     	;# 
   481  0E9F                     	;# 
   482  0EA0                     	;# 
   483  0EA1                     	;# 
   484  0EA2                     	;# 
   485  0EA3                     	;# 
   486  0EA4                     	;# 
   487  0EA5                     	;# 
   488  0EA6                     	;# 
   489  0EA7                     	;# 
   490  0F0F                     	;# 
   491  0F10                     	;# 
   492  0F11                     	;# 
   493  0F12                     	;# 
   494  0F13                     	;# 
   495  0F14                     	;# 
   496  0F15                     	;# 
   497  0F16                     	;# 
   498  0F17                     	;# 
   499  0F18                     	;# 
   500  0F19                     	;# 
   501  0F1A                     	;# 
   502  0F1B                     	;# 
   503  0F1C                     	;# 
   504  0F1D                     	;# 
   505  0F1E                     	;# 
   506  0F1F                     	;# 
   507  0F20                     	;# 
   508  0F21                     	;# 
   509  0F22                     	;# 
   510  0F23                     	;# 
   511  0F24                     	;# 
   512  0F25                     	;# 
   513  0F26                     	;# 
   514  0F27                     	;# 
   515  0F28                     	;# 
   516  0F29                     	;# 
   517  0F2A                     	;# 
   518  0F2B                     	;# 
   519  0F2C                     	;# 
   520  0F2D                     	;# 
   521  0F2E                     	;# 
   522  0F2F                     	;# 
   523  0F30                     	;# 
   524  0F31                     	;# 
   525  0F32                     	;# 
   526  0F33                     	;# 
   527  0F34                     	;# 
   528  0F35                     	;# 
   529  0F36                     	;# 
   530  0F37                     	;# 
   531  0FE4                     	;# 
   532  0FE5                     	;# 
   533  0FE6                     	;# 
   534  0FE7                     	;# 
   535  0FE8                     	;# 
   536  0FE9                     	;# 
   537  0FEA                     	;# 
   538  0FEB                     	;# 
   539  0FED                     	;# 
   540  0FEE                     	;# 
   541  0FEF                     	;# 
   542  0000                     	;# 
   543  0001                     	;# 
   544  0002                     	;# 
   545  0003                     	;# 
   546  0004                     	;# 
   547  0005                     	;# 
   548  0006                     	;# 
   549  0007                     	;# 
   550  0008                     	;# 
   551  0009                     	;# 
   552  000A                     	;# 
   553  000B                     	;# 
   554  000C                     	;# 
   555  000D                     	;# 
   556  000E                     	;# 
   557  0010                     	;# 
   558  0011                     	;# 
   559  0012                     	;# 
   560  0013                     	;# 
   561  0014                     	;# 
   562  0015                     	;# 
   563  0016                     	;# 
   564  0016                     	;# 
   565  0017                     	;# 
   566  0018                     	;# 
   567  0019                     	;# 
   568  001A                     	;# 
   569  001A                     	;# 
   570  001B                     	;# 
   571  001B                     	;# 
   572  001C                     	;# 
   573  001D                     	;# 
   574  001E                     	;# 
   575  001F                     	;# 
   576  008C                     	;# 
   577  008D                     	;# 
   578  008E                     	;# 
   579  0090                     	;# 
   580  0091                     	;# 
   581  0092                     	;# 
   582  0093                     	;# 
   583  0094                     	;# 
   584  0095                     	;# 
   585  0096                     	;# 
   586  0098                     	;# 
   587  0099                     	;# 
   588  009A                     	;# 
   589  009B                     	;# 
   590  009B                     	;# 
   591  009C                     	;# 
   592  009D                     	;# 
   593  009E                     	;# 
   594  009F                     	;# 
   595  010C                     	;# 
   596  010D                     	;# 
   597  010E                     	;# 
   598  0111                     	;# 
   599  0112                     	;# 
   600  0113                     	;# 
   601  0114                     	;# 
   602  0115                     	;# 
   603  0116                     	;# 
   604  0117                     	;# 
   605  0118                     	;# 
   606  0119                     	;# 
   607  011C                     	;# 
   608  018C                     	;# 
   609  018D                     	;# 
   610  018E                     	;# 
   611  0191                     	;# 
   612  0191                     	;# 
   613  0192                     	;# 
   614  0193                     	;# 
   615  0193                     	;# 
   616  0194                     	;# 
   617  0195                     	;# 
   618  0196                     	;# 
   619  0197                     	;# 
   620  0199                     	;# 
   621  0199                     	;# 
   622  0199                     	;# 
   623  019A                     	;# 
   624  019A                     	;# 
   625  019A                     	;# 
   626  019B                     	;# 
   627  019B                     	;# 
   628  019B                     	;# 
   629  019B                     	;# 
   630  019B                     	;# 
   631  019C                     	;# 
   632  019C                     	;# 
   633  019C                     	;# 
   634  019D                     	;# 
   635  019D                     	;# 
   636  019D                     	;# 
   637  019E                     	;# 
   638  019E                     	;# 
   639  019E                     	;# 
   640  019F                     	;# 
   641  019F                     	;# 
   642  019F                     	;# 
   643  019F                     	;# 
   644  019F                     	;# 
   645  020C                     	;# 
   646  020D                     	;# 
   647  020E                     	;# 
   648  0211                     	;# 
   649  0211                     	;# 
   650  0212                     	;# 
   651  0212                     	;# 
   652  0213                     	;# 
   653  0213                     	;# 
   654  0214                     	;# 
   655  0214                     	;# 
   656  0215                     	;# 
   657  0215                     	;# 
   658  0215                     	;# 
   659  0215                     	;# 
   660  0216                     	;# 
   661  0216                     	;# 
   662  0217                     	;# 
   663  0217                     	;# 
   664  028C                     	;# 
   665  028D                     	;# 
   666  028E                     	;# 
   667  0291                     	;# 
   668  0291                     	;# 
   669  0292                     	;# 
   670  0293                     	;# 
   671  0294                     	;# 
   672  0298                     	;# 
   673  0298                     	;# 
   674  0299                     	;# 
   675  029A                     	;# 
   676  029B                     	;# 
   677  029E                     	;# 
   678  030C                     	;# 
   679  030D                     	;# 
   680  030E                     	;# 
   681  038C                     	;# 
   682  038D                     	;# 
   683  038E                     	;# 
   684  0391                     	;# 
   685  0392                     	;# 
   686  0393                     	;# 
   687  0394                     	;# 
   688  0395                     	;# 
   689  0396                     	;# 
   690  0397                     	;# 
   691  0398                     	;# 
   692  0399                     	;# 
   693  040E                     	;# 
   694  0413                     	;# 
   695  0413                     	;# 
   696  0414                     	;# 
   697  0414                     	;# 
   698  0415                     	;# 
   699  0416                     	;# 
   700  0417                     	;# 
   701  0418                     	;# 
   702  041A                     	;# 
   703  041A                     	;# 
   704  041B                     	;# 
   705  041B                     	;# 
   706  041C                     	;# 
   707  041D                     	;# 
   708  041E                     	;# 
   709  041F                     	;# 
   710  0493                     	;# 
   711  0494                     	;# 
   712  0495                     	;# 
   713  0496                     	;# 
   714  049A                     	;# 
   715  049B                     	;# 
   716  049C                     	;# 
   717  049D                     	;# 
   718  058C                     	;# 
   719  058C                     	;# 
   720  058D                     	;# 
   721  058E                     	;# 
   722  058E                     	;# 
   723  058F                     	;# 
   724  0590                     	;# 
   725  0590                     	;# 
   726  0591                     	;# 
   727  0592                     	;# 
   728  0592                     	;# 
   729  0593                     	;# 
   730  0594                     	;# 
   731  0594                     	;# 
   732  0595                     	;# 
   733  0596                     	;# 
   734  0596                     	;# 
   735  0597                     	;# 
   736  0598                     	;# 
   737  0599                     	;# 
   738  059A                     	;# 
   739  059B                     	;# 
   740  059B                     	;# 
   741  059C                     	;# 
   742  059D                     	;# 
   743  060C                     	;# 
   744  060C                     	;# 
   745  060D                     	;# 
   746  060E                     	;# 
   747  060F                     	;# 
   748  060F                     	;# 
   749  0610                     	;# 
   750  0611                     	;# 
   751  0612                     	;# 
   752  0613                     	;# 
   753  0614                     	;# 
   754  0617                     	;# 
   755  0618                     	;# 
   756  0619                     	;# 
   757  061A                     	;# 
   758  061B                     	;# 
   759  061C                     	;# 
   760  0691                     	;# 
   761  0692                     	;# 
   762  0693                     	;# 
   763  0694                     	;# 
   764  0695                     	;# 
   765  0696                     	;# 
   766  0697                     	;# 
   767  0699                     	;# 
   768  069A                     	;# 
   769  0711                     	;# 
   770  0712                     	;# 
   771  0713                     	;# 
   772  0714                     	;# 
   773  0715                     	;# 
   774  0718                     	;# 
   775  0718                     	;# 
   776  0719                     	;# 
   777  071A                     	;# 
   778  071A                     	;# 
   779  071B                     	;# 
   780  071C                     	;# 
   781  071D                     	;# 
   782  0791                     	;# 
   783  0791                     	;# 
   784  0792                     	;# 
   785  0793                     	;# 
   786  0793                     	;# 
   787  0794                     	;# 
   788  0795                     	;# 
   789  0795                     	;# 
   790  0796                     	;# 
   791  0797                     	;# 
   792  0797                     	;# 
   793  0798                     	;# 
   794  0799                     	;# 
   795  079A                     	;# 
   796  080C                     	;# 
   797  080C                     	;# 
   798  080D                     	;# 
   799  080E                     	;# 
   800  080E                     	;# 
   801  080F                     	;# 
   802  0810                     	;# 
   803  0810                     	;# 
   804  0811                     	;# 
   805  0812                     	;# 
   806  0812                     	;# 
   807  0813                     	;# 
   808  0814                     	;# 
   809  0815                     	;# 
   810  0816                     	;# 
   811  0817                     	;# 
   812  0818                     	;# 
   813  0819                     	;# 
   814  081A                     	;# 
   815  081A                     	;# 
   816  081B                     	;# 
   817  081C                     	;# 
   818  081C                     	;# 
   819  081D                     	;# 
   820  088C                     	;# 
   821  088D                     	;# 
   822  088E                     	;# 
   823  088F                     	;# 
   824  088F                     	;# 
   825  0890                     	;# 
   826  0891                     	;# 
   827  0892                     	;# 
   828  0893                     	;# 
   829  0893                     	;# 
   830  0894                     	;# 
   831  0895                     	;# 
   832  0896                     	;# 
   833  0897                     	;# 
   834  0897                     	;# 
   835  0898                     	;# 
   836  0899                     	;# 
   837  0D8C                     	;# 
   838  0D8C                     	;# 
   839  0D8D                     	;# 
   840  0D8E                     	;# 
   841  0D8F                     	;# 
   842  0D8F                     	;# 
   843  0D90                     	;# 
   844  0D91                     	;# 
   845  0D92                     	;# 
   846  0D92                     	;# 
   847  0D93                     	;# 
   848  0D94                     	;# 
   849  0D95                     	;# 
   850  0D95                     	;# 
   851  0D96                     	;# 
   852  0D97                     	;# 
   853  0D98                     	;# 
   854  0D99                     	;# 
   855  0D9A                     	;# 
   856  0D9B                     	;# 
   857  0D9C                     	;# 
   858  0D9D                     	;# 
   859  0D9E                     	;# 
   860  0D9E                     	;# 
   861  0D9F                     	;# 
   862  0DA0                     	;# 
   863  0DA1                     	;# 
   864  0DA1                     	;# 
   865  0DA2                     	;# 
   866  0DA3                     	;# 
   867  0DA4                     	;# 
   868  0DA4                     	;# 
   869  0DA5                     	;# 
   870  0DA6                     	;# 
   871  0DA7                     	;# 
   872  0DA7                     	;# 
   873  0DA8                     	;# 
   874  0DA9                     	;# 
   875  0DAA                     	;# 
   876  0DAB                     	;# 
   877  0DAC                     	;# 
   878  0DAD                     	;# 
   879  0DAE                     	;# 
   880  0DAF                     	;# 
   881  0E0F                     	;# 
   882  0E10                     	;# 
   883  0E11                     	;# 
   884  0E12                     	;# 
   885  0E13                     	;# 
   886  0E14                     	;# 
   887  0E15                     	;# 
   888  0E16                     	;# 
   889  0E17                     	;# 
   890  0E18                     	;# 
   891  0E19                     	;# 
   892  0E1A                     	;# 
   893  0E1B                     	;# 
   894  0E1C                     	;# 
   895  0E1D                     	;# 
   896  0E1E                     	;# 
   897  0E1F                     	;# 
   898  0E20                     	;# 
   899  0E21                     	;# 
   900  0E22                     	;# 
   901  0E23                     	;# 
   902  0E24                     	;# 
   903  0E25                     	;# 
   904  0E26                     	;# 
   905  0E27                     	;# 
   906  0E28                     	;# 
   907  0E29                     	;# 
   908  0E2A                     	;# 
   909  0E2B                     	;# 
   910  0E2C                     	;# 
   911  0E2D                     	;# 
   912  0E2E                     	;# 
   913  0E90                     	;# 
   914  0E91                     	;# 
   915  0E92                     	;# 
   916  0E94                     	;# 
   917  0E95                     	;# 
   918  0E9C                     	;# 
   919  0E9D                     	;# 
   920  0E9E                     	;# 
   921  0E9F                     	;# 
   922  0EA0                     	;# 
   923  0EA1                     	;# 
   924  0EA2                     	;# 
   925  0EA3                     	;# 
   926  0EA4                     	;# 
   927  0EA5                     	;# 
   928  0EA6                     	;# 
   929  0EA7                     	;# 
   930  0F0F                     	;# 
   931  0F10                     	;# 
   932  0F11                     	;# 
   933  0F12                     	;# 
   934  0F13                     	;# 
   935  0F14                     	;# 
   936  0F15                     	;# 
   937  0F16                     	;# 
   938  0F17                     	;# 
   939  0F18                     	;# 
   940  0F19                     	;# 
   941  0F1A                     	;# 
   942  0F1B                     	;# 
   943  0F1C                     	;# 
   944  0F1D                     	;# 
   945  0F1E                     	;# 
   946  0F1F                     	;# 
   947  0F20                     	;# 
   948  0F21                     	;# 
   949  0F22                     	;# 
   950  0F23                     	;# 
   951  0F24                     	;# 
   952  0F25                     	;# 
   953  0F26                     	;# 
   954  0F27                     	;# 
   955  0F28                     	;# 
   956  0F29                     	;# 
   957  0F2A                     	;# 
   958  0F2B                     	;# 
   959  0F2C                     	;# 
   960  0F2D                     	;# 
   961  0F2E                     	;# 
   962  0F2F                     	;# 
   963  0F30                     	;# 
   964  0F31                     	;# 
   965  0F32                     	;# 
   966  0F33                     	;# 
   967  0F34                     	;# 
   968  0F35                     	;# 
   969  0F36                     	;# 
   970  0F37                     	;# 
   971  0FE4                     	;# 
   972  0FE5                     	;# 
   973  0FE6                     	;# 
   974  0FE7                     	;# 
   975  0FE8                     	;# 
   976  0FE9                     	;# 
   977  0FEA                     	;# 
   978  0FEB                     	;# 
   979  0FED                     	;# 
   980  0FEE                     	;# 
   981  0FEF                     	;# 
   982  0000                     	;# 
   983  0001                     	;# 
   984  0002                     	;# 
   985  0003                     	;# 
   986  0004                     	;# 
   987  0005                     	;# 
   988  0006                     	;# 
   989  0007                     	;# 
   990  0008                     	;# 
   991  0009                     	;# 
   992  000A                     	;# 
   993  000B                     	;# 
   994  000C                     	;# 
   995  000D                     	;# 
   996  000E                     	;# 
   997  0010                     	;# 
   998  0011                     	;# 
   999  0012                     	;# 
  1000  0013                     	;# 
  1001  0014                     	;# 
  1002  0015                     	;# 
  1003  0016                     	;# 
  1004  0016                     	;# 
  1005  0017                     	;# 
  1006  0018                     	;# 
  1007  0019                     	;# 
  1008  001A                     	;# 
  1009  001A                     	;# 
  1010  001B                     	;# 
  1011  001B                     	;# 
  1012  001C                     	;# 
  1013  001D                     	;# 
  1014  001E                     	;# 
  1015  001F                     	;# 
  1016  008C                     	;# 
  1017  008D                     	;# 
  1018  008E                     	;# 
  1019  0090                     	;# 
  1020  0091                     	;# 
  1021  0092                     	;# 
  1022  0093                     	;# 
  1023  0094                     	;# 
  1024  0095                     	;# 
  1025  0096                     	;# 
  1026  0098                     	;# 
  1027  0099                     	;# 
  1028  009A                     	;# 
  1029  009B                     	;# 
  1030  009B                     	;# 
  1031  009C                     	;# 
  1032  009D                     	;# 
  1033  009E                     	;# 
  1034  009F                     	;# 
  1035  010C                     	;# 
  1036  010D                     	;# 
  1037  010E                     	;# 
  1038  0111                     	;# 
  1039  0112                     	;# 
  1040  0113                     	;# 
  1041  0114                     	;# 
  1042  0115                     	;# 
  1043  0116                     	;# 
  1044  0117                     	;# 
  1045  0118                     	;# 
  1046  0119                     	;# 
  1047  011C                     	;# 
  1048  018C                     	;# 
  1049  018D                     	;# 
  1050  018E                     	;# 
  1051  0191                     	;# 
  1052  0191                     	;# 
  1053  0192                     	;# 
  1054  0193                     	;# 
  1055  0193                     	;# 
  1056  0194                     	;# 
  1057  0195                     	;# 
  1058  0196                     	;# 
  1059  0197                     	;# 
  1060  0199                     	;# 
  1061  0199                     	;# 
  1062  0199                     	;# 
  1063  019A                     	;# 
  1064  019A                     	;# 
  1065  019A                     	;# 
  1066  019B                     	;# 
  1067  019B                     	;# 
  1068  019B                     	;# 
  1069  019B                     	;# 
  1070  019B                     	;# 
  1071  019C                     	;# 
  1072  019C                     	;# 
  1073  019C                     	;# 
  1074  019D                     	;# 
  1075  019D                     	;# 
  1076  019D                     	;# 
  1077  019E                     	;# 
  1078  019E                     	;# 
  1079  019E                     	;# 
  1080  019F                     	;# 
  1081  019F                     	;# 
  1082  019F                     	;# 
  1083  019F                     	;# 
  1084  019F                     	;# 
  1085  020C                     	;# 
  1086  020D                     	;# 
  1087  020E                     	;# 
  1088  0211                     	;# 
  1089  0211                     	;# 
  1090  0212                     	;# 
  1091  0212                     	;# 
  1092  0213                     	;# 
  1093  0213                     	;# 
  1094  0214                     	;# 
  1095  0214                     	;# 
  1096  0215                     	;# 
  1097  0215                     	;# 
  1098  0215                     	;# 
  1099  0215                     	;# 
  1100  0216                     	;# 
  1101  0216                     	;# 
  1102  0217                     	;# 
  1103  0217                     	;# 
  1104  028C                     	;# 
  1105  028D                     	;# 
  1106  028E                     	;# 
  1107  0291                     	;# 
  1108  0291                     	;# 
  1109  0292                     	;# 
  1110  0293                     	;# 
  1111  0294                     	;# 
  1112  0298                     	;# 
  1113  0298                     	;# 
  1114  0299                     	;# 
  1115  029A                     	;# 
  1116  029B                     	;# 
  1117  029E                     	;# 
  1118  030C                     	;# 
  1119  030D                     	;# 
  1120  030E                     	;# 
  1121  038C                     	;# 
  1122  038D                     	;# 
  1123  038E                     	;# 
  1124  0391                     	;# 
  1125  0392                     	;# 
  1126  0393                     	;# 
  1127  0394                     	;# 
  1128  0395                     	;# 
  1129  0396                     	;# 
  1130  0397                     	;# 
  1131  0398                     	;# 
  1132  0399                     	;# 
  1133  040E                     	;# 
  1134  0413                     	;# 
  1135  0413                     	;# 
  1136  0414                     	;# 
  1137  0414                     	;# 
  1138  0415                     	;# 
  1139  0416                     	;# 
  1140  0417                     	;# 
  1141  0418                     	;# 
  1142  041A                     	;# 
  1143  041A                     	;# 
  1144  041B                     	;# 
  1145  041B                     	;# 
  1146  041C                     	;# 
  1147  041D                     	;# 
  1148  041E                     	;# 
  1149  041F                     	;# 
  1150  0493                     	;# 
  1151  0494                     	;# 
  1152  0495                     	;# 
  1153  0496                     	;# 
  1154  049A                     	;# 
  1155  049B                     	;# 
  1156  049C                     	;# 
  1157  049D                     	;# 
  1158  058C                     	;# 
  1159  058C                     	;# 
  1160  058D                     	;# 
  1161  058E                     	;# 
  1162  058E                     	;# 
  1163  058F                     	;# 
  1164  0590                     	;# 
  1165  0590                     	;# 
  1166  0591                     	;# 
  1167  0592                     	;# 
  1168  0592                     	;# 
  1169  0593                     	;# 
  1170  0594                     	;# 
  1171  0594                     	;# 
  1172  0595                     	;# 
  1173  0596                     	;# 
  1174  0596                     	;# 
  1175  0597                     	;# 
  1176  0598                     	;# 
  1177  0599                     	;# 
  1178  059A                     	;# 
  1179  059B                     	;# 
  1180  059B                     	;# 
  1181  059C                     	;# 
  1182  059D                     	;# 
  1183  060C                     	;# 
  1184  060C                     	;# 
  1185  060D                     	;# 
  1186  060E                     	;# 
  1187  060F                     	;# 
  1188  060F                     	;# 
  1189  0610                     	;# 
  1190  0611                     	;# 
  1191  0612                     	;# 
  1192  0613                     	;# 
  1193  0614                     	;# 
  1194  0617                     	;# 
  1195  0618                     	;# 
  1196  0619                     	;# 
  1197  061A                     	;# 
  1198  061B                     	;# 
  1199  061C                     	;# 
  1200  0691                     	;# 
  1201  0692                     	;# 
  1202  0693                     	;# 
  1203  0694                     	;# 
  1204  0695                     	;# 
  1205  0696                     	;# 
  1206  0697                     	;# 
  1207  0699                     	;# 
  1208  069A                     	;# 
  1209  0711                     	;# 
  1210  0712                     	;# 
  1211  0713                     	;# 
  1212  0714                     	;# 
  1213  0715                     	;# 
  1214  0718                     	;# 
  1215  0718                     	;# 
  1216  0719                     	;# 
  1217  071A                     	;# 
  1218  071A                     	;# 
  1219  071B                     	;# 
  1220  071C                     	;# 
  1221  071D                     	;# 
  1222  0791                     	;# 
  1223  0791                     	;# 
  1224  0792                     	;# 
  1225  0793                     	;# 
  1226  0793                     	;# 
  1227  0794                     	;# 
  1228  0795                     	;# 
  1229  0795                     	;# 
  1230  0796                     	;# 
  1231  0797                     	;# 
  1232  0797                     	;# 
  1233  0798                     	;# 
  1234  0799                     	;# 
  1235  079A                     	;# 
  1236  080C                     	;# 
  1237  080C                     	;# 
  1238  080D                     	;# 
  1239  080E                     	;# 
  1240  080E                     	;# 
  1241  080F                     	;# 
  1242  0810                     	;# 
  1243  0810                     	;# 
  1244  0811                     	;# 
  1245  0812                     	;# 
  1246  0812                     	;# 
  1247  0813                     	;# 
  1248  0814                     	;# 
  1249  0815                     	;# 
  1250  0816                     	;# 
  1251  0817                     	;# 
  1252  0818                     	;# 
  1253  0819                     	;# 
  1254  081A                     	;# 
  1255  081A                     	;# 
  1256  081B                     	;# 
  1257  081C                     	;# 
  1258  081C                     	;# 
  1259  081D                     	;# 
  1260  088C                     	;# 
  1261  088D                     	;# 
  1262  088E                     	;# 
  1263  088F                     	;# 
  1264  088F                     	;# 
  1265  0890                     	;# 
  1266  0891                     	;# 
  1267  0892                     	;# 
  1268  0893                     	;# 
  1269  0893                     	;# 
  1270  0894                     	;# 
  1271  0895                     	;# 
  1272  0896                     	;# 
  1273  0897                     	;# 
  1274  0897                     	;# 
  1275  0898                     	;# 
  1276  0899                     	;# 
  1277  0D8C                     	;# 
  1278  0D8C                     	;# 
  1279  0D8D                     	;# 
  1280  0D8E                     	;# 
  1281  0D8F                     	;# 
  1282  0D8F                     	;# 
  1283  0D90                     	;# 
  1284  0D91                     	;# 
  1285  0D92                     	;# 
  1286  0D92                     	;# 
  1287  0D93                     	;# 
  1288  0D94                     	;# 
  1289  0D95                     	;# 
  1290  0D95                     	;# 
  1291  0D96                     	;# 
  1292  0D97                     	;# 
  1293  0D98                     	;# 
  1294  0D99                     	;# 
  1295  0D9A                     	;# 
  1296  0D9B                     	;# 
  1297  0D9C                     	;# 
  1298  0D9D                     	;# 
  1299  0D9E                     	;# 
  1300  0D9E                     	;# 
  1301  0D9F                     	;# 
  1302  0DA0                     	;# 
  1303  0DA1                     	;# 
  1304  0DA1                     	;# 
  1305  0DA2                     	;# 
  1306  0DA3                     	;# 
  1307  0DA4                     	;# 
  1308  0DA4                     	;# 
  1309  0DA5                     	;# 
  1310  0DA6                     	;# 
  1311  0DA7                     	;# 
  1312  0DA7                     	;# 
  1313  0DA8                     	;# 
  1314  0DA9                     	;# 
  1315  0DAA                     	;# 
  1316  0DAB                     	;# 
  1317  0DAC                     	;# 
  1318  0DAD                     	;# 
  1319  0DAE                     	;# 
  1320  0DAF                     	;# 
  1321  0E0F                     	;# 
  1322  0E10                     	;# 
  1323  0E11                     	;# 
  1324  0E12                     	;# 
  1325  0E13                     	;# 
  1326  0E14                     	;# 
  1327  0E15                     	;# 
  1328  0E16                     	;# 
  1329  0E17                     	;# 
  1330  0E18                     	;# 
  1331  0E19                     	;# 
  1332  0E1A                     	;# 
  1333  0E1B                     	;# 
  1334  0E1C                     	;# 
  1335  0E1D                     	;# 
  1336  0E1E                     	;# 
  1337  0E1F                     	;# 
  1338  0E20                     	;# 
  1339  0E21                     	;# 
  1340  0E22                     	;# 
  1341  0E23                     	;# 
  1342  0E24                     	;# 
  1343  0E25                     	;# 
  1344  0E26                     	;# 
  1345  0E27                     	;# 
  1346  0E28                     	;# 
  1347  0E29                     	;# 
  1348  0E2A                     	;# 
  1349  0E2B                     	;# 
  1350  0E2C                     	;# 
  1351  0E2D                     	;# 
  1352  0E2E                     	;# 
  1353  0E90                     	;# 
  1354  0E91                     	;# 
  1355  0E92                     	;# 
  1356  0E94                     	;# 
  1357  0E95                     	;# 
  1358  0E9C                     	;# 
  1359  0E9D                     	;# 
  1360  0E9E                     	;# 
  1361  0E9F                     	;# 
  1362  0EA0                     	;# 
  1363  0EA1                     	;# 
  1364  0EA2                     	;# 
  1365  0EA3                     	;# 
  1366  0EA4                     	;# 
  1367  0EA5                     	;# 
  1368  0EA6                     	;# 
  1369  0EA7                     	;# 
  1370  0F0F                     	;# 
  1371  0F10                     	;# 
  1372  0F11                     	;# 
  1373  0F12                     	;# 
  1374  0F13                     	;# 
  1375  0F14                     	;# 
  1376  0F15                     	;# 
  1377  0F16                     	;# 
  1378  0F17                     	;# 
  1379  0F18                     	;# 
  1380  0F19                     	;# 
  1381  0F1A                     	;# 
  1382  0F1B                     	;# 
  1383  0F1C                     	;# 
  1384  0F1D                     	;# 
  1385  0F1E                     	;# 
  1386  0F1F                     	;# 
  1387  0F20                     	;# 
  1388  0F21                     	;# 
  1389  0F22                     	;# 
  1390  0F23                     	;# 
  1391  0F24                     	;# 
  1392  0F25                     	;# 
  1393  0F26                     	;# 
  1394  0F27                     	;# 
  1395  0F28                     	;# 
  1396  0F29                     	;# 
  1397  0F2A                     	;# 
  1398  0F2B                     	;# 
  1399  0F2C                     	;# 
  1400  0F2D                     	;# 
  1401  0F2E                     	;# 
  1402  0F2F                     	;# 
  1403  0F30                     	;# 
  1404  0F31                     	;# 
  1405  0F32                     	;# 
  1406  0F33                     	;# 
  1407  0F34                     	;# 
  1408  0F35                     	;# 
  1409  0F36                     	;# 
  1410  0F37                     	;# 
  1411  0FE4                     	;# 
  1412  0FE5                     	;# 
  1413  0FE6                     	;# 
  1414  0FE7                     	;# 
  1415  0FE8                     	;# 
  1416  0FE9                     	;# 
  1417  0FEA                     	;# 
  1418  0FEB                     	;# 
  1419  0FED                     	;# 
  1420  0FEE                     	;# 
  1421  0FEF                     	;# 
  1422  0000                     	;# 
  1423  0001                     	;# 
  1424  0002                     	;# 
  1425  0003                     	;# 
  1426  0004                     	;# 
  1427  0005                     	;# 
  1428  0006                     	;# 
  1429  0007                     	;# 
  1430  0008                     	;# 
  1431  0009                     	;# 
  1432  000A                     	;# 
  1433  000B                     	;# 
  1434  000C                     	;# 
  1435  000D                     	;# 
  1436  000E                     	;# 
  1437  0010                     	;# 
  1438  0011                     	;# 
  1439  0012                     	;# 
  1440  0013                     	;# 
  1441  0014                     	;# 
  1442  0015                     	;# 
  1443  0016                     	;# 
  1444  0016                     	;# 
  1445  0017                     	;# 
  1446  0018                     	;# 
  1447  0019                     	;# 
  1448  001A                     	;# 
  1449  001A                     	;# 
  1450  001B                     	;# 
  1451  001B                     	;# 
  1452  001C                     	;# 
  1453  001D                     	;# 
  1454  001E                     	;# 
  1455  001F                     	;# 
  1456  008C                     	;# 
  1457  008D                     	;# 
  1458  008E                     	;# 
  1459  0090                     	;# 
  1460  0091                     	;# 
  1461  0092                     	;# 
  1462  0093                     	;# 
  1463  0094                     	;# 
  1464  0095                     	;# 
  1465  0096                     	;# 
  1466  0098                     	;# 
  1467  0099                     	;# 
  1468  009A                     	;# 
  1469  009B                     	;# 
  1470  009B                     	;# 
  1471  009C                     	;# 
  1472  009D                     	;# 
  1473  009E                     	;# 
  1474  009F                     	;# 
  1475  010C                     	;# 
  1476  010D                     	;# 
  1477  010E                     	;# 
  1478  0111                     	;# 
  1479  0112                     	;# 
  1480  0113                     	;# 
  1481  0114                     	;# 
  1482  0115                     	;# 
  1483  0116                     	;# 
  1484  0117                     	;# 
  1485  0118                     	;# 
  1486  0119                     	;# 
  1487  011C                     	;# 
  1488  018C                     	;# 
  1489  018D                     	;# 
  1490  018E                     	;# 
  1491  0191                     	;# 
  1492  0191                     	;# 
  1493  0192                     	;# 
  1494  0193                     	;# 
  1495  0193                     	;# 
  1496  0194                     	;# 
  1497  0195                     	;# 
  1498  0196                     	;# 
  1499  0197                     	;# 
  1500  0199                     	;# 
  1501  0199                     	;# 
  1502  0199                     	;# 
  1503  019A                     	;# 
  1504  019A                     	;# 
  1505  019A                     	;# 
  1506  019B                     	;# 
  1507  019B                     	;# 
  1508  019B                     	;# 
  1509  019B                     	;# 
  1510  019B                     	;# 
  1511  019C                     	;# 
  1512  019C                     	;# 
  1513  019C                     	;# 
  1514  019D                     	;# 
  1515  019D                     	;# 
  1516  019D                     	;# 
  1517  019E                     	;# 
  1518  019E                     	;# 
  1519  019E                     	;# 
  1520  019F                     	;# 
  1521  019F                     	;# 
  1522  019F                     	;# 
  1523  019F                     	;# 
  1524  019F                     	;# 
  1525  020C                     	;# 
  1526  020D                     	;# 
  1527  020E                     	;# 
  1528  0211                     	;# 
  1529  0211                     	;# 
  1530  0212                     	;# 
  1531  0212                     	;# 
  1532  0213                     	;# 
  1533  0213                     	;# 
  1534  0214                     	;# 
  1535  0214                     	;# 
  1536  0215                     	;# 
  1537  0215                     	;# 
  1538  0215                     	;# 
  1539  0215                     	;# 
  1540  0216                     	;# 
  1541  0216                     	;# 
  1542  0217                     	;# 
  1543  0217                     	;# 
  1544  028C                     	;# 
  1545  028D                     	;# 
  1546  028E                     	;# 
  1547  0291                     	;# 
  1548  0291                     	;# 
  1549  0292                     	;# 
  1550  0293                     	;# 
  1551  0294                     	;# 
  1552  0298                     	;# 
  1553  0298                     	;# 
  1554  0299                     	;# 
  1555  029A                     	;# 
  1556  029B                     	;# 
  1557  029E                     	;# 
  1558  030C                     	;# 
  1559  030D                     	;# 
  1560  030E                     	;# 
  1561  038C                     	;# 
  1562  038D                     	;# 
  1563  038E                     	;# 
  1564  0391                     	;# 
  1565  0392                     	;# 
  1566  0393                     	;# 
  1567  0394                     	;# 
  1568  0395                     	;# 
  1569  0396                     	;# 
  1570  0397                     	;# 
  1571  0398                     	;# 
  1572  0399                     	;# 
  1573  040E                     	;# 
  1574  0413                     	;# 
  1575  0413                     	;# 
  1576  0414                     	;# 
  1577  0414                     	;# 
  1578  0415                     	;# 
  1579  0416                     	;# 
  1580  0417                     	;# 
  1581  0418                     	;# 
  1582  041A                     	;# 
  1583  041A                     	;# 
  1584  041B                     	;# 
  1585  041B                     	;# 
  1586  041C                     	;# 
  1587  041D                     	;# 
  1588  041E                     	;# 
  1589  041F                     	;# 
  1590  0493                     	;# 
  1591  0494                     	;# 
  1592  0495                     	;# 
  1593  0496                     	;# 
  1594  049A                     	;# 
  1595  049B                     	;# 
  1596  049C                     	;# 
  1597  049D                     	;# 
  1598  058C                     	;# 
  1599  058C                     	;# 
  1600  058D                     	;# 
  1601  058E                     	;# 
  1602  058E                     	;# 
  1603  058F                     	;# 
  1604  0590                     	;# 
  1605  0590                     	;# 
  1606  0591                     	;# 
  1607  0592                     	;# 
  1608  0592                     	;# 
  1609  0593                     	;# 
  1610  0594                     	;# 
  1611  0594                     	;# 
  1612  0595                     	;# 
  1613  0596                     	;# 
  1614  0596                     	;# 
  1615  0597                     	;# 
  1616  0598                     	;# 
  1617  0599                     	;# 
  1618  059A                     	;# 
  1619  059B                     	;# 
  1620  059B                     	;# 
  1621  059C                     	;# 
  1622  059D                     	;# 
  1623  060C                     	;# 
  1624  060C                     	;# 
  1625  060D                     	;# 
  1626  060E                     	;# 
  1627  060F                     	;# 
  1628  060F                     	;# 
  1629  0610                     	;# 
  1630  0611                     	;# 
  1631  0612                     	;# 
  1632  0613                     	;# 
  1633  0614                     	;# 
  1634  0617                     	;# 
  1635  0618                     	;# 
  1636  0619                     	;# 
  1637  061A                     	;# 
  1638  061B                     	;# 
  1639  061C                     	;# 
  1640  0691                     	;# 
  1641  0692                     	;# 
  1642  0693                     	;# 
  1643  0694                     	;# 
  1644  0695                     	;# 
  1645  0696                     	;# 
  1646  0697                     	;# 
  1647  0699                     	;# 
  1648  069A                     	;# 
  1649  0711                     	;# 
  1650  0712                     	;# 
  1651  0713                     	;# 
  1652  0714                     	;# 
  1653  0715                     	;# 
  1654  0718                     	;# 
  1655  0718                     	;# 
  1656  0719                     	;# 
  1657  071A                     	;# 
  1658  071A                     	;# 
  1659  071B                     	;# 
  1660  071C                     	;# 
  1661  071D                     	;# 
  1662  0791                     	;# 
  1663  0791                     	;# 
  1664  0792                     	;# 
  1665  0793                     	;# 
  1666  0793                     	;# 
  1667  0794                     	;# 
  1668  0795                     	;# 
  1669  0795                     	;# 
  1670  0796                     	;# 
  1671  0797                     	;# 
  1672  0797                     	;# 
  1673  0798                     	;# 
  1674  0799                     	;# 
  1675  079A                     	;# 
  1676  080C                     	;# 
  1677  080C                     	;# 
  1678  080D                     	;# 
  1679  080E                     	;# 
  1680  080E                     	;# 
  1681  080F                     	;# 
  1682  0810                     	;# 
  1683  0810                     	;# 
  1684  0811                     	;# 
  1685  0812                     	;# 
  1686  0812                     	;# 
  1687  0813                     	;# 
  1688  0814                     	;# 
  1689  0815                     	;# 
  1690  0816                     	;# 
  1691  0817                     	;# 
  1692  0818                     	;# 
  1693  0819                     	;# 
  1694  081A                     	;# 
  1695  081A                     	;# 
  1696  081B                     	;# 
  1697  081C                     	;# 
  1698  081C                     	;# 
  1699  081D                     	;# 
  1700  088C                     	;# 
  1701  088D                     	;# 
  1702  088E                     	;# 
  1703  088F                     	;# 
  1704  088F                     	;# 
  1705  0890                     	;# 
  1706  0891                     	;# 
  1707  0892                     	;# 
  1708  0893                     	;# 
  1709  0893                     	;# 
  1710  0894                     	;# 
  1711  0895                     	;# 
  1712  0896                     	;# 
  1713  0897                     	;# 
  1714  0897                     	;# 
  1715  0898                     	;# 
  1716  0899                     	;# 
  1717  0D8C                     	;# 
  1718  0D8C                     	;# 
  1719  0D8D                     	;# 
  1720  0D8E                     	;# 
  1721  0D8F                     	;# 
  1722  0D8F                     	;# 
  1723  0D90                     	;# 
  1724  0D91                     	;# 
  1725  0D92                     	;# 
  1726  0D92                     	;# 
  1727  0D93                     	;# 
  1728  0D94                     	;# 
  1729  0D95                     	;# 
  1730  0D95                     	;# 
  1731  0D96                     	;# 
  1732  0D97                     	;# 
  1733  0D98                     	;# 
  1734  0D99                     	;# 
  1735  0D9A                     	;# 
  1736  0D9B                     	;# 
  1737  0D9C                     	;# 
  1738  0D9D                     	;# 
  1739  0D9E                     	;# 
  1740  0D9E                     	;# 
  1741  0D9F                     	;# 
  1742  0DA0                     	;# 
  1743  0DA1                     	;# 
  1744  0DA1                     	;# 
  1745  0DA2                     	;# 
  1746  0DA3                     	;# 
  1747  0DA4                     	;# 
  1748  0DA4                     	;# 
  1749  0DA5                     	;# 
  1750  0DA6                     	;# 
  1751  0DA7                     	;# 
  1752  0DA7                     	;# 
  1753  0DA8                     	;# 
  1754  0DA9                     	;# 
  1755  0DAA                     	;# 
  1756  0DAB                     	;# 
  1757  0DAC                     	;# 
  1758  0DAD                     	;# 
  1759  0DAE                     	;# 
  1760  0DAF                     	;# 
  1761  0E0F                     	;# 
  1762  0E10                     	;# 
  1763  0E11                     	;# 
  1764  0E12                     	;# 
  1765  0E13                     	;# 
  1766  0E14                     	;# 
  1767  0E15                     	;# 
  1768  0E16                     	;# 
  1769  0E17                     	;# 
  1770  0E18                     	;# 
  1771  0E19                     	;# 
  1772  0E1A                     	;# 
  1773  0E1B                     	;# 
  1774  0E1C                     	;# 
  1775  0E1D                     	;# 
  1776  0E1E                     	;# 
  1777  0E1F                     	;# 
  1778  0E20                     	;# 
  1779  0E21                     	;# 
  1780  0E22                     	;# 
  1781  0E23                     	;# 
  1782  0E24                     	;# 
  1783  0E25                     	;# 
  1784  0E26                     	;# 
  1785  0E27                     	;# 
  1786  0E28                     	;# 
  1787  0E29                     	;# 
  1788  0E2A                     	;# 
  1789  0E2B                     	;# 
  1790  0E2C                     	;# 
  1791  0E2D                     	;# 
  1792  0E2E                     	;# 
  1793  0E90                     	;# 
  1794  0E91                     	;# 
  1795  0E92                     	;# 
  1796  0E94                     	;# 
  1797  0E95                     	;# 
  1798  0E9C                     	;# 
  1799  0E9D                     	;# 
  1800  0E9E                     	;# 
  1801  0E9F                     	;# 
  1802  0EA0                     	;# 
  1803  0EA1                     	;# 
  1804  0EA2                     	;# 
  1805  0EA3                     	;# 
  1806  0EA4                     	;# 
  1807  0EA5                     	;# 
  1808  0EA6                     	;# 
  1809  0EA7                     	;# 
  1810  0F0F                     	;# 
  1811  0F10                     	;# 
  1812  0F11                     	;# 
  1813  0F12                     	;# 
  1814  0F13                     	;# 
  1815  0F14                     	;# 
  1816  0F15                     	;# 
  1817  0F16                     	;# 
  1818  0F17                     	;# 
  1819  0F18                     	;# 
  1820  0F19                     	;# 
  1821  0F1A                     	;# 
  1822  0F1B                     	;# 
  1823  0F1C                     	;# 
  1824  0F1D                     	;# 
  1825  0F1E                     	;# 
  1826  0F1F                     	;# 
  1827  0F20                     	;# 
  1828  0F21                     	;# 
  1829  0F22                     	;# 
  1830  0F23                     	;# 
  1831  0F24                     	;# 
  1832  0F25                     	;# 
  1833  0F26                     	;# 
  1834  0F27                     	;# 
  1835  0F28                     	;# 
  1836  0F29                     	;# 
  1837  0F2A                     	;# 
  1838  0F2B                     	;# 
  1839  0F2C                     	;# 
  1840  0F2D                     	;# 
  1841  0F2E                     	;# 
  1842  0F2F                     	;# 
  1843  0F30                     	;# 
  1844  0F31                     	;# 
  1845  0F32                     	;# 
  1846  0F33                     	;# 
  1847  0F34                     	;# 
  1848  0F35                     	;# 
  1849  0F36                     	;# 
  1850  0F37                     	;# 
  1851  0FE4                     	;# 
  1852  0FE5                     	;# 
  1853  0FE6                     	;# 
  1854  0FE7                     	;# 
  1855  0FE8                     	;# 
  1856  0FE9                     	;# 
  1857  0FEA                     	;# 
  1858  0FEB                     	;# 
  1859  0FED                     	;# 
  1860  0FEE                     	;# 
  1861  0FEF                     	;# 
  1862  0000                     	;# 
  1863  0001                     	;# 
  1864  0002                     	;# 
  1865  0003                     	;# 
  1866  0004                     	;# 
  1867  0005                     	;# 
  1868  0006                     	;# 
  1869  0007                     	;# 
  1870  0008                     	;# 
  1871  0009                     	;# 
  1872  000A                     	;# 
  1873  000B                     	;# 
  1874  000C                     	;# 
  1875  000D                     	;# 
  1876  000E                     	;# 
  1877  0010                     	;# 
  1878  0011                     	;# 
  1879  0012                     	;# 
  1880  0013                     	;# 
  1881  0014                     	;# 
  1882  0015                     	;# 
  1883  0016                     	;# 
  1884  0016                     	;# 
  1885  0017                     	;# 
  1886  0018                     	;# 
  1887  0019                     	;# 
  1888  001A                     	;# 
  1889  001A                     	;# 
  1890  001B                     	;# 
  1891  001B                     	;# 
  1892  001C                     	;# 
  1893  001D                     	;# 
  1894  001E                     	;# 
  1895  001F                     	;# 
  1896  008C                     	;# 
  1897  008D                     	;# 
  1898  008E                     	;# 
  1899  0090                     	;# 
  1900  0091                     	;# 
  1901  0092                     	;# 
  1902  0093                     	;# 
  1903  0094                     	;# 
  1904  0095                     	;# 
  1905  0096                     	;# 
  1906  0098                     	;# 
  1907  0099                     	;# 
  1908  009A                     	;# 
  1909  009B                     	;# 
  1910  009B                     	;# 
  1911  009C                     	;# 
  1912  009D                     	;# 
  1913  009E                     	;# 
  1914  009F                     	;# 
  1915  010C                     	;# 
  1916  010D                     	;# 
  1917  010E                     	;# 
  1918  0111                     	;# 
  1919  0112                     	;# 
  1920  0113                     	;# 
  1921  0114                     	;# 
  1922  0115                     	;# 
  1923  0116                     	;# 
  1924  0117                     	;# 
  1925  0118                     	;# 
  1926  0119                     	;# 
  1927  011C                     	;# 
  1928  018C                     	;# 
  1929  018D                     	;# 
  1930  018E                     	;# 
  1931  0191                     	;# 
  1932  0191                     	;# 
  1933  0192                     	;# 
  1934  0193                     	;# 
  1935  0193                     	;# 
  1936  0194                     	;# 
  1937  0195                     	;# 
  1938  0196                     	;# 
  1939  0197                     	;# 
  1940  0199                     	;# 
  1941  0199                     	;# 
  1942  0199                     	;# 
  1943  019A                     	;# 
  1944  019A                     	;# 
  1945  019A                     	;# 
  1946  019B                     	;# 
  1947  019B                     	;# 
  1948  019B                     	;# 
  1949  019B                     	;# 
  1950  019B                     	;# 
  1951  019C                     	;# 
  1952  019C                     	;# 
  1953  019C                     	;# 
  1954  019D                     	;# 
  1955  019D                     	;# 
  1956  019D                     	;# 
  1957  019E                     	;# 
  1958  019E                     	;# 
  1959  019E                     	;# 
  1960  019F                     	;# 
  1961  019F                     	;# 
  1962  019F                     	;# 
  1963  019F                     	;# 
  1964  019F                     	;# 
  1965  020C                     	;# 
  1966  020D                     	;# 
  1967  020E                     	;# 
  1968  0211                     	;# 
  1969  0211                     	;# 
  1970  0212                     	;# 
  1971  0212                     	;# 
  1972  0213                     	;# 
  1973  0213                     	;# 
  1974  0214                     	;# 
  1975  0214                     	;# 
  1976  0215                     	;# 
  1977  0215                     	;# 
  1978  0215                     	;# 
  1979  0215                     	;# 
  1980  0216                     	;# 
  1981  0216                     	;# 
  1982  0217                     	;# 
  1983  0217                     	;# 
  1984  028C                     	;# 
  1985  028D                     	;# 
  1986  028E                     	;# 
  1987  0291                     	;# 
  1988  0291                     	;# 
  1989  0292                     	;# 
  1990  0293                     	;# 
  1991  0294                     	;# 
  1992  0298                     	;# 
  1993  0298                     	;# 
  1994  0299                     	;# 
  1995  029A                     	;# 
  1996  029B                     	;# 
  1997  029E                     	;# 
  1998  030C                     	;# 
  1999  030D                     	;# 
  2000  030E                     	;# 
  2001  038C                     	;# 
  2002  038D                     	;# 
  2003  038E                     	;# 
  2004  0391                     	;# 
  2005  0392                     	;# 
  2006  0393                     	;# 
  2007  0394                     	;# 
  2008  0395                     	;# 
  2009  0396                     	;# 
  2010  0397                     	;# 
  2011  0398                     	;# 
  2012  0399                     	;# 
  2013  040E                     	;# 
  2014  0413                     	;# 
  2015  0413                     	;# 
  2016  0414                     	;# 
  2017  0414                     	;# 
  2018  0415                     	;# 
  2019  0416                     	;# 
  2020  0417                     	;# 
  2021  0418                     	;# 
  2022  041A                     	;# 
  2023  041A                     	;# 
  2024  041B                     	;# 
  2025  041B                     	;# 
  2026  041C                     	;# 
  2027  041D                     	;# 
  2028  041E                     	;# 
  2029  041F                     	;# 
  2030  0493                     	;# 
  2031  0494                     	;# 
  2032  0495                     	;# 
  2033  0496                     	;# 
  2034  049A                     	;# 
  2035  049B                     	;# 
  2036  049C                     	;# 
  2037  049D                     	;# 
  2038  058C                     	;# 
  2039  058C                     	;# 
  2040  058D                     	;# 
  2041  058E                     	;# 
  2042  058E                     	;# 
  2043  058F                     	;# 
  2044  0590                     	;# 
  2045  0590                     	;# 
  2046  0591                     	;# 
  2047  0592                     	;# 
  2048  0592                     	;# 
  2049  0593                     	;# 
  2050  0594                     	;# 
  2051  0594                     	;# 
  2052  0595                     	;# 
  2053  0596                     	;# 
  2054  0596                     	;# 
  2055  0597                     	;# 
  2056  0598                     	;# 
  2057  0599                     	;# 
  2058  059A                     	;# 
  2059  059B                     	;# 
  2060  059B                     	;# 
  2061  059C                     	;# 
  2062  059D                     	;# 
  2063  060C                     	;# 
  2064  060C                     	;# 
  2065  060D                     	;# 
  2066  060E                     	;# 
  2067  060F                     	;# 
  2068  060F                     	;# 
  2069  0610                     	;# 
  2070  0611                     	;# 
  2071  0612                     	;# 
  2072  0613                     	;# 
  2073  0614                     	;# 
  2074  0617                     	;# 
  2075  0618                     	;# 
  2076  0619                     	;# 
  2077  061A                     	;# 
  2078  061B                     	;# 
  2079  061C                     	;# 
  2080  0691                     	;# 
  2081  0692                     	;# 
  2082  0693                     	;# 
  2083  0694                     	;# 
  2084  0695                     	;# 
  2085  0696                     	;# 
  2086  0697                     	;# 
  2087  0699                     	;# 
  2088  069A                     	;# 
  2089  0711                     	;# 
  2090  0712                     	;# 
  2091  0713                     	;# 
  2092  0714                     	;# 
  2093  0715                     	;# 
  2094  0718                     	;# 
  2095  0718                     	;# 
  2096  0719                     	;# 
  2097  071A                     	;# 
  2098  071A                     	;# 
  2099  071B                     	;# 
  2100  071C                     	;# 
  2101  071D                     	;# 
  2102  0791                     	;# 
  2103  0791                     	;# 
  2104  0792                     	;# 
  2105  0793                     	;# 
  2106  0793                     	;# 
  2107  0794                     	;# 
  2108  0795                     	;# 
  2109  0795                     	;# 
  2110  0796                     	;# 
  2111  0797                     	;# 
  2112  0797                     	;# 
  2113  0798                     	;# 
  2114  0799                     	;# 
  2115  079A                     	;# 
  2116  080C                     	;# 
  2117  080C                     	;# 
  2118  080D                     	;# 
  2119  080E                     	;# 
  2120  080E                     	;# 
  2121  080F                     	;# 
  2122  0810                     	;# 
  2123  0810                     	;# 
  2124  0811                     	;# 
  2125  0812                     	;# 
  2126  0812                     	;# 
  2127  0813                     	;# 
  2128  0814                     	;# 
  2129  0815                     	;# 
  2130  0816                     	;# 
  2131  0817                     	;# 
  2132  0818                     	;# 
  2133  0819                     	;# 
  2134  081A                     	;# 
  2135  081A                     	;# 
  2136  081B                     	;# 
  2137  081C                     	;# 
  2138  081C                     	;# 
  2139  081D                     	;# 
  2140  088C                     	;# 
  2141  088D                     	;# 
  2142  088E                     	;# 
  2143  088F                     	;# 
  2144  088F                     	;# 
  2145  0890                     	;# 
  2146  0891                     	;# 
  2147  0892                     	;# 
  2148  0893                     	;# 
  2149  0893                     	;# 
  2150  0894                     	;# 
  2151  0895                     	;# 
  2152  0896                     	;# 
  2153  0897                     	;# 
  2154  0897                     	;# 
  2155  0898                     	;# 
  2156  0899                     	;# 
  2157  0D8C                     	;# 
  2158  0D8C                     	;# 
  2159  0D8D                     	;# 
  2160  0D8E                     	;# 
  2161  0D8F                     	;# 
  2162  0D8F                     	;# 
  2163  0D90                     	;# 
  2164  0D91                     	;# 
  2165  0D92                     	;# 
  2166  0D92                     	;# 
  2167  0D93                     	;# 
  2168  0D94                     	;# 
  2169  0D95                     	;# 
  2170  0D95                     	;# 
  2171  0D96                     	;# 
  2172  0D97                     	;# 
  2173  0D98                     	;# 
  2174  0D99                     	;# 
  2175  0D9A                     	;# 
  2176  0D9B                     	;# 
  2177  0D9C                     	;# 
  2178  0D9D                     	;# 
  2179  0D9E                     	;# 
  2180  0D9E                     	;# 
  2181  0D9F                     	;# 
  2182  0DA0                     	;# 
  2183  0DA1                     	;# 
  2184  0DA1                     	;# 
  2185  0DA2                     	;# 
  2186  0DA3                     	;# 
  2187  0DA4                     	;# 
  2188  0DA4                     	;# 
  2189  0DA5                     	;# 
  2190  0DA6                     	;# 
  2191  0DA7                     	;# 
  2192  0DA7                     	;# 
  2193  0DA8                     	;# 
  2194  0DA9                     	;# 
  2195  0DAA                     	;# 
  2196  0DAB                     	;# 
  2197  0DAC                     	;# 
  2198  0DAD                     	;# 
  2199  0DAE                     	;# 
  2200  0DAF                     	;# 
  2201  0E0F                     	;# 
  2202  0E10                     	;# 
  2203  0E11                     	;# 
  2204  0E12                     	;# 
  2205  0E13                     	;# 
  2206  0E14                     	;# 
  2207  0E15                     	;# 
  2208  0E16                     	;# 
  2209  0E17                     	;# 
  2210  0E18                     	;# 
  2211  0E19                     	;# 
  2212  0E1A                     	;# 
  2213  0E1B                     	;# 
  2214  0E1C                     	;# 
  2215  0E1D                     	;# 
  2216  0E1E                     	;# 
  2217  0E1F                     	;# 
  2218  0E20                     	;# 
  2219  0E21                     	;# 
  2220  0E22                     	;# 
  2221  0E23                     	;# 
  2222  0E24                     	;# 
  2223  0E25                     	;# 
  2224  0E26                     	;# 
  2225  0E27                     	;# 
  2226  0E28                     	;# 
  2227  0E29                     	;# 
  2228  0E2A                     	;# 
  2229  0E2B                     	;# 
  2230  0E2C                     	;# 
  2231  0E2D                     	;# 
  2232  0E2E                     	;# 
  2233  0E90                     	;# 
  2234  0E91                     	;# 
  2235  0E92                     	;# 
  2236  0E94                     	;# 
  2237  0E95                     	;# 
  2238  0E9C                     	;# 
  2239  0E9D                     	;# 
  2240  0E9E                     	;# 
  2241  0E9F                     	;# 
  2242  0EA0                     	;# 
  2243  0EA1                     	;# 
  2244  0EA2                     	;# 
  2245  0EA3                     	;# 
  2246  0EA4                     	;# 
  2247  0EA5                     	;# 
  2248  0EA6                     	;# 
  2249  0EA7                     	;# 
  2250  0F0F                     	;# 
  2251  0F10                     	;# 
  2252  0F11                     	;# 
  2253  0F12                     	;# 
  2254  0F13                     	;# 
  2255  0F14                     	;# 
  2256  0F15                     	;# 
  2257  0F16                     	;# 
  2258  0F17                     	;# 
  2259  0F18                     	;# 
  2260  0F19                     	;# 
  2261  0F1A                     	;# 
  2262  0F1B                     	;# 
  2263  0F1C                     	;# 
  2264  0F1D                     	;# 
  2265  0F1E                     	;# 
  2266  0F1F                     	;# 
  2267  0F20                     	;# 
  2268  0F21                     	;# 
  2269  0F22                     	;# 
  2270  0F23                     	;# 
  2271  0F24                     	;# 
  2272  0F25                     	;# 
  2273  0F26                     	;# 
  2274  0F27                     	;# 
  2275  0F28                     	;# 
  2276  0F29                     	;# 
  2277  0F2A                     	;# 
  2278  0F2B                     	;# 
  2279  0F2C                     	;# 
  2280  0F2D                     	;# 
  2281  0F2E                     	;# 
  2282  0F2F                     	;# 
  2283  0F30                     	;# 
  2284  0F31                     	;# 
  2285  0F32                     	;# 
  2286  0F33                     	;# 
  2287  0F34                     	;# 
  2288  0F35                     	;# 
  2289  0F36                     	;# 
  2290  0F37                     	;# 
  2291  0FE4                     	;# 
  2292  0FE5                     	;# 
  2293  0FE6                     	;# 
  2294  0FE7                     	;# 
  2295  0FE8                     	;# 
  2296  0FE9                     	;# 
  2297  0FEA                     	;# 
  2298  0FEB                     	;# 
  2299  0FED                     	;# 
  2300  0FEE                     	;# 
  2301  0FEF                     	;# 
  2302  0000                     	;# 
  2303  0001                     	;# 
  2304  0002                     	;# 
  2305  0003                     	;# 
  2306  0004                     	;# 
  2307  0005                     	;# 
  2308  0006                     	;# 
  2309  0007                     	;# 
  2310  0008                     	;# 
  2311  0009                     	;# 
  2312  000A                     	;# 
  2313  000B                     	;# 
  2314  000C                     	;# 
  2315  000D                     	;# 
  2316  000E                     	;# 
  2317  0010                     	;# 
  2318  0011                     	;# 
  2319  0012                     	;# 
  2320  0013                     	;# 
  2321  0014                     	;# 
  2322  0015                     	;# 
  2323  0016                     	;# 
  2324  0016                     	;# 
  2325  0017                     	;# 
  2326  0018                     	;# 
  2327  0019                     	;# 
  2328  001A                     	;# 
  2329  001A                     	;# 
  2330  001B                     	;# 
  2331  001B                     	;# 
  2332  001C                     	;# 
  2333  001D                     	;# 
  2334  001E                     	;# 
  2335  001F                     	;# 
  2336  008C                     	;# 
  2337  008D                     	;# 
  2338  008E                     	;# 
  2339  0090                     	;# 
  2340  0091                     	;# 
  2341  0092                     	;# 
  2342  0093                     	;# 
  2343  0094                     	;# 
  2344  0095                     	;# 
  2345  0096                     	;# 
  2346  0098                     	;# 
  2347  0099                     	;# 
  2348  009A                     	;# 
  2349  009B                     	;# 
  2350  009B                     	;# 
  2351  009C                     	;# 
  2352  009D                     	;# 
  2353  009E                     	;# 
  2354  009F                     	;# 
  2355  010C                     	;# 
  2356  010D                     	;# 
  2357  010E                     	;# 
  2358  0111                     	;# 
  2359  0112                     	;# 
  2360  0113                     	;# 
  2361  0114                     	;# 
  2362  0115                     	;# 
  2363  0116                     	;# 
  2364  0117                     	;# 
  2365  0118                     	;# 
  2366  0119                     	;# 
  2367  011C                     	;# 
  2368  018C                     	;# 
  2369  018D                     	;# 
  2370  018E                     	;# 
  2371  0191                     	;# 
  2372  0191                     	;# 
  2373  0192                     	;# 
  2374  0193                     	;# 
  2375  0193                     	;# 
  2376  0194                     	;# 
  2377  0195                     	;# 
  2378  0196                     	;# 
  2379  0197                     	;# 
  2380  0199                     	;# 
  2381  0199                     	;# 
  2382  0199                     	;# 
  2383  019A                     	;# 
  2384  019A                     	;# 
  2385  019A                     	;# 
  2386  019B                     	;# 
  2387  019B                     	;# 
  2388  019B                     	;# 
  2389  019B                     	;# 
  2390  019B                     	;# 
  2391  019C                     	;# 
  2392  019C                     	;# 
  2393  019C                     	;# 
  2394  019D                     	;# 
  2395  019D                     	;# 
  2396  019D                     	;# 
  2397  019E                     	;# 
  2398  019E                     	;# 
  2399  019E                     	;# 
  2400  019F                     	;# 
  2401  019F                     	;# 
  2402  019F                     	;# 
  2403  019F                     	;# 
  2404  019F                     	;# 
  2405  020C                     	;# 
  2406  020D                     	;# 
  2407  020E                     	;# 
  2408  0211                     	;# 
  2409  0211                     	;# 
  2410  0212                     	;# 
  2411  0212                     	;# 
  2412  0213                     	;# 
  2413  0213                     	;# 
  2414  0214                     	;# 
  2415  0214                     	;# 
  2416  0215                     	;# 
  2417  0215                     	;# 
  2418  0215                     	;# 
  2419  0215                     	;# 
  2420  0216                     	;# 
  2421  0216                     	;# 
  2422  0217                     	;# 
  2423  0217                     	;# 
  2424  028C                     	;# 
  2425  028D                     	;# 
  2426  028E                     	;# 
  2427  0291                     	;# 
  2428  0291                     	;# 
  2429  0292                     	;# 
  2430  0293                     	;# 
  2431  0294                     	;# 
  2432  0298                     	;# 
  2433  0298                     	;# 
  2434  0299                     	;# 
  2435  029A                     	;# 
  2436  029B                     	;# 
  2437  029E                     	;# 
  2438  030C                     	;# 
  2439  030D                     	;# 
  2440  030E                     	;# 
  2441  038C                     	;# 
  2442  038D                     	;# 
  2443  038E                     	;# 
  2444  0391                     	;# 
  2445  0392                     	;# 
  2446  0393                     	;# 
  2447  0394                     	;# 
  2448  0395                     	;# 
  2449  0396                     	;# 
  2450  0397                     	;# 
  2451  0398                     	;# 
  2452  0399                     	;# 
  2453  040E                     	;# 
  2454  0413                     	;# 
  2455  0413                     	;# 
  2456  0414                     	;# 
  2457  0414                     	;# 
  2458  0415                     	;# 
  2459  0416                     	;# 
  2460  0417                     	;# 
  2461  0418                     	;# 
  2462  041A                     	;# 
  2463  041A                     	;# 
  2464  041B                     	;# 
  2465  041B                     	;# 
  2466  041C                     	;# 
  2467  041D                     	;# 
  2468  041E                     	;# 
  2469  041F                     	;# 
  2470  0493                     	;# 
  2471  0494                     	;# 
  2472  0495                     	;# 
  2473  0496                     	;# 
  2474  049A                     	;# 
  2475  049B                     	;# 
  2476  049C                     	;# 
  2477  049D                     	;# 
  2478  058C                     	;# 
  2479  058C                     	;# 
  2480  058D                     	;# 
  2481  058E                     	;# 
  2482  058E                     	;# 
  2483  058F                     	;# 
  2484  0590                     	;# 
  2485  0590                     	;# 
  2486  0591                     	;# 
  2487  0592                     	;# 
  2488  0592                     	;# 
  2489  0593                     	;# 
  2490  0594                     	;# 
  2491  0594                     	;# 
  2492  0595                     	;# 
  2493  0596                     	;# 
  2494  0596                     	;# 
  2495  0597                     	;# 
  2496  0598                     	;# 
  2497  0599                     	;# 
  2498  059A                     	;# 
  2499  059B                     	;# 
  2500  059B                     	;# 
  2501  059C                     	;# 
  2502  059D                     	;# 
  2503  060C                     	;# 
  2504  060C                     	;# 
  2505  060D                     	;# 
  2506  060E                     	;# 
  2507  060F                     	;# 
  2508  060F                     	;# 
  2509  0610                     	;# 
  2510  0611                     	;# 
  2511  0612                     	;# 
  2512  0613                     	;# 
  2513  0614                     	;# 
  2514  0617                     	;# 
  2515  0618                     	;# 
  2516  0619                     	;# 
  2517  061A                     	;# 
  2518  061B                     	;# 
  2519  061C                     	;# 
  2520  0691                     	;# 
  2521  0692                     	;# 
  2522  0693                     	;# 
  2523  0694                     	;# 
  2524  0695                     	;# 
  2525  0696                     	;# 
  2526  0697                     	;# 
  2527  0699                     	;# 
  2528  069A                     	;# 
  2529  0711                     	;# 
  2530  0712                     	;# 
  2531  0713                     	;# 
  2532  0714                     	;# 
  2533  0715                     	;# 
  2534  0718                     	;# 
  2535  0718                     	;# 
  2536  0719                     	;# 
  2537  071A                     	;# 
  2538  071A                     	;# 
  2539  071B                     	;# 
  2540  071C                     	;# 
  2541  071D                     	;# 
  2542  0791                     	;# 
  2543  0791                     	;# 
  2544  0792                     	;# 
  2545  0793                     	;# 
  2546  0793                     	;# 
  2547  0794                     	;# 
  2548  0795                     	;# 
  2549  0795                     	;# 
  2550  0796                     	;# 
  2551  0797                     	;# 
  2552  0797                     	;# 
  2553  0798                     	;# 
  2554  0799                     	;# 
  2555  079A                     	;# 
  2556  080C                     	;# 
  2557  080C                     	;# 
  2558  080D                     	;# 
  2559  080E                     	;# 
  2560  080E                     	;# 
  2561  080F                     	;# 
  2562  0810                     	;# 
  2563  0810                     	;# 
  2564  0811                     	;# 
  2565  0812                     	;# 
  2566  0812                     	;# 
  2567  0813                     	;# 
  2568  0814                     	;# 
  2569  0815                     	;# 
  2570  0816                     	;# 
  2571  0817                     	;# 
  2572  0818                     	;# 
  2573  0819                     	;# 
  2574  081A                     	;# 
  2575  081A                     	;# 
  2576  081B                     	;# 
  2577  081C                     	;# 
  2578  081C                     	;# 
  2579  081D                     	;# 
  2580  088C                     	;# 
  2581  088D                     	;# 
  2582  088E                     	;# 
  2583  088F                     	;# 
  2584  088F                     	;# 
  2585  0890                     	;# 
  2586  0891                     	;# 
  2587  0892                     	;# 
  2588  0893                     	;# 
  2589  0893                     	;# 
  2590  0894                     	;# 
  2591  0895                     	;# 
  2592  0896                     	;# 
  2593  0897                     	;# 
  2594  0897                     	;# 
  2595  0898                     	;# 
  2596  0899                     	;# 
  2597  0D8C                     	;# 
  2598  0D8C                     	;# 
  2599  0D8D                     	;# 
  2600  0D8E                     	;# 
  2601  0D8F                     	;# 
  2602  0D8F                     	;# 
  2603  0D90                     	;# 
  2604  0D91                     	;# 
  2605  0D92                     	;# 
  2606  0D92                     	;# 
  2607  0D93                     	;# 
  2608  0D94                     	;# 
  2609  0D95                     	;# 
  2610  0D95                     	;# 
  2611  0D96                     	;# 
  2612  0D97                     	;# 
  2613  0D98                     	;# 
  2614  0D99                     	;# 
  2615  0D9A                     	;# 
  2616  0D9B                     	;# 
  2617  0D9C                     	;# 
  2618  0D9D                     	;# 
  2619  0D9E                     	;# 
  2620  0D9E                     	;# 
  2621  0D9F                     	;# 
  2622  0DA0                     	;# 
  2623  0DA1                     	;# 
  2624  0DA1                     	;# 
  2625  0DA2                     	;# 
  2626  0DA3                     	;# 
  2627  0DA4                     	;# 
  2628  0DA4                     	;# 
  2629  0DA5                     	;# 
  2630  0DA6                     	;# 
  2631  0DA7                     	;# 
  2632  0DA7                     	;# 
  2633  0DA8                     	;# 
  2634  0DA9                     	;# 
  2635  0DAA                     	;# 
  2636  0DAB                     	;# 
  2637  0DAC                     	;# 
  2638  0DAD                     	;# 
  2639  0DAE                     	;# 
  2640  0DAF                     	;# 
  2641  0E0F                     	;# 
  2642  0E10                     	;# 
  2643  0E11                     	;# 
  2644  0E12                     	;# 
  2645  0E13                     	;# 
  2646  0E14                     	;# 
  2647  0E15                     	;# 
  2648  0E16                     	;# 
  2649  0E17                     	;# 
  2650  0E18                     	;# 
  2651  0E19                     	;# 
  2652  0E1A                     	;# 
  2653  0E1B                     	;# 
  2654  0E1C                     	;# 
  2655  0E1D                     	;# 
  2656  0E1E                     	;# 
  2657  0E1F                     	;# 
  2658  0E20                     	;# 
  2659  0E21                     	;# 
  2660  0E22                     	;# 
  2661  0E23                     	;# 
  2662  0E24                     	;# 
  2663  0E25                     	;# 
  2664  0E26                     	;# 
  2665  0E27                     	;# 
  2666  0E28                     	;# 
  2667  0E29                     	;# 
  2668  0E2A                     	;# 
  2669  0E2B                     	;# 
  2670  0E2C                     	;# 
  2671  0E2D                     	;# 
  2672  0E2E                     	;# 
  2673  0E90                     	;# 
  2674  0E91                     	;# 
  2675  0E92                     	;# 
  2676  0E94                     	;# 
  2677  0E95                     	;# 
  2678  0E9C                     	;# 
  2679  0E9D                     	;# 
  2680  0E9E                     	;# 
  2681  0E9F                     	;# 
  2682  0EA0                     	;# 
  2683  0EA1                     	;# 
  2684  0EA2                     	;# 
  2685  0EA3                     	;# 
  2686  0EA4                     	;# 
  2687  0EA5                     	;# 
  2688  0EA6                     	;# 
  2689  0EA7                     	;# 
  2690  0F0F                     	;# 
  2691  0F10                     	;# 
  2692  0F11                     	;# 
  2693  0F12                     	;# 
  2694  0F13                     	;# 
  2695  0F14                     	;# 
  2696  0F15                     	;# 
  2697  0F16                     	;# 
  2698  0F17                     	;# 
  2699  0F18                     	;# 
  2700  0F19                     	;# 
  2701  0F1A                     	;# 
  2702  0F1B                     	;# 
  2703  0F1C                     	;# 
  2704  0F1D                     	;# 
  2705  0F1E                     	;# 
  2706  0F1F                     	;# 
  2707  0F20                     	;# 
  2708  0F21                     	;# 
  2709  0F22                     	;# 
  2710  0F23                     	;# 
  2711  0F24                     	;# 
  2712  0F25                     	;# 
  2713  0F26                     	;# 
  2714  0F27                     	;# 
  2715  0F28                     	;# 
  2716  0F29                     	;# 
  2717  0F2A                     	;# 
  2718  0F2B                     	;# 
  2719  0F2C                     	;# 
  2720  0F2D                     	;# 
  2721  0F2E                     	;# 
  2722  0F2F                     	;# 
  2723  0F30                     	;# 
  2724  0F31                     	;# 
  2725  0F32                     	;# 
  2726  0F33                     	;# 
  2727  0F34                     	;# 
  2728  0F35                     	;# 
  2729  0F36                     	;# 
  2730  0F37                     	;# 
  2731  0FE4                     	;# 
  2732  0FE5                     	;# 
  2733  0FE6                     	;# 
  2734  0FE7                     	;# 
  2735  0FE8                     	;# 
  2736  0FE9                     	;# 
  2737  0FEA                     	;# 
  2738  0FEB                     	;# 
  2739  0FED                     	;# 
  2740  0FEE                     	;# 
  2741  0FEF                     	;# 
  2742  0000                     	;# 
  2743  0001                     	;# 
  2744  0002                     	;# 
  2745  0003                     	;# 
  2746  0004                     	;# 
  2747  0005                     	;# 
  2748  0006                     	;# 
  2749  0007                     	;# 
  2750  0008                     	;# 
  2751  0009                     	;# 
  2752  000A                     	;# 
  2753  000B                     	;# 
  2754  000C                     	;# 
  2755  000D                     	;# 
  2756  000E                     	;# 
  2757  0010                     	;# 
  2758  0011                     	;# 
  2759  0012                     	;# 
  2760  0013                     	;# 
  2761  0014                     	;# 
  2762  0015                     	;# 
  2763  0016                     	;# 
  2764  0016                     	;# 
  2765  0017                     	;# 
  2766  0018                     	;# 
  2767  0019                     	;# 
  2768  001A                     	;# 
  2769  001A                     	;# 
  2770  001B                     	;# 
  2771  001B                     	;# 
  2772  001C                     	;# 
  2773  001D                     	;# 
  2774  001E                     	;# 
  2775  001F                     	;# 
  2776  008C                     	;# 
  2777  008D                     	;# 
  2778  008E                     	;# 
  2779  0090                     	;# 
  2780  0091                     	;# 
  2781  0092                     	;# 
  2782  0093                     	;# 
  2783  0094                     	;# 
  2784  0095                     	;# 
  2785  0096                     	;# 
  2786  0098                     	;# 
  2787  0099                     	;# 
  2788  009A                     	;# 
  2789  009B                     	;# 
  2790  009B                     	;# 
  2791  009C                     	;# 
  2792  009D                     	;# 
  2793  009E                     	;# 
  2794  009F                     	;# 
  2795  010C                     	;# 
  2796  010D                     	;# 
  2797  010E                     	;# 
  2798  0111                     	;# 
  2799  0112                     	;# 
  2800  0113                     	;# 
  2801  0114                     	;# 
  2802  0115                     	;# 
  2803  0116                     	;# 
  2804  0117                     	;# 
  2805  0118                     	;# 
  2806  0119                     	;# 
  2807  011C                     	;# 
  2808  018C                     	;# 
  2809  018D                     	;# 
  2810  018E                     	;# 
  2811  0191                     	;# 
  2812  0191                     	;# 
  2813  0192                     	;# 
  2814  0193                     	;# 
  2815  0193                     	;# 
  2816  0194                     	;# 
  2817  0195                     	;# 
  2818  0196                     	;# 
  2819  0197                     	;# 
  2820  0199                     	;# 
  2821  0199                     	;# 
  2822  0199                     	;# 
  2823  019A                     	;# 
  2824  019A                     	;# 
  2825  019A                     	;# 
  2826  019B                     	;# 
  2827  019B                     	;# 
  2828  019B                     	;# 
  2829  019B                     	;# 
  2830  019B                     	;# 
  2831  019C                     	;# 
  2832  019C                     	;# 
  2833  019C                     	;# 
  2834  019D                     	;# 
  2835  019D                     	;# 
  2836  019D                     	;# 
  2837  019E                     	;# 
  2838  019E                     	;# 
  2839  019E                     	;# 
  2840  019F                     	;# 
  2841  019F                     	;# 
  2842  019F                     	;# 
  2843  019F                     	;# 
  2844  019F                     	;# 
  2845  020C                     	;# 
  2846  020D                     	;# 
  2847  020E                     	;# 
  2848  0211                     	;# 
  2849  0211                     	;# 
  2850  0212                     	;# 
  2851  0212                     	;# 
  2852  0213                     	;# 
  2853  0213                     	;# 
  2854  0214                     	;# 
  2855  0214                     	;# 
  2856  0215                     	;# 
  2857  0215                     	;# 
  2858  0215                     	;# 
  2859  0215                     	;# 
  2860  0216                     	;# 
  2861  0216                     	;# 
  2862  0217                     	;# 
  2863  0217                     	;# 
  2864  028C                     	;# 
  2865  028D                     	;# 
  2866  028E                     	;# 
  2867  0291                     	;# 
  2868  0291                     	;# 
  2869  0292                     	;# 
  2870  0293                     	;# 
  2871  0294                     	;# 
  2872  0298                     	;# 
  2873  0298                     	;# 
  2874  0299                     	;# 
  2875  029A                     	;# 
  2876  029B                     	;# 
  2877  029E                     	;# 
  2878  030C                     	;# 
  2879  030D                     	;# 
  2880  030E                     	;# 
  2881  038C                     	;# 
  2882  038D                     	;# 
  2883  038E                     	;# 
  2884  0391                     	;# 
  2885  0392                     	;# 
  2886  0393                     	;# 
  2887  0394                     	;# 
  2888  0395                     	;# 
  2889  0396                     	;# 
  2890  0397                     	;# 
  2891  0398                     	;# 
  2892  0399                     	;# 
  2893  040E                     	;# 
  2894  0413                     	;# 
  2895  0413                     	;# 
  2896  0414                     	;# 
  2897  0414                     	;# 
  2898  0415                     	;# 
  2899  0416                     	;# 
  2900  0417                     	;# 
  2901  0418                     	;# 
  2902  041A                     	;# 
  2903  041A                     	;# 
  2904  041B                     	;# 
  2905  041B                     	;# 
  2906  041C                     	;# 
  2907  041D                     	;# 
  2908  041E                     	;# 
  2909  041F                     	;# 
  2910  0493                     	;# 
  2911  0494                     	;# 
  2912  0495                     	;# 
  2913  0496                     	;# 
  2914  049A                     	;# 
  2915  049B                     	;# 
  2916  049C                     	;# 
  2917  049D                     	;# 
  2918  058C                     	;# 
  2919  058C                     	;# 
  2920  058D                     	;# 
  2921  058E                     	;# 
  2922  058E                     	;# 
  2923  058F                     	;# 
  2924  0590                     	;# 
  2925  0590                     	;# 
  2926  0591                     	;# 
  2927  0592                     	;# 
  2928  0592                     	;# 
  2929  0593                     	;# 
  2930  0594                     	;# 
  2931  0594                     	;# 
  2932  0595                     	;# 
  2933  0596                     	;# 
  2934  0596                     	;# 
  2935  0597                     	;# 
  2936  0598                     	;# 
  2937  0599                     	;# 
  2938  059A                     	;# 
  2939  059B                     	;# 
  2940  059B                     	;# 
  2941  059C                     	;# 
  2942  059D                     	;# 
  2943  060C                     	;# 
  2944  060C                     	;# 
  2945  060D                     	;# 
  2946  060E                     	;# 
  2947  060F                     	;# 
  2948  060F                     	;# 
  2949  0610                     	;# 
  2950  0611                     	;# 
  2951  0612                     	;# 
  2952  0613                     	;# 
  2953  0614                     	;# 
  2954  0617                     	;# 
  2955  0618                     	;# 
  2956  0619                     	;# 
  2957  061A                     	;# 
  2958  061B                     	;# 
  2959  061C                     	;# 
  2960  0691                     	;# 
  2961  0692                     	;# 
  2962  0693                     	;# 
  2963  0694                     	;# 
  2964  0695                     	;# 
  2965  0696                     	;# 
  2966  0697                     	;# 
  2967  0699                     	;# 
  2968  069A                     	;# 
  2969  0711                     	;# 
  2970  0712                     	;# 
  2971  0713                     	;# 
  2972  0714                     	;# 
  2973  0715                     	;# 
  2974  0718                     	;# 
  2975  0718                     	;# 
  2976  0719                     	;# 
  2977  071A                     	;# 
  2978  071A                     	;# 
  2979  071B                     	;# 
  2980  071C                     	;# 
  2981  071D                     	;# 
  2982  0791                     	;# 
  2983  0791                     	;# 
  2984  0792                     	;# 
  2985  0793                     	;# 
  2986  0793                     	;# 
  2987  0794                     	;# 
  2988  0795                     	;# 
  2989  0795                     	;# 
  2990  0796                     	;# 
  2991  0797                     	;# 
  2992  0797                     	;# 
  2993  0798                     	;# 
  2994  0799                     	;# 
  2995  079A                     	;# 
  2996  080C                     	;# 
  2997  080C                     	;# 
  2998  080D                     	;# 
  2999  080E                     	;# 
  3000  080E                     	;# 
  3001  080F                     	;# 
  3002  0810                     	;# 
  3003  0810                     	;# 
  3004  0811                     	;# 
  3005  0812                     	;# 
  3006  0812                     	;# 
  3007  0813                     	;# 
  3008  0814                     	;# 
  3009  0815                     	;# 
  3010  0816                     	;# 
  3011  0817                     	;# 
  3012  0818                     	;# 
  3013  0819                     	;# 
  3014  081A                     	;# 
  3015  081A                     	;# 
  3016  081B                     	;# 
  3017  081C                     	;# 
  3018  081C                     	;# 
  3019  081D                     	;# 
  3020  088C                     	;# 
  3021  088D                     	;# 
  3022  088E                     	;# 
  3023  088F                     	;# 
  3024  088F                     	;# 
  3025  0890                     	;# 
  3026  0891                     	;# 
  3027  0892                     	;# 
  3028  0893                     	;# 
  3029  0893                     	;# 
  3030  0894                     	;# 
  3031  0895                     	;# 
  3032  0896                     	;# 
  3033  0897                     	;# 
  3034  0897                     	;# 
  3035  0898                     	;# 
  3036  0899                     	;# 
  3037  0D8C                     	;# 
  3038  0D8C                     	;# 
  3039  0D8D                     	;# 
  3040  0D8E                     	;# 
  3041  0D8F                     	;# 
  3042  0D8F                     	;# 
  3043  0D90                     	;# 
  3044  0D91                     	;# 
  3045  0D92                     	;# 
  3046  0D92                     	;# 
  3047  0D93                     	;# 
  3048  0D94                     	;# 
  3049  0D95                     	;# 
  3050  0D95                     	;# 
  3051  0D96                     	;# 
  3052  0D97                     	;# 
  3053  0D98                     	;# 
  3054  0D99                     	;# 
  3055  0D9A                     	;# 
  3056  0D9B                     	;# 
  3057  0D9C                     	;# 
  3058  0D9D                     	;# 
  3059  0D9E                     	;# 
  3060  0D9E                     	;# 
  3061  0D9F                     	;# 
  3062  0DA0                     	;# 
  3063  0DA1                     	;# 
  3064  0DA1                     	;# 
  3065  0DA2                     	;# 
  3066  0DA3                     	;# 
  3067  0DA4                     	;# 
  3068  0DA4                     	;# 
  3069  0DA5                     	;# 
  3070  0DA6                     	;# 
  3071  0DA7                     	;# 
  3072  0DA7                     	;# 
  3073  0DA8                     	;# 
  3074  0DA9                     	;# 
  3075  0DAA                     	;# 
  3076  0DAB                     	;# 
  3077  0DAC                     	;# 
  3078  0DAD                     	;# 
  3079  0DAE                     	;# 
  3080  0DAF                     	;# 
  3081  0E0F                     	;# 
  3082  0E10                     	;# 
  3083  0E11                     	;# 
  3084  0E12                     	;# 
  3085  0E13                     	;# 
  3086  0E14                     	;# 
  3087  0E15                     	;# 
  3088  0E16                     	;# 
  3089  0E17                     	;# 
  3090  0E18                     	;# 
  3091  0E19                     	;# 
  3092  0E1A                     	;# 
  3093  0E1B                     	;# 
  3094  0E1C                     	;# 
  3095  0E1D                     	;# 
  3096  0E1E                     	;# 
  3097  0E1F                     	;# 
  3098  0E20                     	;# 
  3099  0E21                     	;# 
  3100  0E22                     	;# 
  3101  0E23                     	;# 
  3102  0E24                     	;# 
  3103  0E25                     	;# 
  3104  0E26                     	;# 
  3105  0E27                     	;# 
  3106  0E28                     	;# 
  3107  0E29                     	;# 
  3108  0E2A                     	;# 
  3109  0E2B                     	;# 
  3110  0E2C                     	;# 
  3111  0E2D                     	;# 
  3112  0E2E                     	;# 
  3113  0E90                     	;# 
  3114  0E91                     	;# 
  3115  0E92                     	;# 
  3116  0E94                     	;# 
  3117  0E95                     	;# 
  3118  0E9C                     	;# 
  3119  0E9D                     	;# 
  3120  0E9E                     	;# 
  3121  0E9F                     	;# 
  3122  0EA0                     	;# 
  3123  0EA1                     	;# 
  3124  0EA2                     	;# 
  3125  0EA3                     	;# 
  3126  0EA4                     	;# 
  3127  0EA5                     	;# 
  3128  0EA6                     	;# 
  3129  0EA7                     	;# 
  3130  0F0F                     	;# 
  3131  0F10                     	;# 
  3132  0F11                     	;# 
  3133  0F12                     	;# 
  3134  0F13                     	;# 
  3135  0F14                     	;# 
  3136  0F15                     	;# 
  3137  0F16                     	;# 
  3138  0F17                     	;# 
  3139  0F18                     	;# 
  3140  0F19                     	;# 
  3141  0F1A                     	;# 
  3142  0F1B                     	;# 
  3143  0F1C                     	;# 
  3144  0F1D                     	;# 
  3145  0F1E                     	;# 
  3146  0F1F                     	;# 
  3147  0F20                     	;# 
  3148  0F21                     	;# 
  3149  0F22                     	;# 
  3150  0F23                     	;# 
  3151  0F24                     	;# 
  3152  0F25                     	;# 
  3153  0F26                     	;# 
  3154  0F27                     	;# 
  3155  0F28                     	;# 
  3156  0F29                     	;# 
  3157  0F2A                     	;# 
  3158  0F2B                     	;# 
  3159  0F2C                     	;# 
  3160  0F2D                     	;# 
  3161  0F2E                     	;# 
  3162  0F2F                     	;# 
  3163  0F30                     	;# 
  3164  0F31                     	;# 
  3165  0F32                     	;# 
  3166  0F33                     	;# 
  3167  0F34                     	;# 
  3168  0F35                     	;# 
  3169  0F36                     	;# 
  3170  0F37                     	;# 
  3171  0FE4                     	;# 
  3172  0FE5                     	;# 
  3173  0FE6                     	;# 
  3174  0FE7                     	;# 
  3175  0FE8                     	;# 
  3176  0FE9                     	;# 
  3177  0FEA                     	;# 
  3178  0FEB                     	;# 
  3179  0FED                     	;# 
  3180  0FEE                     	;# 
  3181  0FEF                     	;# 
  3182  0000                     	;# 
  3183  0001                     	;# 
  3184  0002                     	;# 
  3185  0003                     	;# 
  3186  0004                     	;# 
  3187  0005                     	;# 
  3188  0006                     	;# 
  3189  0007                     	;# 
  3190  0008                     	;# 
  3191  0009                     	;# 
  3192  000A                     	;# 
  3193  000B                     	;# 
  3194  000C                     	;# 
  3195  000D                     	;# 
  3196  000E                     	;# 
  3197  0010                     	;# 
  3198  0011                     	;# 
  3199  0012                     	;# 
  3200  0013                     	;# 
  3201  0014                     	;# 
  3202  0015                     	;# 
  3203  0016                     	;# 
  3204  0016                     	;# 
  3205  0017                     	;# 
  3206  0018                     	;# 
  3207  0019                     	;# 
  3208  001A                     	;# 
  3209  001A                     	;# 
  3210  001B                     	;# 
  3211  001B                     	;# 
  3212  001C                     	;# 
  3213  001D                     	;# 
  3214  001E                     	;# 
  3215  001F                     	;# 
  3216  008C                     	;# 
  3217  008D                     	;# 
  3218  008E                     	;# 
  3219  0090                     	;# 
  3220  0091                     	;# 
  3221  0092                     	;# 
  3222  0093                     	;# 
  3223  0094                     	;# 
  3224  0095                     	;# 
  3225  0096                     	;# 
  3226  0098                     	;# 
  3227  0099                     	;# 
  3228  009A                     	;# 
  3229  009B                     	;# 
  3230  009B                     	;# 
  3231  009C                     	;# 
  3232  009D                     	;# 
  3233  009E                     	;# 
  3234  009F                     	;# 
  3235  010C                     	;# 
  3236  010D                     	;# 
  3237  010E                     	;# 
  3238  0111                     	;# 
  3239  0112                     	;# 
  3240  0113                     	;# 
  3241  0114                     	;# 
  3242  0115                     	;# 
  3243  0116                     	;# 
  3244  0117                     	;# 
  3245  0118                     	;# 
  3246  0119                     	;# 
  3247  011C                     	;# 
  3248  018C                     	;# 
  3249  018D                     	;# 
  3250  018E                     	;# 
  3251  0191                     	;# 
  3252  0191                     	;# 
  3253  0192                     	;# 
  3254  0193                     	;# 
  3255  0193                     	;# 
  3256  0194                     	;# 
  3257  0195                     	;# 
  3258  0196                     	;# 
  3259  0197                     	;# 
  3260  0199                     	;# 
  3261  0199                     	;# 
  3262  0199                     	;# 
  3263  019A                     	;# 
  3264  019A                     	;# 
  3265  019A                     	;# 
  3266  019B                     	;# 
  3267  019B                     	;# 
  3268  019B                     	;# 
  3269  019B                     	;# 
  3270  019B                     	;# 
  3271  019C                     	;# 
  3272  019C                     	;# 
  3273  019C                     	;# 
  3274  019D                     	;# 
  3275  019D                     	;# 
  3276  019D                     	;# 
  3277  019E                     	;# 
  3278  019E                     	;# 
  3279  019E                     	;# 
  3280  019F                     	;# 
  3281  019F                     	;# 
  3282  019F                     	;# 
  3283  019F                     	;# 
  3284  019F                     	;# 
  3285  020C                     	;# 
  3286  020D                     	;# 
  3287  020E                     	;# 
  3288  0211                     	;# 
  3289  0211                     	;# 
  3290  0212                     	;# 
  3291  0212                     	;# 
  3292  0213                     	;# 
  3293  0213                     	;# 
  3294  0214                     	;# 
  3295  0214                     	;# 
  3296  0215                     	;# 
  3297  0215                     	;# 
  3298  0215                     	;# 
  3299  0215                     	;# 
  3300  0216                     	;# 
  3301  0216                     	;# 
  3302  0217                     	;# 
  3303  0217                     	;# 
  3304  028C                     	;# 
  3305  028D                     	;# 
  3306  028E                     	;# 
  3307  0291                     	;# 
  3308  0291                     	;# 
  3309  0292                     	;# 
  3310  0293                     	;# 
  3311  0294                     	;# 
  3312  0298                     	;# 
  3313  0298                     	;# 
  3314  0299                     	;# 
  3315  029A                     	;# 
  3316  029B                     	;# 
  3317  029E                     	;# 
  3318  030C                     	;# 
  3319  030D                     	;# 
  3320  030E                     	;# 
  3321  038C                     	;# 
  3322  038D                     	;# 
  3323  038E                     	;# 
  3324  0391                     	;# 
  3325  0392                     	;# 
  3326  0393                     	;# 
  3327  0394                     	;# 
  3328  0395                     	;# 
  3329  0396                     	;# 
  3330  0397                     	;# 
  3331  0398                     	;# 
  3332  0399                     	;# 
  3333  040E                     	;# 
  3334  0413                     	;# 
  3335  0413                     	;# 
  3336  0414                     	;# 
  3337  0414                     	;# 
  3338  0415                     	;# 
  3339  0416                     	;# 
  3340  0417                     	;# 
  3341  0418                     	;# 
  3342  041A                     	;# 
  3343  041A                     	;# 
  3344  041B                     	;# 
  3345  041B                     	;# 
  3346  041C                     	;# 
  3347  041D                     	;# 
  3348  041E                     	;# 
  3349  041F                     	;# 
  3350  0493                     	;# 
  3351  0494                     	;# 
  3352  0495                     	;# 
  3353  0496                     	;# 
  3354  049A                     	;# 
  3355  049B                     	;# 
  3356  049C                     	;# 
  3357  049D                     	;# 
  3358  058C                     	;# 
  3359  058C                     	;# 
  3360  058D                     	;# 
  3361  058E                     	;# 
  3362  058E                     	;# 
  3363  058F                     	;# 
  3364  0590                     	;# 
  3365  0590                     	;# 
  3366  0591                     	;# 
  3367  0592                     	;# 
  3368  0592                     	;# 
  3369  0593                     	;# 
  3370  0594                     	;# 
  3371  0594                     	;# 
  3372  0595                     	;# 
  3373  0596                     	;# 
  3374  0596                     	;# 
  3375  0597                     	;# 
  3376  0598                     	;# 
  3377  0599                     	;# 
  3378  059A                     	;# 
  3379  059B                     	;# 
  3380  059B                     	;# 
  3381  059C                     	;# 
  3382  059D                     	;# 
  3383  060C                     	;# 
  3384  060C                     	;# 
  3385  060D                     	;# 
  3386  060E                     	;# 
  3387  060F                     	;# 
  3388  060F                     	;# 
  3389  0610                     	;# 
  3390  0611                     	;# 
  3391  0612                     	;# 
  3392  0613                     	;# 
  3393  0614                     	;# 
  3394  0617                     	;# 
  3395  0618                     	;# 
  3396  0619                     	;# 
  3397  061A                     	;# 
  3398  061B                     	;# 
  3399  061C                     	;# 
  3400  0691                     	;# 
  3401  0692                     	;# 
  3402  0693                     	;# 
  3403  0694                     	;# 
  3404  0695                     	;# 
  3405  0696                     	;# 
  3406  0697                     	;# 
  3407  0699                     	;# 
  3408  069A                     	;# 
  3409  0711                     	;# 
  3410  0712                     	;# 
  3411  0713                     	;# 
  3412  0714                     	;# 
  3413  0715                     	;# 
  3414  0718                     	;# 
  3415  0718                     	;# 
  3416  0719                     	;# 
  3417  071A                     	;# 
  3418  071A                     	;# 
  3419  071B                     	;# 
  3420  071C                     	;# 
  3421  071D                     	;# 
  3422  0791                     	;# 
  3423  0791                     	;# 
  3424  0792                     	;# 
  3425  0793                     	;# 
  3426  0793                     	;# 
  3427  0794                     	;# 
  3428  0795                     	;# 
  3429  0795                     	;# 
  3430  0796                     	;# 
  3431  0797                     	;# 
  3432  0797                     	;# 
  3433  0798                     	;# 
  3434  0799                     	;# 
  3435  079A                     	;# 
  3436  080C                     	;# 
  3437  080C                     	;# 
  3438  080D                     	;# 
  3439  080E                     	;# 
  3440  080E                     	;# 
  3441  080F                     	;# 
  3442  0810                     	;# 
  3443  0810                     	;# 
  3444  0811                     	;# 
  3445  0812                     	;# 
  3446  0812                     	;# 
  3447  0813                     	;# 
  3448  0814                     	;# 
  3449  0815                     	;# 
  3450  0816                     	;# 
  3451  0817                     	;# 
  3452  0818                     	;# 
  3453  0819                     	;# 
  3454  081A                     	;# 
  3455  081A                     	;# 
  3456  081B                     	;# 
  3457  081C                     	;# 
  3458  081C                     	;# 
  3459  081D                     	;# 
  3460  088C                     	;# 
  3461  088D                     	;# 
  3462  088E                     	;# 
  3463  088F                     	;# 
  3464  088F                     	;# 
  3465  0890                     	;# 
  3466  0891                     	;# 
  3467  0892                     	;# 
  3468  0893                     	;# 
  3469  0893                     	;# 
  3470  0894                     	;# 
  3471  0895                     	;# 
  3472  0896                     	;# 
  3473  0897                     	;# 
  3474  0897                     	;# 
  3475  0898                     	;# 
  3476  0899                     	;# 
  3477  0D8C                     	;# 
  3478  0D8C                     	;# 
  3479  0D8D                     	;# 
  3480  0D8E                     	;# 
  3481  0D8F                     	;# 
  3482  0D8F                     	;# 
  3483  0D90                     	;# 
  3484  0D91                     	;# 
  3485  0D92                     	;# 
  3486  0D92                     	;# 
  3487  0D93                     	;# 
  3488  0D94                     	;# 
  3489  0D95                     	;# 
  3490  0D95                     	;# 
  3491  0D96                     	;# 
  3492  0D97                     	;# 
  3493  0D98                     	;# 
  3494  0D99                     	;# 
  3495  0D9A                     	;# 
  3496  0D9B                     	;# 
  3497  0D9C                     	;# 
  3498  0D9D                     	;# 
  3499  0D9E                     	;# 
  3500  0D9E                     	;# 
  3501  0D9F                     	;# 
  3502  0DA0                     	;# 
  3503  0DA1                     	;# 
  3504  0DA1                     	;# 
  3505  0DA2                     	;# 
  3506  0DA3                     	;# 
  3507  0DA4                     	;# 
  3508  0DA4                     	;# 
  3509  0DA5                     	;# 
  3510  0DA6                     	;# 
  3511  0DA7                     	;# 
  3512  0DA7                     	;# 
  3513  0DA8                     	;# 
  3514  0DA9                     	;# 
  3515  0DAA                     	;# 
  3516  0DAB                     	;# 
  3517  0DAC                     	;# 
  3518  0DAD                     	;# 
  3519  0DAE                     	;# 
  3520  0DAF                     	;# 
  3521  0E0F                     	;# 
  3522  0E10                     	;# 
  3523  0E11                     	;# 
  3524  0E12                     	;# 
  3525  0E13                     	;# 
  3526  0E14                     	;# 
  3527  0E15                     	;# 
  3528  0E16                     	;# 
  3529  0E17                     	;# 
  3530  0E18                     	;# 
  3531  0E19                     	;# 
  3532  0E1A                     	;# 
  3533  0E1B                     	;# 
  3534  0E1C                     	;# 
  3535  0E1D                     	;# 
  3536  0E1E                     	;# 
  3537  0E1F                     	;# 
  3538  0E20                     	;# 
  3539  0E21                     	;# 
  3540  0E22                     	;# 
  3541  0E23                     	;# 
  3542  0E24                     	;# 
  3543  0E25                     	;# 
  3544  0E26                     	;# 
  3545  0E27                     	;# 
  3546  0E28                     	;# 
  3547  0E29                     	;# 
  3548  0E2A                     	;# 
  3549  0E2B                     	;# 
  3550  0E2C                     	;# 
  3551  0E2D                     	;# 
  3552  0E2E                     	;# 
  3553  0E90                     	;# 
  3554  0E91                     	;# 
  3555  0E92                     	;# 
  3556  0E94                     	;# 
  3557  0E95                     	;# 
  3558  0E9C                     	;# 
  3559  0E9D                     	;# 
  3560  0E9E                     	;# 
  3561  0E9F                     	;# 
  3562  0EA0                     	;# 
  3563  0EA1                     	;# 
  3564  0EA2                     	;# 
  3565  0EA3                     	;# 
  3566  0EA4                     	;# 
  3567  0EA5                     	;# 
  3568  0EA6                     	;# 
  3569  0EA7                     	;# 
  3570  0F0F                     	;# 
  3571  0F10                     	;# 
  3572  0F11                     	;# 
  3573  0F12                     	;# 
  3574  0F13                     	;# 
  3575  0F14                     	;# 
  3576  0F15                     	;# 
  3577  0F16                     	;# 
  3578  0F17                     	;# 
  3579  0F18                     	;# 
  3580  0F19                     	;# 
  3581  0F1A                     	;# 
  3582  0F1B                     	;# 
  3583  0F1C                     	;# 
  3584  0F1D                     	;# 
  3585  0F1E                     	;# 
  3586  0F1F                     	;# 
  3587  0F20                     	;# 
  3588  0F21                     	;# 
  3589  0F22                     	;# 
  3590  0F23                     	;# 
  3591  0F24                     	;# 
  3592  0F25                     	;# 
  3593  0F26                     	;# 
  3594  0F27                     	;# 
  3595  0F28                     	;# 
  3596  0F29                     	;# 
  3597  0F2A                     	;# 
  3598  0F2B                     	;# 
  3599  0F2C                     	;# 
  3600  0F2D                     	;# 
  3601  0F2E                     	;# 
  3602  0F2F                     	;# 
  3603  0F30                     	;# 
  3604  0F31                     	;# 
  3605  0F32                     	;# 
  3606  0F33                     	;# 
  3607  0F34                     	;# 
  3608  0F35                     	;# 
  3609  0F36                     	;# 
  3610  0F37                     	;# 
  3611  0FE4                     	;# 
  3612  0FE5                     	;# 
  3613  0FE6                     	;# 
  3614  0FE7                     	;# 
  3615  0FE8                     	;# 
  3616  0FE9                     	;# 
  3617  0FEA                     	;# 
  3618  0FEB                     	;# 
  3619  0FED                     	;# 
  3620  0FEE                     	;# 
  3621  0FEF                     	;# 
  3622  0000                     	;# 
  3623  0001                     	;# 
  3624  0002                     	;# 
  3625  0003                     	;# 
  3626  0004                     	;# 
  3627  0005                     	;# 
  3628  0006                     	;# 
  3629  0007                     	;# 
  3630  0008                     	;# 
  3631  0009                     	;# 
  3632  000A                     	;# 
  3633  000B                     	;# 
  3634  000C                     	;# 
  3635  000D                     	;# 
  3636  000E                     	;# 
  3637  0010                     	;# 
  3638  0011                     	;# 
  3639  0012                     	;# 
  3640  0013                     	;# 
  3641  0014                     	;# 
  3642  0015                     	;# 
  3643  0016                     	;# 
  3644  0016                     	;# 
  3645  0017                     	;# 
  3646  0018                     	;# 
  3647  0019                     	;# 
  3648  001A                     	;# 
  3649  001A                     	;# 
  3650  001B                     	;# 
  3651  001B                     	;# 
  3652  001C                     	;# 
  3653  001D                     	;# 
  3654  001E                     	;# 
  3655  001F                     	;# 
  3656  008C                     	;# 
  3657  008D                     	;# 
  3658  008E                     	;# 
  3659  0090                     	;# 
  3660  0091                     	;# 
  3661  0092                     	;# 
  3662  0093                     	;# 
  3663  0094                     	;# 
  3664  0095                     	;# 
  3665  0096                     	;# 
  3666  0098                     	;# 
  3667  0099                     	;# 
  3668  009A                     	;# 
  3669  009B                     	;# 
  3670  009B                     	;# 
  3671  009C                     	;# 
  3672  009D                     	;# 
  3673  009E                     	;# 
  3674  009F                     	;# 
  3675  010C                     	;# 
  3676  010D                     	;# 
  3677  010E                     	;# 
  3678  0111                     	;# 
  3679  0112                     	;# 
  3680  0113                     	;# 
  3681  0114                     	;# 
  3682  0115                     	;# 
  3683  0116                     	;# 
  3684  0117                     	;# 
  3685  0118                     	;# 
  3686  0119                     	;# 
  3687  011C                     	;# 
  3688  018C                     	;# 
  3689  018D                     	;# 
  3690  018E                     	;# 
  3691  0191                     	;# 
  3692  0191                     	;# 
  3693  0192                     	;# 
  3694  0193                     	;# 
  3695  0193                     	;# 
  3696  0194                     	;# 
  3697  0195                     	;# 
  3698  0196                     	;# 
  3699  0197                     	;# 
  3700  0199                     	;# 
  3701  0199                     	;# 
  3702  0199                     	;# 
  3703  019A                     	;# 
  3704  019A                     	;# 
  3705  019A                     	;# 
  3706  019B                     	;# 
  3707  019B                     	;# 
  3708  019B                     	;# 
  3709  019B                     	;# 
  3710  019B                     	;# 
  3711  019C                     	;# 
  3712  019C                     	;# 
  3713  019C                     	;# 
  3714  019D                     	;# 
  3715  019D                     	;# 
  3716  019D                     	;# 
  3717  019E                     	;# 
  3718  019E                     	;# 
  3719  019E                     	;# 
  3720  019F                     	;# 
  3721  019F                     	;# 
  3722  019F                     	;# 
  3723  019F                     	;# 
  3724  019F                     	;# 
  3725  020C                     	;# 
  3726  020D                     	;# 
  3727  020E                     	;# 
  3728  0211                     	;# 
  3729  0211                     	;# 
  3730  0212                     	;# 
  3731  0212                     	;# 
  3732  0213                     	;# 
  3733  0213                     	;# 
  3734  0214                     	;# 
  3735  0214                     	;# 
  3736  0215                     	;# 
  3737  0215                     	;# 
  3738  0215                     	;# 
  3739  0215                     	;# 
  3740  0216                     	;# 
  3741  0216                     	;# 
  3742  0217                     	;# 
  3743  0217                     	;# 
  3744  028C                     	;# 
  3745  028D                     	;# 
  3746  028E                     	;# 
  3747  0291                     	;# 
  3748  0291                     	;# 
  3749  0292                     	;# 
  3750  0293                     	;# 
  3751  0294                     	;# 
  3752  0298                     	;# 
  3753  0298                     	;# 
  3754  0299                     	;# 
  3755  029A                     	;# 
  3756  029B                     	;# 
  3757  029E                     	;# 
  3758  030C                     	;# 
  3759  030D                     	;# 
  3760  030E                     	;# 
  3761  038C                     	;# 
  3762  038D                     	;# 
  3763  038E                     	;# 
  3764  0391                     	;# 
  3765  0392                     	;# 
  3766  0393                     	;# 
  3767  0394                     	;# 
  3768  0395                     	;# 
  3769  0396                     	;# 
  3770  0397                     	;# 
  3771  0398                     	;# 
  3772  0399                     	;# 
  3773  040E                     	;# 
  3774  0413                     	;# 
  3775  0413                     	;# 
  3776  0414                     	;# 
  3777  0414                     	;# 
  3778  0415                     	;# 
  3779  0416                     	;# 
  3780  0417                     	;# 
  3781  0418                     	;# 
  3782  041A                     	;# 
  3783  041A                     	;# 
  3784  041B                     	;# 
  3785  041B                     	;# 
  3786  041C                     	;# 
  3787  041D                     	;# 
  3788  041E                     	;# 
  3789  041F                     	;# 
  3790  0493                     	;# 
  3791  0494                     	;# 
  3792  0495                     	;# 
  3793  0496                     	;# 
  3794  049A                     	;# 
  3795  049B                     	;# 
  3796  049C                     	;# 
  3797  049D                     	;# 
  3798  058C                     	;# 
  3799  058C                     	;# 
  3800  058D                     	;# 
  3801  058E                     	;# 
  3802  058E                     	;# 
  3803  058F                     	;# 
  3804  0590                     	;# 
  3805  0590                     	;# 
  3806  0591                     	;# 
  3807  0592                     	;# 
  3808  0592                     	;# 
  3809  0593                     	;# 
  3810  0594                     	;# 
  3811  0594                     	;# 
  3812  0595                     	;# 
  3813  0596                     	;# 
  3814  0596                     	;# 
  3815  0597                     	;# 
  3816  0598                     	;# 
  3817  0599                     	;# 
  3818  059A                     	;# 
  3819  059B                     	;# 
  3820  059B                     	;# 
  3821  059C                     	;# 
  3822  059D                     	;# 
  3823  060C                     	;# 
  3824  060C                     	;# 
  3825  060D                     	;# 
  3826  060E                     	;# 
  3827  060F                     	;# 
  3828  060F                     	;# 
  3829  0610                     	;# 
  3830  0611                     	;# 
  3831  0612                     	;# 
  3832  0613                     	;# 
  3833  0614                     	;# 
  3834  0617                     	;# 
  3835  0618                     	;# 
  3836  0619                     	;# 
  3837  061A                     	;# 
  3838  061B                     	;# 
  3839  061C                     	;# 
  3840  0691                     	;# 
  3841  0692                     	;# 
  3842  0693                     	;# 
  3843  0694                     	;# 
  3844  0695                     	;# 
  3845  0696                     	;# 
  3846  0697                     	;# 
  3847  0699                     	;# 
  3848  069A                     	;# 
  3849  0711                     	;# 
  3850  0712                     	;# 
  3851  0713                     	;# 
  3852  0714                     	;# 
  3853  0715                     	;# 
  3854  0718                     	;# 
  3855  0718                     	;# 
  3856  0719                     	;# 
  3857  071A                     	;# 
  3858  071A                     	;# 
  3859  071B                     	;# 
  3860  071C                     	;# 
  3861  071D                     	;# 
  3862  0791                     	;# 
  3863  0791                     	;# 
  3864  0792                     	;# 
  3865  0793                     	;# 
  3866  0793                     	;# 
  3867  0794                     	;# 
  3868  0795                     	;# 
  3869  0795                     	;# 
  3870  0796                     	;# 
  3871  0797                     	;# 
  3872  0797                     	;# 
  3873  0798                     	;# 
  3874  0799                     	;# 
  3875  079A                     	;# 
  3876  080C                     	;# 
  3877  080C                     	;# 
  3878  080D                     	;# 
  3879  080E                     	;# 
  3880  080E                     	;# 
  3881  080F                     	;# 
  3882  0810                     	;# 
  3883  0810                     	;# 
  3884  0811                     	;# 
  3885  0812                     	;# 
  3886  0812                     	;# 
  3887  0813                     	;# 
  3888  0814                     	;# 
  3889  0815                     	;# 
  3890  0816                     	;# 
  3891  0817                     	;# 
  3892  0818                     	;# 
  3893  0819                     	;# 
  3894  081A                     	;# 
  3895  081A                     	;# 
  3896  081B                     	;# 
  3897  081C                     	;# 
  3898  081C                     	;# 
  3899  081D                     	;# 
  3900  088C                     	;# 
  3901  088D                     	;# 
  3902  088E                     	;# 
  3903  088F                     	;# 
  3904  088F                     	;# 
  3905  0890                     	;# 
  3906  0891                     	;# 
  3907  0892                     	;# 
  3908  0893                     	;# 
  3909  0893                     	;# 
  3910  0894                     	;# 
  3911  0895                     	;# 
  3912  0896                     	;# 
  3913  0897                     	;# 
  3914  0897                     	;# 
  3915  0898                     	;# 
  3916  0899                     	;# 
  3917  0D8C                     	;# 
  3918  0D8C                     	;# 
  3919  0D8D                     	;# 
  3920  0D8E                     	;# 
  3921  0D8F                     	;# 
  3922  0D8F                     	;# 
  3923  0D90                     	;# 
  3924  0D91                     	;# 
  3925  0D92                     	;# 
  3926  0D92                     	;# 
  3927  0D93                     	;# 
  3928  0D94                     	;# 
  3929  0D95                     	;# 
  3930  0D95                     	;# 
  3931  0D96                     	;# 
  3932  0D97                     	;# 
  3933  0D98                     	;# 
  3934  0D99                     	;# 
  3935  0D9A                     	;# 
  3936  0D9B                     	;# 
  3937  0D9C                     	;# 
  3938  0D9D                     	;# 
  3939  0D9E                     	;# 
  3940  0D9E                     	;# 
  3941  0D9F                     	;# 
  3942  0DA0                     	;# 
  3943  0DA1                     	;# 
  3944  0DA1                     	;# 
  3945  0DA2                     	;# 
  3946  0DA3                     	;# 
  3947  0DA4                     	;# 
  3948  0DA4                     	;# 
  3949  0DA5                     	;# 
  3950  0DA6                     	;# 
  3951  0DA7                     	;# 
  3952  0DA7                     	;# 
  3953  0DA8                     	;# 
  3954  0DA9                     	;# 
  3955  0DAA                     	;# 
  3956  0DAB                     	;# 
  3957  0DAC                     	;# 
  3958  0DAD                     	;# 
  3959  0DAE                     	;# 
  3960  0DAF                     	;# 
  3961  0E0F                     	;# 
  3962  0E10                     	;# 
  3963  0E11                     	;# 
  3964  0E12                     	;# 
  3965  0E13                     	;# 
  3966  0E14                     	;# 
  3967  0E15                     	;# 
  3968  0E16                     	;# 
  3969  0E17                     	;# 
  3970  0E18                     	;# 
  3971  0E19                     	;# 
  3972  0E1A                     	;# 
  3973  0E1B                     	;# 
  3974  0E1C                     	;# 
  3975  0E1D                     	;# 
  3976  0E1E                     	;# 
  3977  0E1F                     	;# 
  3978  0E20                     	;# 
  3979  0E21                     	;# 
  3980  0E22                     	;# 
  3981  0E23                     	;# 
  3982  0E24                     	;# 
  3983  0E25                     	;# 
  3984  0E26                     	;# 
  3985  0E27                     	;# 
  3986  0E28                     	;# 
  3987  0E29                     	;# 
  3988  0E2A                     	;# 
  3989  0E2B                     	;# 
  3990  0E2C                     	;# 
  3991  0E2D                     	;# 
  3992  0E2E                     	;# 
  3993  0E90                     	;# 
  3994  0E91                     	;# 
  3995  0E92                     	;# 
  3996  0E94                     	;# 
  3997  0E95                     	;# 
  3998  0E9C                     	;# 
  3999  0E9D                     	;# 
  4000  0E9E                     	;# 
  4001  0E9F                     	;# 
  4002  0EA0                     	;# 
  4003  0EA1                     	;# 
  4004  0EA2                     	;# 
  4005  0EA3                     	;# 
  4006  0EA4                     	;# 
  4007  0EA5                     	;# 
  4008  0EA6                     	;# 
  4009  0EA7                     	;# 
  4010  0F0F                     	;# 
  4011  0F10                     	;# 
  4012  0F11                     	;# 
  4013  0F12                     	;# 
  4014  0F13                     	;# 
  4015  0F14                     	;# 
  4016  0F15                     	;# 
  4017  0F16                     	;# 
  4018  0F17                     	;# 
  4019  0F18                     	;# 
  4020  0F19                     	;# 
  4021  0F1A                     	;# 
  4022  0F1B                     	;# 
  4023  0F1C                     	;# 
  4024  0F1D                     	;# 
  4025  0F1E                     	;# 
  4026  0F1F                     	;# 
  4027  0F20                     	;# 
  4028  0F21                     	;# 
  4029  0F22                     	;# 
  4030  0F23                     	;# 
  4031  0F24                     	;# 
  4032  0F25                     	;# 
  4033  0F26                     	;# 
  4034  0F27                     	;# 
  4035  0F28                     	;# 
  4036  0F29                     	;# 
  4037  0F2A                     	;# 
  4038  0F2B                     	;# 
  4039  0F2C                     	;# 
  4040  0F2D                     	;# 
  4041  0F2E                     	;# 
  4042  0F2F                     	;# 
  4043  0F30                     	;# 
  4044  0F31                     	;# 
  4045  0F32                     	;# 
  4046  0F33                     	;# 
  4047  0F34                     	;# 
  4048  0F35                     	;# 
  4049  0F36                     	;# 
  4050  0F37                     	;# 
  4051  0FE4                     	;# 
  4052  0FE5                     	;# 
  4053  0FE6                     	;# 
  4054  0FE7                     	;# 
  4055  0FE8                     	;# 
  4056  0FE9                     	;# 
  4057  0FEA                     	;# 
  4058  0FEB                     	;# 
  4059  0FED                     	;# 
  4060  0FEE                     	;# 
  4061  0FEF                     	;# 
  4062                           
  4063 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  4064  0000                     
  4065 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  4066  0000                     
  4067 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  4068  0000                     
  4069                           	psect	stringtext1
  4070  01BC                     __pstringtext1:	
  4071  01BC                     _fsmStateTable:	
  4072  01BC  34FF               	retlw	low _I2C_DO_IDLE
  4073  01BD  3402               	retlw	high _I2C_DO_IDLE
  4074  01BE  34C1               	retlw	low _I2C_DO_SEND_ADR_READ
  4075  01BF  3402               	retlw	high _I2C_DO_SEND_ADR_READ
  4076  01C0  34C9               	retlw	low _I2C_DO_SEND_ADR_WRITE
  4077  01C1  3402               	retlw	high _I2C_DO_SEND_ADR_WRITE
  4078  01C2  3443               	retlw	low _I2C_DO_TX
  4079  01C3  3400               	retlw	high _I2C_DO_TX
  4080  01C4  34CA               	retlw	low _I2C_DO_RX
  4081  01C5  3400               	retlw	high _I2C_DO_RX
  4082  01C6  34EE               	retlw	low _I2C_DO_RCEN
  4083  01C7  3402               	retlw	high _I2C_DO_RCEN
  4084  01C8  3450               	retlw	low _I2C_DO_TX_EMPTY
  4085  01C9  3401               	retlw	high _I2C_DO_TX_EMPTY
  4086  01CA  3425               	retlw	low _I2C_DO_SEND_RESTART_READ
  4087  01CB  3403               	retlw	high _I2C_DO_SEND_RESTART_READ
  4088  01CC  3421               	retlw	low _I2C_DO_SEND_RESTART_WRITE
  4089  01CD  3403               	retlw	high _I2C_DO_SEND_RESTART_WRITE
  4090  01CE  341D               	retlw	low _I2C_DO_SEND_RESTART
  4091  01CF  3403               	retlw	high _I2C_DO_SEND_RESTART
  4092  01D0  3419               	retlw	low _I2C_DO_SEND_STOP
  4093  01D1  3403               	retlw	high _I2C_DO_SEND_STOP
  4094  01D2  3415               	retlw	low _I2C_DO_RX_ACK
  4095  01D3  3403               	retlw	high _I2C_DO_RX_ACK
  4096  01D4  3411               	retlw	low _I2C_DO_RX_NACK_STOP
  4097  01D5  3403               	retlw	high _I2C_DO_RX_NACK_STOP
  4098  01D6  340D               	retlw	low _I2C_DO_RX_NACK_RESTART
  4099  01D7  3403               	retlw	high _I2C_DO_RX_NACK_RESTART
  4100  01D8  34FA               	retlw	low _I2C_DO_RESET
  4101  01D9  3402               	retlw	high _I2C_DO_RESET
  4102  01DA  3499               	retlw	low _I2C_DO_ADDRESS_NACK
  4103  01DB  3401               	retlw	high _I2C_DO_ADDRESS_NACK
  4104  01DC                     __end_of_fsmStateTable:	
  4105  001B                     _PR2	set	27
  4106  001A                     _TMR2	set	26
  4107  001C                     _T2CONbits	set	28
  4108  001F                     _T2RSTbits	set	31
  4109  001D                     _T2HLTbits	set	29
  4110  001C                     _T2CON	set	28
  4111  001A                     _T2TMR	set	26
  4112  001B                     _T2PR	set	27
  4113  001F                     _T2RST	set	31
  4114  001D                     _T2HLT	set	29
  4115  001E                     _T2CLKCON	set	30
  4116  000B                     _INTCONbits	set	11
  4117  0010                     _PIR1bits	set	16
  4118  0011                     _PIR2bits	set	17
  4119  009D                     _ADCON0bits	set	157
  4120  009C                     _ADRESH	set	156
  4121  009B                     _ADRESL	set	155
  4122  009F                     _ADCON2	set	159
  4123  009E                     _ADCON1	set	158
  4124  009D                     _ADCON0	set	157
  4125  0095                     _OPTION_REGbits	set	149
  4126  008E                     _TRISC	set	142
  4127  008D                     _TRISB	set	141
  4128  008C                     _TRISA	set	140
  4129  0098                     _OSCTUNE	set	152
  4130  0099                     _OSCCON	set	153
  4131  0091                     _PIE2bits	set	145
  4132  0090                     _PIE1bits	set	144
  4133  04D6                     _PLLR	set	1238
  4134  010E                     _LATC	set	270
  4135  010D                     _LATB	set	269
  4136  010C                     _LATA	set	268
  4137  0116                     _BORCON	set	278
  4138  019A                     _TX1REG	set	410
  4139  0199                     _RC1REG	set	409
  4140  019D                     _RC1STAbits	set	413
  4141  019E                     _TX1STAbits	set	414
  4142  019C                     _SPBRGH	set	412
  4143  019B                     _SPBRGL	set	411
  4144  019E                     _TX1STA	set	414
  4145  019D                     _RC1STA	set	413
  4146  019F                     _BAUD1CON	set	415
  4147  018C                     _ANSELA	set	396
  4148  018D                     _ANSELB	set	397
  4149  018E                     _ANSELC	set	398
  4150  020E                     _WPUC	set	526
  4151  020C                     _WPUA	set	524
  4152  020D                     _WPUB	set	525
  4153  0214                     _SSP1STATbits	set	532
  4154  0216                     _SSP1CON2bits	set	534
  4155  0211                     _SSP1BUF	set	529
  4156  0215                     _SSP1CON1bits	set	533
  4157  0212                     _SSP1ADD	set	530
  4158  0216                     _SSP1CON2	set	534
  4159  0215                     _SSP1CON1	set	533
  4160  0214                     _SSP1STAT	set	532
  4161  029E                     _CCPTMRSbits	set	670
  4162  028E                     _ODCONC	set	654
  4163  028D                     _ODCONB	set	653
  4164  028C                     _ODCONA	set	652
  4165  030E                     _SLRCONC	set	782
  4166  030D                     _SLRCONB	set	781
  4167  030C                     _SLRCONA	set	780
  4168  038E                     _INLVLC	set	910
  4169  038D                     _INLVLB	set	909
  4170  038C                     _INLVLA	set	908
  4171  0617                     _PWM3DCL	set	1559
  4172  0618                     _PWM3DCH	set	1560
  4173  0619                     _PWM3CON	set	1561
  4174  0E20                     _SSPCLKPPS	set	3616
  4175  0E21                     _SSPDATPPS	set	3617
  4176  0E24                     _RXPPS	set	3620
  4177  0EA5                     _RC5PPS	set	3749
  4178  0E9C                     _RB4PPS	set	3740
  4179  0E9F                     _RB7PPS	set	3743
  4180  0E9E                     _RB6PPS	set	3742
  4181                           
  4182                           ; #config settings
  4183  0000                     
  4184                           	psect	cinit
  4185  0032                     start_initialization:	
  4186  0032                     __initialization:	
  4187                           
  4188                           ; Clear objects allocated to COMMON
  4189  0032  01F8               	clrf	__pbssCOMMON& (0+127)
  4190  0033  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  4191  0034  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  4192  0035  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  4193  0036  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  4194  0037  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
  4195                           
  4196                           ; Clear objects allocated to BANK0
  4197  0038  3020               	movlw	low __pbssBANK0
  4198  0039  0084               	movwf	4
  4199  003A  3000               	movlw	high __pbssBANK0
  4200  003B  0085               	movwf	5
  4201  003C  3026               	movlw	38
  4202  003D  3182  22D0         	fcall	clear_ram0
  4203  003F                     end_of_initialization:	
  4204                           ;End of C runtime variable initialization code
  4205                           
  4206  003F                     __end_of__initialization:	
  4207  003F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4208  0040  0020               	movlb	0
  4209  0041  3183  2B09         	ljmp	_main	;jump to C main() function
  4210                           
  4211                           	psect	bssCOMMON
  4212  0078                     __pbssCOMMON:	
  4213  0078                     _ADC_InterruptHandler:	
  4214  0078                     	ds	2
  4215  007A                     TMR2_ISR@CountCallBack:	
  4216  007A                     	ds	2
  4217  007C                     _MSSP_InterruptHandler:	
  4218  007C                     	ds	2
  4219                           
  4220                           	psect	bssBANK0
  4221  0020                     __pbssBANK0:	
  4222  0020                     _I2C_Status:	
  4223  0020                     	ds	29
  4224  003D                     _TMR2_InterruptHandler:	
  4225  003D                     	ds	2
  4226  003F                     _EUSART_ErrorHandler:	
  4227  003F                     	ds	2
  4228  0041                     _EUSART_OverrunErrorHandler:	
  4229  0041                     	ds	2
  4230  0043                     _EUSART_FramingErrorHandler:	
  4231  0043                     	ds	2
  4232  0045                     _eusartRxLastError:	
  4233  0045                     	ds	1
  4234                           
  4235                           	psect	clrtext
  4236  02D0                     clear_ram0:	
  4237                           ;	Called with FSR0 containing the base address, and
  4238                           ;	WREG with the size to clear
  4239                           
  4240  02D0  0064               	clrwdt	;clear the watchdog before getting into this loop
  4241  02D1                     clrloop0:	
  4242  02D1  0180               	clrf	0	;clear RAM location pointed to by FSR
  4243  02D2  3101               	addfsr 0,1
  4244  02D3  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4245  02D4  2AD1               	goto	clrloop0	;have we reached the end yet?
  4246  02D5  3400               	retlw	0	;all done for this memory range, return
  4247                           
  4248                           	psect	cstackCOMMON
  4249  0070                     __pcstackCOMMON:	
  4250  0070                     ?_SYSTEM_Initialize:	
  4251  0070                     ?_I2C_DO_IDLE:	
  4252                           ; 1 bytes @ 0x0
  4253                           
  4254  0070                     ??_I2C_DO_IDLE:	
  4255                           ; 1 bytes @ 0x0
  4256                           
  4257  0070                     ?_I2C_DO_SEND_ADR_READ:	
  4258                           ; 1 bytes @ 0x0
  4259                           
  4260  0070                     ??_I2C_DO_SEND_ADR_READ:	
  4261                           ; 1 bytes @ 0x0
  4262                           
  4263  0070                     ?_I2C_DO_SEND_ADR_WRITE:	
  4264                           ; 1 bytes @ 0x0
  4265                           
  4266  0070                     ?_I2C_DO_TX:	
  4267                           ; 1 bytes @ 0x0
  4268                           
  4269  0070                     ?_I2C_DO_RX:	
  4270                           ; 1 bytes @ 0x0
  4271                           
  4272  0070                     ??_I2C_DO_RX:	
  4273                           ; 1 bytes @ 0x0
  4274                           
  4275  0070                     ?_I2C_DO_RCEN:	
  4276                           ; 1 bytes @ 0x0
  4277                           
  4278  0070                     ??_I2C_DO_RCEN:	
  4279                           ; 1 bytes @ 0x0
  4280                           
  4281  0070                     ?_I2C_DO_TX_EMPTY:	
  4282                           ; 1 bytes @ 0x0
  4283                           
  4284  0070                     ??_I2C_DO_TX_EMPTY:	
  4285                           ; 1 bytes @ 0x0
  4286                           
  4287  0070                     ?_I2C_DO_SEND_RESTART_READ:	
  4288                           ; 1 bytes @ 0x0
  4289                           
  4290  0070                     ??_I2C_DO_SEND_RESTART_READ:	
  4291                           ; 1 bytes @ 0x0
  4292                           
  4293  0070                     ?_I2C_DO_SEND_RESTART_WRITE:	
  4294                           ; 1 bytes @ 0x0
  4295                           
  4296  0070                     ??_I2C_DO_SEND_RESTART_WRITE:	
  4297                           ; 1 bytes @ 0x0
  4298                           
  4299  0070                     ?_I2C_DO_SEND_RESTART:	
  4300                           ; 1 bytes @ 0x0
  4301                           
  4302  0070                     ??_I2C_DO_SEND_RESTART:	
  4303                           ; 1 bytes @ 0x0
  4304                           
  4305  0070                     ?_I2C_DO_SEND_STOP:	
  4306                           ; 1 bytes @ 0x0
  4307                           
  4308  0070                     ??_I2C_DO_SEND_STOP:	
  4309                           ; 1 bytes @ 0x0
  4310                           
  4311  0070                     ?_I2C_DO_RX_ACK:	
  4312                           ; 1 bytes @ 0x0
  4313                           
  4314  0070                     ??_I2C_DO_RX_ACK:	
  4315                           ; 1 bytes @ 0x0
  4316                           
  4317  0070                     ?_I2C_DO_RX_NACK_STOP:	
  4318                           ; 1 bytes @ 0x0
  4319                           
  4320  0070                     ??_I2C_DO_RX_NACK_STOP:	
  4321                           ; 1 bytes @ 0x0
  4322                           
  4323  0070                     ?_I2C_DO_RX_NACK_RESTART:	
  4324                           ; 1 bytes @ 0x0
  4325                           
  4326  0070                     ??_I2C_DO_RX_NACK_RESTART:	
  4327                           ; 1 bytes @ 0x0
  4328                           
  4329  0070                     ?_I2C_DO_RESET:	
  4330                           ; 1 bytes @ 0x0
  4331                           
  4332  0070                     ??_I2C_DO_RESET:	
  4333                           ; 1 bytes @ 0x0
  4334                           
  4335  0070                     ?_I2C_DO_ADDRESS_NACK:	
  4336                           ; 1 bytes @ 0x0
  4337                           
  4338  0070                     ??_I2C_DO_ADDRESS_NACK:	
  4339                           ; 1 bytes @ 0x0
  4340                           
  4341  0070                     ?_I2C_MasterIsr:	
  4342                           ; 1 bytes @ 0x0
  4343                           
  4344  0070                     ?_I2C_MasterClearIrq:	
  4345                           ; 1 bytes @ 0x0
  4346                           
  4347  0070                     ??_I2C_MasterClearIrq:	
  4348                           ; 1 bytes @ 0x0
  4349                           
  4350  0070                     ?_I2C_SetCallback:	
  4351                           ; 1 bytes @ 0x0
  4352                           
  4353  0070                     ?_I2C_MasterFsm:	
  4354                           ; 1 bytes @ 0x0
  4355                           
  4356  0070                     ?_I2C_MasterIsNack:	
  4357                           ; 1 bytes @ 0x0
  4358                           
  4359  0070                     ??_I2C_MasterIsNack:	
  4360                           ; 1 bytes @ 0x0
  4361                           
  4362  0070                     ?_I2C_MasterSendTxData:	
  4363                           ; 1 bytes @ 0x0
  4364                           
  4365  0070                     ??_I2C_MasterSendTxData:	
  4366                           ; 1 bytes @ 0x0
  4367                           
  4368  0070                     ?_I2C_MasterGetRxData:	
  4369                           ; 1 bytes @ 0x0
  4370                           
  4371  0070                     ??_I2C_MasterGetRxData:	
  4372                           ; 1 bytes @ 0x0
  4373                           
  4374  0070                     ?_I2C_MasterSendAck:	
  4375                           ; 1 bytes @ 0x0
  4376                           
  4377  0070                     ??_I2C_MasterSendAck:	
  4378                           ; 1 bytes @ 0x0
  4379                           
  4380  0070                     ?_I2C_MasterStartRx:	
  4381                           ; 1 bytes @ 0x0
  4382                           
  4383  0070                     ??_I2C_MasterStartRx:	
  4384                           ; 1 bytes @ 0x0
  4385                           
  4386  0070                     ?_I2C_MasterSetIrq:	
  4387                           ; 1 bytes @ 0x0
  4388                           
  4389  0070                     ??_I2C_MasterSetIrq:	
  4390                           ; 1 bytes @ 0x0
  4391                           
  4392  0070                     ?_I2C_MasterEnableRestart:	
  4393                           ; 1 bytes @ 0x0
  4394                           
  4395  0070                     ??_I2C_MasterEnableRestart:	
  4396                           ; 1 bytes @ 0x0
  4397                           
  4398  0070                     ?_I2C_MasterStop:	
  4399                           ; 1 bytes @ 0x0
  4400                           
  4401  0070                     ??_I2C_MasterStop:	
  4402                           ; 1 bytes @ 0x0
  4403                           
  4404  0070                     ?_I2C_MasterSendNack:	
  4405                           ; 1 bytes @ 0x0
  4406                           
  4407  0070                     ??_I2C_MasterSendNack:	
  4408                           ; 1 bytes @ 0x0
  4409                           
  4410  0070                     ?_TMR2_ISR:	
  4411                           ; 1 bytes @ 0x0
  4412                           
  4413  0070                     ??_TMR2_ISR:	
  4414                           ; 1 bytes @ 0x0
  4415                           
  4416  0070                     ?_PIN_MANAGER_Initialize:	
  4417                           ; 1 bytes @ 0x0
  4418                           
  4419  0070                     ?_OSCILLATOR_Initialize:	
  4420                           ; 1 bytes @ 0x0
  4421                           
  4422  0070                     ?_ADC_Initialize:	
  4423                           ; 1 bytes @ 0x0
  4424                           
  4425  0070                     ?_PWM3_Initialize:	
  4426                           ; 1 bytes @ 0x0
  4427                           
  4428  0070                     ?_TMR2_Initialize:	
  4429                           ; 1 bytes @ 0x0
  4430                           
  4431  0070                     ?_EUSART_Initialize:	
  4432                           ; 1 bytes @ 0x0
  4433                           
  4434  0070                     ?_TMR2_DefaultInterruptHandler:	
  4435                           ; 1 bytes @ 0x0
  4436                           
  4437  0070                     ??_TMR2_DefaultInterruptHandler:	
  4438                           ; 1 bytes @ 0x0
  4439                           
  4440  0070                     ?_TMR2_CallBack:	
  4441                           ; 1 bytes @ 0x0
  4442                           
  4443  0070                     ??_TMR2_CallBack:	
  4444                           ; 1 bytes @ 0x0
  4445                           
  4446  0070                     ?_main:	
  4447                           ; 1 bytes @ 0x0
  4448                           
  4449  0070                     ?_I2C_Initialize:	
  4450                           ; 1 bytes @ 0x0
  4451                           
  4452  0070                     ?_I2C_SetBuffer:	
  4453                           ; 1 bytes @ 0x0
  4454                           
  4455  0070                     ?_INTERRUPT_InterruptManager:	
  4456                           ; 1 bytes @ 0x0
  4457                           
  4458  0070                     I2C_MasterSendTxData@data:	
  4459                           ; 1 bytes @ 0x0
  4460                           
  4461  0070                     I2C_SetBuffer@bufferSize:	
  4462                           ; 1 bytes @ 0x0
  4463                           
  4464  0070                     I2C_SetCallback@cb:	
  4465                           ; 2 bytes @ 0x0
  4466                           
  4467                           
  4468                           ; 2 bytes @ 0x0
  4469  0070                     	ds	1
  4470  0071                     ??_I2C_DO_SEND_ADR_WRITE:	
  4471  0071                     ??_I2C_DO_TX:	
  4472                           ; 1 bytes @ 0x1
  4473                           
  4474                           
  4475                           ; 1 bytes @ 0x1
  4476  0071                     	ds	1
  4477  0072                     ??_I2C_SetBuffer:	
  4478  0072                     I2C_SetCallback@ptr:	
  4479                           ; 1 bytes @ 0x2
  4480                           
  4481  0072                     _I2C_DO_TX$504:	
  4482                           ; 1 bytes @ 0x2
  4483                           
  4484                           
  4485                           ; 2 bytes @ 0x2
  4486  0072                     	ds	1
  4487  0073                     ??_I2C_SetCallback:	
  4488  0073                     I2C_SetBuffer@buffer:	
  4489                           ; 1 bytes @ 0x3
  4490                           
  4491                           
  4492                           ; 1 bytes @ 0x3
  4493  0073                     	ds	1
  4494  0074                     ??_I2C_MasterFsm:	
  4495  0074                     I2C_SetCallback@idx:	
  4496                           ; 1 bytes @ 0x4
  4497                           
  4498                           
  4499                           ; 1 bytes @ 0x4
  4500  0074                     	ds	1
  4501  0075                     ?_I2C_SetDataCompleteCallback:	
  4502  0075                     I2C_SetDataCompleteCallback@cb:	
  4503                           ; 1 bytes @ 0x5
  4504                           
  4505                           
  4506                           ; 2 bytes @ 0x5
  4507  0075                     	ds	2
  4508  0077                     ??_I2C_MasterIsr:	
  4509  0077                     ??_INTERRUPT_InterruptManager:	
  4510                           ; 1 bytes @ 0x7
  4511                           
  4512  0077                     I2C_SetDataCompleteCallback@ptr:	
  4513                           ; 1 bytes @ 0x7
  4514                           
  4515                           
  4516                           ; 1 bytes @ 0x7
  4517  0077                     	ds	1
  4518  0078                     ??_I2C_CallbackReturnStop:	
  4519  0078                     ??_I2C_CallbackReturnReset:	
  4520                           ; 1 bytes @ 0x8
  4521                           
  4522  0078                     ??_rd1RegCompleteHandler:	
  4523                           ; 1 bytes @ 0x8
  4524                           
  4525  0078                     ??_rd2RegCompleteHandler:	
  4526                           ; 1 bytes @ 0x8
  4527                           
  4528  0078                     ??_wr1RegCompleteHandler:	
  4529                           ; 1 bytes @ 0x8
  4530                           
  4531  0078                     ??_wr2RegCompleteHandler:	
  4532                           ; 1 bytes @ 0x8
  4533                           
  4534  0078                     ??_rdBlkRegCompleteHandler:	
  4535                           ; 1 bytes @ 0x8
  4536                           
  4537                           
  4538                           	psect	cstackBANK0
  4539  0046                     __pcstackBANK0:	
  4540                           ; 1 bytes @ 0x8
  4541                           
  4542  0046                     ??_PIN_MANAGER_Initialize:	
  4543  0046                     ??_OSCILLATOR_Initialize:	
  4544                           ; 1 bytes @ 0x0
  4545                           
  4546  0046                     ??_ADC_Initialize:	
  4547                           ; 1 bytes @ 0x0
  4548                           
  4549  0046                     ??_PWM3_Initialize:	
  4550                           ; 1 bytes @ 0x0
  4551                           
  4552  0046                     ?_EUSART_SetFramingErrorHandler:	
  4553                           ; 1 bytes @ 0x0
  4554                           
  4555  0046                     ?_EUSART_SetOverrunErrorHandler:	
  4556                           ; 1 bytes @ 0x0
  4557                           
  4558  0046                     ?_EUSART_SetErrorHandler:	
  4559                           ; 1 bytes @ 0x0
  4560                           
  4561  0046                     ?_TMR2_SetInterruptHandler:	
  4562                           ; 1 bytes @ 0x0
  4563                           
  4564  0046                     ??_I2C_Initialize:	
  4565                           ; 1 bytes @ 0x0
  4566                           
  4567  0046                     ??_I2C_SetDataCompleteCallback:	
  4568                           ; 1 bytes @ 0x0
  4569                           
  4570  0046                     EUSART_SetFramingErrorHandler@interruptHandler:	
  4571                           ; 1 bytes @ 0x0
  4572                           
  4573  0046                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  4574                           ; 2 bytes @ 0x0
  4575                           
  4576  0046                     EUSART_SetErrorHandler@interruptHandler:	
  4577                           ; 2 bytes @ 0x0
  4578                           
  4579  0046                     TMR2_SetInterruptHandler@InterruptHandler:	
  4580                           ; 2 bytes @ 0x0
  4581                           
  4582                           
  4583                           ; 2 bytes @ 0x0
  4584  0046                     	ds	1
  4585  0047                     ?_I2C_CallbackReturnStop:	
  4586  0047                     ?_I2C_CallbackReturnReset:	
  4587                           ; 1 bytes @ 0x1
  4588                           
  4589  0047                     ?_rd1RegCompleteHandler:	
  4590                           ; 1 bytes @ 0x1
  4591                           
  4592  0047                     ?_rd2RegCompleteHandler:	
  4593                           ; 1 bytes @ 0x1
  4594                           
  4595  0047                     ?_wr1RegCompleteHandler:	
  4596                           ; 1 bytes @ 0x1
  4597                           
  4598  0047                     ?_wr2RegCompleteHandler:	
  4599                           ; 1 bytes @ 0x1
  4600                           
  4601  0047                     ?_rdBlkRegCompleteHandler:	
  4602                           ; 1 bytes @ 0x1
  4603                           
  4604  0047                     I2C_CallbackReturnStop@funPtr:	
  4605                           ; 1 bytes @ 0x1
  4606                           
  4607  0047                     I2C_CallbackReturnReset@funPtr:	
  4608                           ; 1 bytes @ 0x1
  4609                           
  4610  0047                     rd1RegCompleteHandler@ptr:	
  4611                           ; 1 bytes @ 0x1
  4612                           
  4613  0047                     rd2RegCompleteHandler@ptr:	
  4614                           ; 1 bytes @ 0x1
  4615                           
  4616  0047                     wr1RegCompleteHandler@ptr:	
  4617                           ; 1 bytes @ 0x1
  4618                           
  4619  0047                     wr2RegCompleteHandler@ptr:	
  4620                           ; 1 bytes @ 0x1
  4621                           
  4622  0047                     rdBlkRegCompleteHandler@ptr:	
  4623                           ; 1 bytes @ 0x1
  4624                           
  4625                           
  4626                           ; 1 bytes @ 0x1
  4627  0047                     	ds	1
  4628  0048                     ??_SYSTEM_Initialize:	
  4629  0048                     ??_TMR2_Initialize:	
  4630                           ; 1 bytes @ 0x2
  4631                           
  4632  0048                     ??_EUSART_Initialize:	
  4633                           ; 1 bytes @ 0x2
  4634                           
  4635  0048                     ??_EUSART_SetFramingErrorHandler:	
  4636                           ; 1 bytes @ 0x2
  4637                           
  4638  0048                     ??_EUSART_SetOverrunErrorHandler:	
  4639                           ; 1 bytes @ 0x2
  4640                           
  4641  0048                     ??_EUSART_SetErrorHandler:	
  4642                           ; 1 bytes @ 0x2
  4643                           
  4644  0048                     ??_TMR2_SetInterruptHandler:	
  4645                           ; 1 bytes @ 0x2
  4646                           
  4647  0048                     ??_main:	
  4648                           ; 1 bytes @ 0x2
  4649                           
  4650                           
  4651                           	psect	maintext
  4652  0309                     __pmaintext:	
  4653                           ; 1 bytes @ 0x2
  4654 ;;
  4655 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4656 ;;
  4657 ;; *************** function _main *****************
  4658 ;; Defined at:
  4659 ;;		line 49 in file "main.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;		None
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;		None
  4664 ;; Return value:  Size  Location     Type
  4665 ;;                  1    wreg      void 
  4666 ;; Registers used:
  4667 ;;		wreg, status,2, status,0, pclath, cstack
  4668 ;; Tracked objects:
  4669 ;;		On entry : B1F/0
  4670 ;;		On exit  : 0/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4677 ;;Total ram usage:        0 bytes
  4678 ;; Hardware stack levels required when called:   10
  4679 ;; This function calls:
  4680 ;;		_SYSTEM_Initialize
  4681 ;; This function is called by:
  4682 ;;		Startup code after reset
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           
  4686                           
  4687                           ;psect for function _main
  4688  0309                     _main:	
  4689                           
  4690                           ;main.c: 52: SYSTEM_Initialize();
  4691                           
  4692                           ;incstack = 0
  4693                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  4694  0309  3181  21F4  3183   	fcall	_SYSTEM_Initialize
  4695  030C                     l9:	
  4696                           ;main.c: 69: while (1)
  4697                           
  4698                           
  4699                           ;main.c: 70: {
  4700  030C  2B0C               	goto	l9
  4701  030D                     __end_of_main:	
  4702                           
  4703                           	psect	text1
  4704  01F4                     __ptext1:	
  4705 ;; *************** function _SYSTEM_Initialize *****************
  4706 ;; Defined at:
  4707 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;		None
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;		None
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  1    wreg      void 
  4714 ;; Registers used:
  4715 ;;		wreg, status,2, status,0, pclath, cstack
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4725 ;;Total ram usage:        0 bytes
  4726 ;; Hardware stack levels used:    1
  4727 ;; Hardware stack levels required when called:    9
  4728 ;; This function calls:
  4729 ;;		_ADC_Initialize
  4730 ;;		_EUSART_Initialize
  4731 ;;		_I2C_Initialize
  4732 ;;		_OSCILLATOR_Initialize
  4733 ;;		_PIN_MANAGER_Initialize
  4734 ;;		_PWM3_Initialize
  4735 ;;		_TMR2_Initialize
  4736 ;; This function is called by:
  4737 ;;		_main
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741                           
  4742                           ;psect for function _SYSTEM_Initialize
  4743  01F4                     _SYSTEM_Initialize:	
  4744                           
  4745                           ;mcc.c: 52: I2C_Initialize();
  4746                           
  4747                           ;incstack = 0
  4748                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4749  01F4  3182  22AF  3181   	fcall	_I2C_Initialize
  4750                           
  4751                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  4752  01F7  3180  208E  3181   	fcall	_PIN_MANAGER_Initialize
  4753                           
  4754                           ;mcc.c: 54: OSCILLATOR_Initialize();
  4755  01FA  3182  22A5  3181   	fcall	_OSCILLATOR_Initialize
  4756                           
  4757                           ;mcc.c: 55: ADC_Initialize();
  4758  01FD  3182  22B8  3181   	fcall	_ADC_Initialize
  4759                           
  4760                           ;mcc.c: 56: PWM3_Initialize();
  4761  0200  3182  228F  3181   	fcall	_PWM3_Initialize
  4762                           
  4763                           ;mcc.c: 57: TMR2_Initialize();
  4764  0203  3182  2209  3181   	fcall	_TMR2_Initialize
  4765                           
  4766                           ;mcc.c: 58: EUSART_Initialize();
  4767  0206  3181  212B         	fcall	_EUSART_Initialize
  4768  0208  0008               	return
  4769  0209                     __end_of_SYSTEM_Initialize:	
  4770                           
  4771                           	psect	text2
  4772  0209                     __ptext2:	
  4773 ;; *************** function _TMR2_Initialize *****************
  4774 ;; Defined at:
  4775 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  4776 ;; Parameters:    Size  Location     Type
  4777 ;;		None
  4778 ;; Auto vars:     Size  Location     Type
  4779 ;;		None
  4780 ;; Return value:  Size  Location     Type
  4781 ;;                  1    wreg      void 
  4782 ;; Registers used:
  4783 ;;		wreg, status,2, status,0, pclath, cstack
  4784 ;; Tracked objects:
  4785 ;;		On entry : 0/0
  4786 ;;		On exit  : 0/0
  4787 ;;		Unchanged: 0/0
  4788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4793 ;;Total ram usage:        0 bytes
  4794 ;; Hardware stack levels used:    1
  4795 ;; Hardware stack levels required when called:    8
  4796 ;; This function calls:
  4797 ;;		_TMR2_SetInterruptHandler
  4798 ;; This function is called by:
  4799 ;;		_SYSTEM_Initialize
  4800 ;; This function uses a non-reentrant model
  4801 ;;
  4802                           
  4803                           
  4804                           ;psect for function _TMR2_Initialize
  4805  0209                     _TMR2_Initialize:	
  4806                           
  4807                           ;tmr2.c: 69: T2CLKCON = 0x00;
  4808                           
  4809                           ;incstack = 0
  4810                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4811  0209  0020               	movlb	0	; select bank0
  4812  020A  019E               	clrf	30	;volatile
  4813                           
  4814                           ;tmr2.c: 72: T2HLT = 0x00;
  4815  020B  019D               	clrf	29	;volatile
  4816                           
  4817                           ;tmr2.c: 75: T2RST = 0x00;
  4818  020C  019F               	clrf	31	;volatile
  4819                           
  4820                           ;tmr2.c: 78: T2PR = 0x7C;
  4821  020D  307C               	movlw	124
  4822  020E  009B               	movwf	27	;volatile
  4823                           
  4824                           ;tmr2.c: 81: T2TMR = 0x00;
  4825  020F  019A               	clrf	26	;volatile
  4826                           
  4827                           ;tmr2.c: 84: PIR1bits.TMR2IF = 0;
  4828  0210  1090               	bcf	16,1	;volatile
  4829                           
  4830                           ;tmr2.c: 87: PIE1bits.TMR2IE = 1;
  4831  0211  0021               	movlb	1	; select bank1
  4832  0212  1490               	bsf	16,1	;volatile
  4833                           
  4834                           ;tmr2.c: 90: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  4835  0213  304A               	movlw	low _TMR2_DefaultInterruptHandler
  4836  0214  0020               	movlb	0	; select bank0
  4837  0215  00C6               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  4838  0216  3003               	movlw	high _TMR2_DefaultInterruptHandler
  4839  0217  00C7               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  4840  0218  3182  22D6         	fcall	_TMR2_SetInterruptHandler
  4841                           
  4842                           ;tmr2.c: 93: T2CON = 0xE0;
  4843  021A  30E0               	movlw	224
  4844  021B  0020               	movlb	0	; select bank0
  4845  021C  009C               	movwf	28	;volatile
  4846  021D  0008               	return
  4847  021E                     __end_of_TMR2_Initialize:	
  4848                           
  4849                           	psect	text3
  4850  02D6                     __ptext3:	
  4851 ;; *************** function _TMR2_SetInterruptHandler *****************
  4852 ;; Defined at:
  4853 ;;		line 193 in file "mcc_generated_files/tmr2.c"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  4856 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;		None
  4859 ;; Return value:  Size  Location     Type
  4860 ;;                  1    wreg      void 
  4861 ;; Registers used:
  4862 ;;		wreg
  4863 ;; Tracked objects:
  4864 ;;		On entry : 0/0
  4865 ;;		On exit  : 0/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4868 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4871 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4872 ;;Total ram usage:        2 bytes
  4873 ;; Hardware stack levels used:    1
  4874 ;; Hardware stack levels required when called:    7
  4875 ;; This function calls:
  4876 ;;		Nothing
  4877 ;; This function is called by:
  4878 ;;		_TMR2_Initialize
  4879 ;; This function uses a non-reentrant model
  4880 ;;
  4881                           
  4882                           
  4883                           ;psect for function _TMR2_SetInterruptHandler
  4884  02D6                     _TMR2_SetInterruptHandler:	
  4885                           
  4886                           ;tmr2.c: 194: TMR2_InterruptHandler = InterruptHandler;
  4887                           
  4888                           ;incstack = 0
  4889                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  4890  02D6  0020               	movlb	0	; select bank0
  4891  02D7  0847               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  4892  02D8  00BE               	movwf	_TMR2_InterruptHandler+1
  4893  02D9  0846               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  4894  02DA  00BD               	movwf	_TMR2_InterruptHandler
  4895  02DB  0008               	return
  4896  02DC                     __end_of_TMR2_SetInterruptHandler:	
  4897                           
  4898                           	psect	text4
  4899  028F                     __ptext4:	
  4900 ;; *************** function _PWM3_Initialize *****************
  4901 ;; Defined at:
  4902 ;;		line 58 in file "mcc_generated_files/pwm3.c"
  4903 ;; Parameters:    Size  Location     Type
  4904 ;;		None
  4905 ;; Auto vars:     Size  Location     Type
  4906 ;;		None
  4907 ;; Return value:  Size  Location     Type
  4908 ;;                  1    wreg      void 
  4909 ;; Registers used:
  4910 ;;		wreg, status,2, status,0
  4911 ;; Tracked objects:
  4912 ;;		On entry : 0/0
  4913 ;;		On exit  : 0/0
  4914 ;;		Unchanged: 0/0
  4915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4920 ;;Total ram usage:        0 bytes
  4921 ;; Hardware stack levels used:    1
  4922 ;; Hardware stack levels required when called:    7
  4923 ;; This function calls:
  4924 ;;		Nothing
  4925 ;; This function is called by:
  4926 ;;		_SYSTEM_Initialize
  4927 ;; This function uses a non-reentrant model
  4928 ;;
  4929                           
  4930                           
  4931                           ;psect for function _PWM3_Initialize
  4932  028F                     _PWM3_Initialize:	
  4933                           
  4934                           ;pwm3.c: 62: PWM3CON = 0x80;
  4935                           
  4936                           ;incstack = 0
  4937                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
  4938  028F  3080               	movlw	128
  4939  0290  002C               	movlb	12	; select bank12
  4940  0291  0099               	movwf	25	;volatile
  4941                           
  4942                           ;pwm3.c: 65: PWM3DCH = 0x3E;
  4943  0292  303E               	movlw	62
  4944  0293  0098               	movwf	24	;volatile
  4945                           
  4946                           ;pwm3.c: 68: PWM3DCL = 0x40;
  4947  0294  3040               	movlw	64
  4948  0295  0097               	movwf	23	;volatile
  4949                           
  4950                           ;pwm3.c: 71: CCPTMRSbits.P3TSEL = 0;
  4951  0296  30CF               	movlw	-49
  4952  0297  0025               	movlb	5	; select bank5
  4953  0298  059E               	andwf	30,f	;volatile
  4954  0299  0008               	return
  4955  029A                     __end_of_PWM3_Initialize:	
  4956                           
  4957                           	psect	text5
  4958  008E                     __ptext5:	
  4959 ;; *************** function _PIN_MANAGER_Initialize *****************
  4960 ;; Defined at:
  4961 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4962 ;; Parameters:    Size  Location     Type
  4963 ;;		None
  4964 ;; Auto vars:     Size  Location     Type
  4965 ;;		None
  4966 ;; Return value:  Size  Location     Type
  4967 ;;                  1    wreg      void 
  4968 ;; Registers used:
  4969 ;;		wreg, status,2
  4970 ;; Tracked objects:
  4971 ;;		On entry : 0/0
  4972 ;;		On exit  : 0/0
  4973 ;;		Unchanged: 0/0
  4974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4979 ;;Total ram usage:        0 bytes
  4980 ;; Hardware stack levels used:    1
  4981 ;; Hardware stack levels required when called:    7
  4982 ;; This function calls:
  4983 ;;		Nothing
  4984 ;; This function is called by:
  4985 ;;		_SYSTEM_Initialize
  4986 ;; This function uses a non-reentrant model
  4987 ;;
  4988                           
  4989                           
  4990                           ;psect for function _PIN_MANAGER_Initialize
  4991  008E                     _PIN_MANAGER_Initialize:	
  4992                           
  4993                           ;pin_manager.c: 60: LATA = 0x00;
  4994                           
  4995                           ;incstack = 0
  4996                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4997  008E  0022               	movlb	2	; select bank2
  4998  008F  018C               	clrf	12	;volatile
  4999                           
  5000                           ;pin_manager.c: 61: LATB = 0x00;
  5001  0090  018D               	clrf	13	;volatile
  5002                           
  5003                           ;pin_manager.c: 62: LATC = 0x00;
  5004  0091  018E               	clrf	14	;volatile
  5005                           
  5006                           ;pin_manager.c: 67: TRISA = 0x37;
  5007  0092  3037               	movlw	55
  5008  0093  0021               	movlb	1	; select bank1
  5009  0094  008C               	movwf	12	;volatile
  5010                           
  5011                           ;pin_manager.c: 68: TRISB = 0x70;
  5012  0095  3070               	movlw	112
  5013  0096  008D               	movwf	13	;volatile
  5014                           
  5015                           ;pin_manager.c: 69: TRISC = 0xDF;
  5016  0097  30DF               	movlw	223
  5017  0098  008E               	movwf	14	;volatile
  5018                           
  5019                           ;pin_manager.c: 74: ANSELC = 0xCF;
  5020  0099  30CF               	movlw	207
  5021  009A  0023               	movlb	3	; select bank3
  5022  009B  008E               	movwf	14	;volatile
  5023                           
  5024                           ;pin_manager.c: 75: ANSELB = 0x80;
  5025  009C  3080               	movlw	128
  5026  009D  008D               	movwf	13	;volatile
  5027                           
  5028                           ;pin_manager.c: 76: ANSELA = 0x17;
  5029  009E  3017               	movlw	23
  5030  009F  008C               	movwf	12	;volatile
  5031                           
  5032                           ;pin_manager.c: 81: WPUB = 0x00;
  5033  00A0  0024               	movlb	4	; select bank4
  5034  00A1  018D               	clrf	13	;volatile
  5035                           
  5036                           ;pin_manager.c: 82: WPUA = 0x00;
  5037  00A2  018C               	clrf	12	;volatile
  5038                           
  5039                           ;pin_manager.c: 83: WPUC = 0x00;
  5040  00A3  018E               	clrf	14	;volatile
  5041                           
  5042                           ;pin_manager.c: 84: OPTION_REGbits.nWPUEN = 1;
  5043  00A4  0021               	movlb	1	; select bank1
  5044  00A5  1795               	bsf	21,7	;volatile
  5045                           
  5046                           ;pin_manager.c: 89: ODCONA = 0x00;
  5047  00A6  0025               	movlb	5	; select bank5
  5048  00A7  018C               	clrf	12	;volatile
  5049                           
  5050                           ;pin_manager.c: 90: ODCONB = 0x00;
  5051  00A8  018D               	clrf	13	;volatile
  5052                           
  5053                           ;pin_manager.c: 91: ODCONC = 0x00;
  5054  00A9  018E               	clrf	14	;volatile
  5055                           
  5056                           ;pin_manager.c: 96: SLRCONA = 0x37;
  5057  00AA  3037               	movlw	55
  5058  00AB  0026               	movlb	6	; select bank6
  5059  00AC  008C               	movwf	12	;volatile
  5060                           
  5061                           ;pin_manager.c: 97: SLRCONB = 0xF0;
  5062  00AD  30F0               	movlw	240
  5063  00AE  008D               	movwf	13	;volatile
  5064                           
  5065                           ;pin_manager.c: 98: SLRCONC = 0xFF;
  5066  00AF  30FF               	movlw	255
  5067  00B0  008E               	movwf	14	;volatile
  5068                           
  5069                           ;pin_manager.c: 103: INLVLA = 0x3F;
  5070  00B1  303F               	movlw	63
  5071  00B2  0027               	movlb	7	; select bank7
  5072  00B3  008C               	movwf	12	;volatile
  5073                           
  5074                           ;pin_manager.c: 104: INLVLB = 0xF0;
  5075  00B4  30F0               	movlw	240
  5076  00B5  008D               	movwf	13	;volatile
  5077                           
  5078                           ;pin_manager.c: 105: INLVLC = 0xFF;
  5079  00B6  30FF               	movlw	255
  5080  00B7  008E               	movwf	14	;volatile
  5081                           
  5082                           ;pin_manager.c: 114: RXPPS = 0x0D;
  5083  00B8  300D               	movlw	13
  5084  00B9  003C               	movlb	28	; select bank28
  5085  00BA  00A4               	movwf	36	;volatile
  5086                           
  5087                           ;pin_manager.c: 115: SSPDATPPS = 0x0C;
  5088  00BB  300C               	movlw	12
  5089  00BC  00A1               	movwf	33	;volatile
  5090                           
  5091                           ;pin_manager.c: 116: RB6PPS = 0x10;
  5092  00BD  3010               	movlw	16
  5093  00BE  003D               	movlb	29	; select bank29
  5094  00BF  009E               	movwf	30	;volatile
  5095                           
  5096                           ;pin_manager.c: 117: RB7PPS = 0x12;
  5097  00C0  3012               	movlw	18
  5098  00C1  009F               	movwf	31	;volatile
  5099                           
  5100                           ;pin_manager.c: 118: RB4PPS = 0x11;
  5101  00C2  3011               	movlw	17
  5102  00C3  009C               	movwf	28	;volatile
  5103                           
  5104                           ;pin_manager.c: 119: RC5PPS = 0x0E;
  5105  00C4  300E               	movlw	14
  5106  00C5  00A5               	movwf	37	;volatile
  5107                           
  5108                           ;pin_manager.c: 120: SSPCLKPPS = 0x0E;
  5109  00C6  300E               	movlw	14
  5110  00C7  003C               	movlb	28	; select bank28
  5111  00C8  00A0               	movwf	32	;volatile
  5112  00C9  0008               	return
  5113  00CA                     __end_of_PIN_MANAGER_Initialize:	
  5114                           
  5115                           	psect	text6
  5116  02A5                     __ptext6:	
  5117 ;; *************** function _OSCILLATOR_Initialize *****************
  5118 ;; Defined at:
  5119 ;;		line 61 in file "mcc_generated_files/mcc.c"
  5120 ;; Parameters:    Size  Location     Type
  5121 ;;		None
  5122 ;; Auto vars:     Size  Location     Type
  5123 ;;		None
  5124 ;; Return value:  Size  Location     Type
  5125 ;;                  1    wreg      void 
  5126 ;; Registers used:
  5127 ;;		wreg, status,2
  5128 ;; Tracked objects:
  5129 ;;		On entry : 0/0
  5130 ;;		On exit  : 0/0
  5131 ;;		Unchanged: 0/0
  5132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5137 ;;Total ram usage:        0 bytes
  5138 ;; Hardware stack levels used:    1
  5139 ;; Hardware stack levels required when called:    7
  5140 ;; This function calls:
  5141 ;;		Nothing
  5142 ;; This function is called by:
  5143 ;;		_SYSTEM_Initialize
  5144 ;; This function uses a non-reentrant model
  5145 ;;
  5146                           
  5147                           
  5148                           ;psect for function _OSCILLATOR_Initialize
  5149  02A5                     _OSCILLATOR_Initialize:	
  5150                           
  5151                           ;mcc.c: 64: OSCCON = 0x78;
  5152                           
  5153                           ;incstack = 0
  5154                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5155  02A5  3078               	movlw	120
  5156  02A6  0021               	movlb	1	; select bank1
  5157  02A7  0099               	movwf	25	;volatile
  5158                           
  5159                           ;mcc.c: 66: OSCTUNE = 0x00;
  5160  02A8  0198               	clrf	24	;volatile
  5161                           
  5162                           ;mcc.c: 68: BORCON = 0x00;
  5163  02A9  0022               	movlb	2	; select bank2
  5164  02AA  0196               	clrf	22	;volatile
  5165  02AB                     l512:	
  5166                           ;mcc.c: 71: {
  5167                           
  5168                           ;mcc.c: 70: while(PLLR == 0)
  5169                           
  5170  02AB  0021               	movlb	1	; select bank1
  5171  02AC  1B1A               	btfsc	26,6	;volatile
  5172  02AD  0008               	return
  5173  02AE  2AAB               	goto	l512
  5174  02AF                     __end_of_OSCILLATOR_Initialize:	
  5175                           
  5176                           	psect	text7
  5177  02AF                     __ptext7:	
  5178 ;; *************** function _I2C_Initialize *****************
  5179 ;; Defined at:
  5180 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  5181 ;; Parameters:    Size  Location     Type
  5182 ;;		None
  5183 ;; Auto vars:     Size  Location     Type
  5184 ;;		None
  5185 ;; Return value:  Size  Location     Type
  5186 ;;                  1    wreg      void 
  5187 ;; Registers used:
  5188 ;;		wreg, status,2
  5189 ;; Tracked objects:
  5190 ;;		On entry : 0/0
  5191 ;;		On exit  : 0/0
  5192 ;;		Unchanged: 0/0
  5193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5198 ;;Total ram usage:        0 bytes
  5199 ;; Hardware stack levels used:    1
  5200 ;; Hardware stack levels required when called:    7
  5201 ;; This function calls:
  5202 ;;		Nothing
  5203 ;; This function is called by:
  5204 ;;		_SYSTEM_Initialize
  5205 ;; This function uses a non-reentrant model
  5206 ;;
  5207                           
  5208                           
  5209                           ;psect for function _I2C_Initialize
  5210  02AF                     _I2C_Initialize:	
  5211                           
  5212                           ;i2c_master.c: 169: SSP1STAT = 0x00;
  5213                           
  5214                           ;incstack = 0
  5215                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  5216  02AF  0024               	movlb	4	; select bank4
  5217  02B0  0194               	clrf	20	;volatile
  5218                           
  5219                           ;i2c_master.c: 170: SSP1CON1 = 0x08;
  5220  02B1  3008               	movlw	8
  5221  02B2  0095               	movwf	21	;volatile
  5222                           
  5223                           ;i2c_master.c: 171: SSP1CON2 = 0x00;
  5224  02B3  0196               	clrf	22	;volatile
  5225                           
  5226                           ;i2c_master.c: 172: SSP1ADD = 0x4F;
  5227  02B4  304F               	movlw	79
  5228  02B5  0092               	movwf	18	;volatile
  5229                           
  5230                           ;i2c_master.c: 173: SSP1CON1bits.SSPEN = 0;
  5231  02B6  1295               	bcf	21,5	;volatile
  5232  02B7  0008               	return
  5233  02B8                     __end_of_I2C_Initialize:	
  5234                           
  5235                           	psect	text8
  5236  012B                     __ptext8:	
  5237 ;; *************** function _EUSART_Initialize *****************
  5238 ;; Defined at:
  5239 ;;		line 66 in file "mcc_generated_files/eusart.c"
  5240 ;; Parameters:    Size  Location     Type
  5241 ;;		None
  5242 ;; Auto vars:     Size  Location     Type
  5243 ;;		None
  5244 ;; Return value:  Size  Location     Type
  5245 ;;                  1    wreg      void 
  5246 ;; Registers used:
  5247 ;;		wreg, status,2, status,0, pclath, cstack
  5248 ;; Tracked objects:
  5249 ;;		On entry : 0/0
  5250 ;;		On exit  : 0/0
  5251 ;;		Unchanged: 0/0
  5252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5257 ;;Total ram usage:        0 bytes
  5258 ;; Hardware stack levels used:    1
  5259 ;; Hardware stack levels required when called:    8
  5260 ;; This function calls:
  5261 ;;		_EUSART_SetErrorHandler
  5262 ;;		_EUSART_SetFramingErrorHandler
  5263 ;;		_EUSART_SetOverrunErrorHandler
  5264 ;; This function is called by:
  5265 ;;		_SYSTEM_Initialize
  5266 ;; This function uses a non-reentrant model
  5267 ;;
  5268                           
  5269                           
  5270                           ;psect for function _EUSART_Initialize
  5271  012B                     _EUSART_Initialize:	
  5272                           
  5273                           ;eusart.c: 71: BAUD1CON = 0x08;
  5274                           
  5275                           ;incstack = 0
  5276                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5277  012B  3008               	movlw	8
  5278  012C  0023               	movlb	3	; select bank3
  5279  012D  009F               	movwf	31	;volatile
  5280                           
  5281                           ;eusart.c: 74: RC1STA = 0x90;
  5282  012E  3090               	movlw	144
  5283  012F  009D               	movwf	29	;volatile
  5284                           
  5285                           ;eusart.c: 77: TX1STA = 0x24;
  5286  0130  3024               	movlw	36
  5287  0131  009E               	movwf	30	;volatile
  5288                           
  5289                           ;eusart.c: 80: SPBRGL = 0x40;
  5290  0132  3040               	movlw	64
  5291  0133  009B               	movwf	27	;volatile
  5292                           
  5293                           ;eusart.c: 83: SPBRGH = 0x03;
  5294  0134  3003               	movlw	3
  5295  0135  009C               	movwf	28	;volatile
  5296                           
  5297                           ;eusart.c: 86: EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
  5298  0136  3000               	movlw	0
  5299  0137  0020               	movlb	0	; select bank0
  5300  0138  00C6               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  5301  0139  3000               	movlw	0
  5302  013A  00C7               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  5303  013B  3182  22E2  3181   	fcall	_EUSART_SetFramingErrorHandler
  5304                           
  5305                           ;eusart.c: 87: EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
  5306  013E  3000               	movlw	0
  5307  013F  0020               	movlb	0	; select bank0
  5308  0140  00C6               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  5309  0141  3000               	movlw	0
  5310  0142  00C7               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  5311  0143  3182  22DC  3181   	fcall	_EUSART_SetOverrunErrorHandler
  5312                           
  5313                           ;eusart.c: 88: EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
  5314  0146  3000               	movlw	0
  5315  0147  0020               	movlb	0	; select bank0
  5316  0148  00C6               	movwf	EUSART_SetErrorHandler@interruptHandler
  5317  0149  3000               	movlw	0
  5318  014A  00C7               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  5319  014B  3182  22E8         	fcall	_EUSART_SetErrorHandler
  5320                           
  5321                           ;eusart.c: 90: eusartRxLastError.status = 0;
  5322  014D  0020               	movlb	0	; select bank0
  5323  014E  01C5               	clrf	_eusartRxLastError	;volatile
  5324  014F  0008               	return
  5325  0150                     __end_of_EUSART_Initialize:	
  5326                           
  5327                           	psect	text9
  5328  02DC                     __ptext9:	
  5329 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  5330 ;; Defined at:
  5331 ;;		line 161 in file "mcc_generated_files/eusart.c"
  5332 ;; Parameters:    Size  Location     Type
  5333 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  5334 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  5335 ;; Auto vars:     Size  Location     Type
  5336 ;;		None
  5337 ;; Return value:  Size  Location     Type
  5338 ;;                  1    wreg      void 
  5339 ;; Registers used:
  5340 ;;		wreg
  5341 ;; Tracked objects:
  5342 ;;		On entry : 0/0
  5343 ;;		On exit  : 0/0
  5344 ;;		Unchanged: 0/0
  5345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5346 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5349 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5350 ;;Total ram usage:        2 bytes
  5351 ;; Hardware stack levels used:    1
  5352 ;; Hardware stack levels required when called:    7
  5353 ;; This function calls:
  5354 ;;		Nothing
  5355 ;; This function is called by:
  5356 ;;		_EUSART_Initialize
  5357 ;; This function uses a non-reentrant model
  5358 ;;
  5359                           
  5360                           
  5361                           ;psect for function _EUSART_SetOverrunErrorHandler
  5362  02DC                     _EUSART_SetOverrunErrorHandler:	
  5363                           
  5364                           ;eusart.c: 162: EUSART_OverrunErrorHandler = interruptHandler;
  5365                           
  5366                           ;incstack = 0
  5367                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  5368  02DC  0020               	movlb	0	; select bank0
  5369  02DD  0847               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  5370  02DE  00C2               	movwf	_EUSART_OverrunErrorHandler+1
  5371  02DF  0846               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  5372  02E0  00C1               	movwf	_EUSART_OverrunErrorHandler
  5373  02E1  0008               	return
  5374  02E2                     __end_of_EUSART_SetOverrunErrorHandler:	
  5375                           
  5376                           	psect	text10
  5377  02E2                     __ptext10:	
  5378 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  5379 ;; Defined at:
  5380 ;;		line 157 in file "mcc_generated_files/eusart.c"
  5381 ;; Parameters:    Size  Location     Type
  5382 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  5383 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  5384 ;; Auto vars:     Size  Location     Type
  5385 ;;		None
  5386 ;; Return value:  Size  Location     Type
  5387 ;;                  1    wreg      void 
  5388 ;; Registers used:
  5389 ;;		wreg
  5390 ;; Tracked objects:
  5391 ;;		On entry : 0/0
  5392 ;;		On exit  : 0/0
  5393 ;;		Unchanged: 0/0
  5394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5395 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5398 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5399 ;;Total ram usage:        2 bytes
  5400 ;; Hardware stack levels used:    1
  5401 ;; Hardware stack levels required when called:    7
  5402 ;; This function calls:
  5403 ;;		Nothing
  5404 ;; This function is called by:
  5405 ;;		_EUSART_Initialize
  5406 ;; This function uses a non-reentrant model
  5407 ;;
  5408                           
  5409                           
  5410                           ;psect for function _EUSART_SetFramingErrorHandler
  5411  02E2                     _EUSART_SetFramingErrorHandler:	
  5412                           
  5413                           ;eusart.c: 158: EUSART_FramingErrorHandler = interruptHandler;
  5414                           
  5415                           ;incstack = 0
  5416                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  5417  02E2  0020               	movlb	0	; select bank0
  5418  02E3  0847               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  5419  02E4  00C4               	movwf	_EUSART_FramingErrorHandler+1
  5420  02E5  0846               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  5421  02E6  00C3               	movwf	_EUSART_FramingErrorHandler
  5422  02E7  0008               	return
  5423  02E8                     __end_of_EUSART_SetFramingErrorHandler:	
  5424                           
  5425                           	psect	text11
  5426  02E8                     __ptext11:	
  5427 ;; *************** function _EUSART_SetErrorHandler *****************
  5428 ;; Defined at:
  5429 ;;		line 165 in file "mcc_generated_files/eusart.c"
  5430 ;; Parameters:    Size  Location     Type
  5431 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  5432 ;;		 -> EUSART_DefaultErrorHandler(1), 
  5433 ;; Auto vars:     Size  Location     Type
  5434 ;;		None
  5435 ;; Return value:  Size  Location     Type
  5436 ;;                  1    wreg      void 
  5437 ;; Registers used:
  5438 ;;		wreg
  5439 ;; Tracked objects:
  5440 ;;		On entry : 0/0
  5441 ;;		On exit  : 0/0
  5442 ;;		Unchanged: 0/0
  5443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5444 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5447 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5448 ;;Total ram usage:        2 bytes
  5449 ;; Hardware stack levels used:    1
  5450 ;; Hardware stack levels required when called:    7
  5451 ;; This function calls:
  5452 ;;		Nothing
  5453 ;; This function is called by:
  5454 ;;		_EUSART_Initialize
  5455 ;; This function uses a non-reentrant model
  5456 ;;
  5457                           
  5458                           
  5459                           ;psect for function _EUSART_SetErrorHandler
  5460  02E8                     _EUSART_SetErrorHandler:	
  5461                           
  5462                           ;eusart.c: 166: EUSART_ErrorHandler = interruptHandler;
  5463                           
  5464                           ;incstack = 0
  5465                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  5466  02E8  0020               	movlb	0	; select bank0
  5467  02E9  0847               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  5468  02EA  00C0               	movwf	_EUSART_ErrorHandler+1
  5469  02EB  0846               	movf	EUSART_SetErrorHandler@interruptHandler,w
  5470  02EC  00BF               	movwf	_EUSART_ErrorHandler
  5471  02ED  0008               	return
  5472  02EE                     __end_of_EUSART_SetErrorHandler:	
  5473                           
  5474                           	psect	text12
  5475  02B8                     __ptext12:	
  5476 ;; *************** function _ADC_Initialize *****************
  5477 ;; Defined at:
  5478 ;;		line 67 in file "mcc_generated_files/adc.c"
  5479 ;; Parameters:    Size  Location     Type
  5480 ;;		None
  5481 ;; Auto vars:     Size  Location     Type
  5482 ;;		None
  5483 ;; Return value:  Size  Location     Type
  5484 ;;                  1    wreg      void 
  5485 ;; Registers used:
  5486 ;;		wreg, status,2
  5487 ;; Tracked objects:
  5488 ;;		On entry : 0/0
  5489 ;;		On exit  : 0/0
  5490 ;;		Unchanged: 0/0
  5491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5496 ;;Total ram usage:        0 bytes
  5497 ;; Hardware stack levels used:    1
  5498 ;; Hardware stack levels required when called:    7
  5499 ;; This function calls:
  5500 ;;		Nothing
  5501 ;; This function is called by:
  5502 ;;		_SYSTEM_Initialize
  5503 ;; This function uses a non-reentrant model
  5504 ;;
  5505                           
  5506                           
  5507                           ;psect for function _ADC_Initialize
  5508  02B8                     _ADC_Initialize:	
  5509                           
  5510                           ;adc.c: 72: ADCON0 = 0x01;
  5511                           
  5512                           ;incstack = 0
  5513                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  5514  02B8  3001               	movlw	1
  5515  02B9  0021               	movlb	1	; select bank1
  5516  02BA  009D               	movwf	29	;volatile
  5517                           
  5518                           ;adc.c: 75: ADCON1 = 0x60;
  5519  02BB  3060               	movlw	96
  5520  02BC  009E               	movwf	30	;volatile
  5521                           
  5522                           ;adc.c: 78: ADCON2 = 0x00;
  5523  02BD  019F               	clrf	31	;volatile
  5524                           
  5525                           ;adc.c: 81: ADRESL = 0x00;
  5526  02BE  019B               	clrf	27	;volatile
  5527                           
  5528                           ;adc.c: 84: ADRESH = 0x00;
  5529  02BF  019C               	clrf	28	;volatile
  5530  02C0  0008               	return
  5531  02C1                     __end_of_ADC_Initialize:	
  5532                           
  5533                           	psect	intentry
  5534  0004                     __pintentry:	
  5535 ;; *************** function _INTERRUPT_InterruptManager *****************
  5536 ;; Defined at:
  5537 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5538 ;; Parameters:    Size  Location     Type
  5539 ;;		None
  5540 ;; Auto vars:     Size  Location     Type
  5541 ;;		None
  5542 ;; Return value:  Size  Location     Type
  5543 ;;                  1    wreg      void 
  5544 ;; Registers used:
  5545 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5546 ;; Tracked objects:
  5547 ;;		On entry : 0/0
  5548 ;;		On exit  : 0/0
  5549 ;;		Unchanged: 0/0
  5550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5553 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5554 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5555 ;;Total ram usage:        1 bytes
  5556 ;; Hardware stack levels used:    1
  5557 ;; Hardware stack levels required when called:    6
  5558 ;; This function calls:
  5559 ;;		Absolute function
  5560 ;;		_I2C_MasterIsr
  5561 ;;		_TMR2_ISR
  5562 ;; This function is called by:
  5563 ;;		Interrupt level 1
  5564 ;; This function uses a non-reentrant model
  5565 ;;
  5566                           
  5567  0004                     _INTERRUPT_InterruptManager:	
  5568                           
  5569                           ;incstack = 0
  5570  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5571                           
  5572                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5573  0005  3180               	pagesel	$
  5574  0006  0020               	movlb	0	; select bank0
  5575  0007  087F               	movf	127,w
  5576  0008  00F7               	movwf	??_INTERRUPT_InterruptManager
  5577                           
  5578                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
  5579  0009  1F0B               	btfss	11,6	;volatile
  5580  000A  282B               	goto	i1l378
  5581                           
  5582                           ;interrupt_manager.c: 56: {
  5583                           ;interrupt_manager.c: 57: if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
  5584  000B  0021               	movlb	1	; select bank1
  5585  000C  1D91               	btfss	17,3	;volatile
  5586  000D  2817               	goto	i1l371
  5587  000E  0020               	movlb	0	; select bank0
  5588  000F  1D91               	btfss	17,3	;volatile
  5589  0010  2817               	goto	i1l371
  5590                           
  5591                           ;interrupt_manager.c: 58: {
  5592                           ;interrupt_manager.c: 59: MSSP_InterruptHandler();
  5593  0011  087D               	movf	_MSSP_InterruptHandler+1,w
  5594  0012  008A               	movwf	10
  5595  0013  087C               	movf	_MSSP_InterruptHandler,w
  5596  0014  000A               	callw
  5597  0015  3180               	pagesel	$
  5598                           
  5599                           ;interrupt_manager.c: 60: }
  5600  0016  282B               	goto	i1l378
  5601  0017                     i1l371:	
  5602                           
  5603                           ;interrupt_manager.c: 61: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
  5604  0017  0021               	movlb	1	; select bank1
  5605  0018  1D90               	btfss	16,3	;volatile
  5606  0019  2823               	goto	i1l373
  5607  001A  0020               	movlb	0	; select bank0
  5608  001B  1D90               	btfss	16,3	;volatile
  5609  001C  2823               	goto	i1l373
  5610                           
  5611                           ;interrupt_manager.c: 62: {
  5612                           ;interrupt_manager.c: 63: MSSP_InterruptHandler();
  5613  001D  087D               	movf	_MSSP_InterruptHandler+1,w
  5614  001E  008A               	movwf	10
  5615  001F  087C               	movf	_MSSP_InterruptHandler,w
  5616  0020  000A               	callw
  5617  0021  3180               	pagesel	$
  5618                           
  5619                           ;interrupt_manager.c: 64: }
  5620  0022  282B               	goto	i1l378
  5621  0023                     i1l373:	
  5622                           
  5623                           ;interrupt_manager.c: 65: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  5624  0023  0021               	movlb	1	; select bank1
  5625  0024  1C90               	btfss	16,1	;volatile
  5626  0025  282B               	goto	i1l378
  5627  0026  0020               	movlb	0	; select bank0
  5628  0027  1C90               	btfss	16,1	;volatile
  5629  0028  282B               	goto	i1l378
  5630                           
  5631                           ;interrupt_manager.c: 66: {
  5632                           ;interrupt_manager.c: 67: TMR2_ISR();
  5633  0029  3182  221E         	fcall	_TMR2_ISR
  5634  002B                     i1l378:	
  5635                           ;interrupt_manager.c: 74: else
  5636                           ;interrupt_manager.c: 75: {
  5637                           
  5638                           ;interrupt_manager.c: 72: }
  5639                           ;interrupt_manager.c: 73: }
  5640                           
  5641                           ;interrupt_manager.c: 69: else
  5642                           ;interrupt_manager.c: 70: {
  5643                           
  5644                           ;interrupt_manager.c: 68: }
  5645                           
  5646  002B  0877               	movf	??_INTERRUPT_InterruptManager,w
  5647  002C  0020               	movlb	0	; select bank0
  5648  002D  00FF               	movwf	127
  5649  002E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5650  002F  0009               	retfie
  5651  0030                     __end_of_INTERRUPT_InterruptManager:	
  5652                           
  5653                           	psect	text14
  5654  021E                     __ptext14:	
  5655 ;; *************** function _TMR2_ISR *****************
  5656 ;; Defined at:
  5657 ;;		line 165 in file "mcc_generated_files/tmr2.c"
  5658 ;; Parameters:    Size  Location     Type
  5659 ;;		None
  5660 ;; Auto vars:     Size  Location     Type
  5661 ;;		None
  5662 ;; Return value:  Size  Location     Type
  5663 ;;                  1    wreg      void 
  5664 ;; Registers used:
  5665 ;;		wreg, status,2, status,0, pclath, cstack
  5666 ;; Tracked objects:
  5667 ;;		On entry : 0/0
  5668 ;;		On exit  : 0/0
  5669 ;;		Unchanged: 0/0
  5670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5675 ;;Total ram usage:        0 bytes
  5676 ;; Hardware stack levels used:    1
  5677 ;; Hardware stack levels required when called:    2
  5678 ;; This function calls:
  5679 ;;		_TMR2_CallBack
  5680 ;; This function is called by:
  5681 ;;		_INTERRUPT_InterruptManager
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           
  5685                           
  5686                           ;psect for function _TMR2_ISR
  5687  021E                     _TMR2_ISR:	
  5688                           
  5689                           ;tmr2.c: 167: static volatile unsigned int CountCallBack = 0;
  5690                           ;tmr2.c: 170: PIR1bits.TMR2IF = 0;
  5691                           
  5692                           ;incstack = 0
  5693                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  5694  021E  0020               	movlb	0	; select bank0
  5695  021F  1090               	bcf	16,1	;volatile
  5696                           
  5697                           ;tmr2.c: 173: if (++CountCallBack >= 5)
  5698  0220  3001               	movlw	1
  5699  0221  07FA               	addwf	TMR2_ISR@CountCallBack,f	;volatile
  5700  0222  3000               	movlw	0
  5701  0223  3DFB               	addwfc	TMR2_ISR@CountCallBack+1,f	;volatile
  5702  0224  3000               	movlw	0
  5703  0225  027B               	subwf	TMR2_ISR@CountCallBack+1,w	;volatile
  5704  0226  3005               	movlw	5
  5705  0227  1903               	skipnz
  5706  0228  027A               	subwf	TMR2_ISR@CountCallBack,w	;volatile
  5707  0229  1C03               	skipc
  5708  022A  0008               	return
  5709                           
  5710                           ;tmr2.c: 174: {
  5711                           ;tmr2.c: 176: TMR2_CallBack();
  5712  022B  3182  229A         	fcall	_TMR2_CallBack
  5713                           
  5714                           ;tmr2.c: 179: CountCallBack = 0;
  5715  022D  01FA               	clrf	TMR2_ISR@CountCallBack	;volatile
  5716  022E  01FB               	clrf	TMR2_ISR@CountCallBack+1	;volatile
  5717  022F  0008               	return
  5718  0230                     __end_of_TMR2_ISR:	
  5719                           
  5720                           	psect	text15
  5721  029A                     __ptext15:	
  5722 ;; *************** function _TMR2_CallBack *****************
  5723 ;; Defined at:
  5724 ;;		line 183 in file "mcc_generated_files/tmr2.c"
  5725 ;; Parameters:    Size  Location     Type
  5726 ;;		None
  5727 ;; Auto vars:     Size  Location     Type
  5728 ;;		None
  5729 ;; Return value:  Size  Location     Type
  5730 ;;                  1    wreg      void 
  5731 ;; Registers used:
  5732 ;;		wreg, status,2, status,0, pclath, cstack
  5733 ;; Tracked objects:
  5734 ;;		On entry : 0/0
  5735 ;;		On exit  : 0/0
  5736 ;;		Unchanged: 0/0
  5737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5742 ;;Total ram usage:        0 bytes
  5743 ;; Hardware stack levels used:    1
  5744 ;; Hardware stack levels required when called:    1
  5745 ;; This function calls:
  5746 ;;		Absolute function
  5747 ;;		_TMR2_DefaultInterruptHandler
  5748 ;; This function is called by:
  5749 ;;		_TMR2_ISR
  5750 ;; This function uses a non-reentrant model
  5751 ;;
  5752                           
  5753                           
  5754                           ;psect for function _TMR2_CallBack
  5755  029A                     _TMR2_CallBack:	
  5756                           
  5757                           ;tmr2.c: 187: if(TMR2_InterruptHandler)
  5758                           
  5759                           ;incstack = 0
  5760                           ; Regs used in _TMR2_CallBack: [wreg+status,2+status,0+pclath+cstack]
  5761  029A  0020               	movlb	0	; select bank0
  5762  029B  083D               	movf	_TMR2_InterruptHandler,w
  5763  029C  043E               	iorwf	_TMR2_InterruptHandler+1,w
  5764  029D  1903               	btfsc	3,2
  5765  029E  0008               	return
  5766                           
  5767                           ;tmr2.c: 188: {
  5768                           ;tmr2.c: 189: TMR2_InterruptHandler();
  5769  029F  083E               	movf	_TMR2_InterruptHandler+1,w
  5770  02A0  008A               	movwf	10
  5771  02A1  083D               	movf	_TMR2_InterruptHandler,w
  5772  02A2  000A               	callw
  5773  02A3  3182               	pagesel	$
  5774  02A4  0008               	return
  5775  02A5                     __end_of_TMR2_CallBack:	
  5776                           
  5777                           	psect	text16
  5778  034A                     __ptext16:	
  5779 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  5780 ;; Defined at:
  5781 ;;		line 197 in file "mcc_generated_files/tmr2.c"
  5782 ;; Parameters:    Size  Location     Type
  5783 ;;		None
  5784 ;; Auto vars:     Size  Location     Type
  5785 ;;		None
  5786 ;; Return value:  Size  Location     Type
  5787 ;;                  1    wreg      void 
  5788 ;; Registers used:
  5789 ;;		None
  5790 ;; Tracked objects:
  5791 ;;		On entry : 0/0
  5792 ;;		On exit  : 0/0
  5793 ;;		Unchanged: 0/0
  5794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5799 ;;Total ram usage:        0 bytes
  5800 ;; Hardware stack levels used:    1
  5801 ;; This function calls:
  5802 ;;		Nothing
  5803 ;; This function is called by:
  5804 ;;		_TMR2_Initialize
  5805 ;;		_TMR2_CallBack
  5806 ;; This function uses a non-reentrant model
  5807 ;;
  5808                           
  5809                           
  5810                           ;psect for function _TMR2_DefaultInterruptHandler
  5811  034A                     _TMR2_DefaultInterruptHandler:	
  5812                           
  5813                           ;incstack = 0
  5814                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  5815  034A  0008               	return
  5816  034B                     __end_of_TMR2_DefaultInterruptHandler:	
  5817                           
  5818                           	psect	text17
  5819  0331                     __ptext17:	
  5820 ;; *************** function _I2C_MasterIsr *****************
  5821 ;; Defined at:
  5822 ;;		line 318 in file "mcc_generated_files/i2c_master.c"
  5823 ;; Parameters:    Size  Location     Type
  5824 ;;		None
  5825 ;; Auto vars:     Size  Location     Type
  5826 ;;		None
  5827 ;; Return value:  Size  Location     Type
  5828 ;;                  1    wreg      void 
  5829 ;; Registers used:
  5830 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5831 ;; Tracked objects:
  5832 ;;		On entry : 0/0
  5833 ;;		On exit  : 0/0
  5834 ;;		Unchanged: 0/0
  5835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5840 ;;Total ram usage:        0 bytes
  5841 ;; Hardware stack levels used:    1
  5842 ;; Hardware stack levels required when called:    5
  5843 ;; This function calls:
  5844 ;;		_I2C_MasterFsm
  5845 ;; This function is called by:
  5846 ;;		_I2C_Open
  5847 ;;		_INTERRUPT_InterruptManager
  5848 ;; This function uses a non-reentrant model
  5849 ;;
  5850                           
  5851                           
  5852                           ;psect for function _I2C_MasterIsr
  5853  0331                     _I2C_MasterIsr:	
  5854                           
  5855                           ;i2c_master.c: 320: I2C_MasterFsm();
  5856                           
  5857                           ;incstack = 0
  5858                           ; Regs used in _I2C_MasterIsr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5859  0331  3181  2104         	fcall	_I2C_MasterFsm
  5860  0333  0008               	return
  5861  0334                     __end_of_I2C_MasterIsr:	
  5862                           
  5863                           	psect	text18
  5864  0104                     __ptext18:	
  5865 ;; *************** function _I2C_MasterFsm *****************
  5866 ;; Defined at:
  5867 ;;		line 323 in file "mcc_generated_files/i2c_master.c"
  5868 ;; Parameters:    Size  Location     Type
  5869 ;;		None
  5870 ;; Auto vars:     Size  Location     Type
  5871 ;;		None
  5872 ;; Return value:  Size  Location     Type
  5873 ;;                  1    wreg      void 
  5874 ;; Registers used:
  5875 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5876 ;; Tracked objects:
  5877 ;;		On entry : 0/0
  5878 ;;		On exit  : 0/0
  5879 ;;		Unchanged: 0/0
  5880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5883 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5884 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5885 ;;Total ram usage:        3 bytes
  5886 ;; Hardware stack levels used:    1
  5887 ;; Hardware stack levels required when called:    4
  5888 ;; This function calls:
  5889 ;;		_I2C_DO_ADDRESS_NACK
  5890 ;;		_I2C_DO_IDLE
  5891 ;;		_I2C_DO_RCEN
  5892 ;;		_I2C_DO_RESET
  5893 ;;		_I2C_DO_RX
  5894 ;;		_I2C_DO_RX_ACK
  5895 ;;		_I2C_DO_RX_NACK_RESTART
  5896 ;;		_I2C_DO_RX_NACK_STOP
  5897 ;;		_I2C_DO_SEND_ADR_READ
  5898 ;;		_I2C_DO_SEND_ADR_WRITE
  5899 ;;		_I2C_DO_SEND_RESTART
  5900 ;;		_I2C_DO_SEND_RESTART_READ
  5901 ;;		_I2C_DO_SEND_RESTART_WRITE
  5902 ;;		_I2C_DO_SEND_STOP
  5903 ;;		_I2C_DO_TX
  5904 ;;		_I2C_DO_TX_EMPTY
  5905 ;;		_I2C_MasterClearIrq
  5906 ;;		_I2C_MasterIsNack
  5907 ;; This function is called by:
  5908 ;;		_I2C_MasterIsr
  5909 ;; This function uses a non-reentrant model
  5910 ;;
  5911                           
  5912                           
  5913                           ;psect for function _I2C_MasterFsm
  5914  0104                     _I2C_MasterFsm:	
  5915                           
  5916                           ;i2c_master.c: 325: I2C_MasterClearIrq();
  5917                           
  5918                           ;incstack = 0
  5919                           ; Regs used in _I2C_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5920  0104  3183  2334  3181   	fcall	_I2C_MasterClearIrq
  5921                           
  5922                           ;i2c_master.c: 327: if(I2C_Status.addressNackCheck && I2C_MasterIsNack())
  5923  0107  0020               	movlb	0	; select bank0
  5924  0108  1C3C               	btfss	_I2C_Status+28,0
  5925  0109  2915               	goto	i1l2588
  5926  010A  3182  22F4  3181   	fcall	_I2C_MasterIsNack
  5927  010D  3A00               	xorlw	0
  5928  010E  1903               	skipnz
  5929  010F  2915               	goto	i1l2588
  5930                           
  5931                           ;i2c_master.c: 328: {
  5932                           ;i2c_master.c: 329: I2C_Status.state = I2C_ADDRESS_NACK;
  5933  0110  300F               	movlw	15
  5934  0111  00F4               	movwf	??_I2C_MasterFsm
  5935  0112  0874               	movf	??_I2C_MasterFsm,w
  5936  0113  0020               	movlb	0	; select bank0
  5937  0114  00BA               	movwf	_I2C_Status+26
  5938  0115                     i1l2588:	
  5939                           
  5940                           ;i2c_master.c: 330: }
  5941                           ;i2c_master.c: 331: I2C_Status.state = fsmStateTable[I2C_Status.state]();
  5942  0115  0020               	movlb	0	; select bank0
  5943  0116  083A               	movf	_I2C_Status+26,w
  5944  0117  00F4               	movwf	??_I2C_MasterFsm
  5945  0118  01F5               	clrf	??_I2C_MasterFsm+1
  5946  0119  35F4               	lslf	??_I2C_MasterFsm,f
  5947  011A  0DF5               	rlf	??_I2C_MasterFsm+1,f
  5948  011B  30BC               	movlw	low (_fsmStateTable| (0+32768))
  5949  011C  0774               	addwf	??_I2C_MasterFsm,w
  5950  011D  0084               	movwf	4
  5951  011E  3081               	movlw	high (_fsmStateTable| (0+32768))
  5952  011F  3D75               	addwfc	??_I2C_MasterFsm+1,w
  5953  0120  0085               	movwf	5
  5954  0121  3F01               	moviw [1]fsr0
  5955  0122  008A               	movwf	10
  5956  0123  3F00               	moviw [0]fsr0
  5957  0124  000A               	callw
  5958  0125  3181               	pagesel	$
  5959  0126  00F6               	movwf	??_I2C_MasterFsm+2
  5960  0127  0876               	movf	??_I2C_MasterFsm+2,w
  5961  0128  0020               	movlb	0	; select bank0
  5962  0129  00BA               	movwf	_I2C_Status+26
  5963  012A  0008               	return
  5964  012B                     __end_of_I2C_MasterFsm:	
  5965                           
  5966                           	psect	text19
  5967  0334                     __ptext19:	
  5968 ;; *************** function _I2C_MasterClearIrq *****************
  5969 ;; Defined at:
  5970 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
  5971 ;; Parameters:    Size  Location     Type
  5972 ;;		None
  5973 ;; Auto vars:     Size  Location     Type
  5974 ;;		None
  5975 ;; Return value:  Size  Location     Type
  5976 ;;                  1    wreg      void 
  5977 ;; Registers used:
  5978 ;;		None
  5979 ;; Tracked objects:
  5980 ;;		On entry : 0/0
  5981 ;;		On exit  : 0/0
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5988 ;;Total ram usage:        0 bytes
  5989 ;; Hardware stack levels used:    1
  5990 ;; This function calls:
  5991 ;;		Nothing
  5992 ;; This function is called by:
  5993 ;;		_I2C_MasterFsm
  5994 ;;		_I2C_Open
  5995 ;;		_I2C_Close
  5996 ;; This function uses a non-reentrant model
  5997 ;;
  5998                           
  5999                           
  6000                           ;psect for function _I2C_MasterClearIrq
  6001  0334                     _I2C_MasterClearIrq:	
  6002                           
  6003                           ;i2c_master.c: 644: PIR1bits.SSP1IF = 0;
  6004                           
  6005                           ;incstack = 0
  6006                           ; Regs used in _I2C_MasterClearIrq: []
  6007  0334  0020               	movlb	0	; select bank0
  6008  0335  1190               	bcf	16,3	;volatile
  6009  0336  0008               	return
  6010  0337                     __end_of_I2C_MasterClearIrq:	
  6011                           
  6012                           	psect	text20
  6013  0199                     __ptext20:	
  6014 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  6015 ;; Defined at:
  6016 ;;		line 501 in file "mcc_generated_files/i2c_master.c"
  6017 ;; Parameters:    Size  Location     Type
  6018 ;;		None
  6019 ;; Auto vars:     Size  Location     Type
  6020 ;;		None
  6021 ;; Return value:  Size  Location     Type
  6022 ;;                  1    wreg      enum E12110
  6023 ;; Registers used:
  6024 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6025 ;; Tracked objects:
  6026 ;;		On entry : 0/0
  6027 ;;		On exit  : 0/0
  6028 ;;		Unchanged: 0/0
  6029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6032 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6033 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6034 ;;Total ram usage:        1 bytes
  6035 ;; Hardware stack levels used:    1
  6036 ;; Hardware stack levels required when called:    3
  6037 ;; This function calls:
  6038 ;;		Absolute function
  6039 ;;		_I2C_CallbackReturnReset
  6040 ;;		_I2C_CallbackReturnStop
  6041 ;;		_I2C_DO_SEND_RESTART
  6042 ;;		_I2C_DO_SEND_STOP
  6043 ;;		_rd1RegCompleteHandler
  6044 ;;		_rd2RegCompleteHandler
  6045 ;;		_rdBlkRegCompleteHandler
  6046 ;;		_wr1RegCompleteHandler
  6047 ;;		_wr2RegCompleteHandler
  6048 ;; This function is called by:
  6049 ;;		_I2C_MasterFsm
  6050 ;; This function uses a non-reentrant model
  6051 ;;
  6052                           
  6053                           
  6054                           ;psect for function _I2C_DO_ADDRESS_NACK
  6055  0199                     _I2C_DO_ADDRESS_NACK:	
  6056                           
  6057                           ;i2c_master.c: 503: I2C_Status.addressNackCheck = 0;
  6058                           
  6059                           ;incstack = 0
  6060                           ; Regs used in _I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6061  0199  0020               	movlb	0	; select bank0
  6062  019A  103C               	bcf	_I2C_Status+28,0
  6063                           
  6064                           ;i2c_master.c: 504: I2C_Status.error = I2C_FAIL;
  6065  019B  3002               	movlw	2
  6066  019C  00F0               	movwf	??_I2C_DO_ADDRESS_NACK
  6067  019D  0870               	movf	??_I2C_DO_ADDRESS_NACK,w
  6068  019E  00BB               	movwf	_I2C_Status+27
  6069                           
  6070                           ;i2c_master.c: 505: switch(I2C_Status.callbackTable[I2C_ADDR_NACK](I2C_Status.callbackPa
      +                          yload[I2C_ADDR_NACK]))
  6071  019F  29A6               	goto	i1l2578
  6072  01A0                     i1l2568:	
  6073                           ;i2c_master.c: 506: {
  6074                           ;i2c_master.c: 507: case I2C_RESTART_READ:
  6075                           
  6076                           
  6077                           ;i2c_master.c: 508: case I2C_RESTART_WRITE:
  6078                           ;i2c_master.c: 509: return I2C_DO_SEND_RESTART();
  6079  01A0  3183  231D         	fcall	_I2C_DO_SEND_RESTART
  6080  01A2  0008               	return
  6081  01A3                     i1l2572:	
  6082                           ;i2c_master.c: 510: default:
  6083                           
  6084                           
  6085                           ;i2c_master.c: 511: return I2C_DO_SEND_STOP();
  6086  01A3  3183  2319         	fcall	_I2C_DO_SEND_STOP
  6087                           
  6088                           ;i2c_master.c: 512: }
  6089  01A5  0008               	return
  6090  01A6                     i1l2578:	
  6091  01A6  0020               	movlb	0	; select bank0
  6092  01A7  082E               	movf	low ((_I2C_Status| 0+14)),w
  6093  01A8  00F0               	movwf	??_I2C_DO_ADDRESS_NACK
  6094  01A9  0870               	movf	??_I2C_DO_ADDRESS_NACK,w
  6095  01AA  00C7               	movwf	rdBlkRegCompleteHandler@ptr
  6096  01AB  3004               	movlw	4
  6097  01AC  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  6098  01AD  0086               	movwf	6
  6099  01AE  0187               	clrf	7
  6100  01AF  3F41               	moviw [1]fsr1
  6101  01B0  008A               	movwf	10
  6102  01B1  3F40               	moviw [0]fsr1
  6103  01B2  000A               	callw
  6104  01B3  3181               	pagesel	$
  6105                           
  6106                           ; Switch size 1, requested type "space"
  6107                           ; Number of cases is 2, Range of values is 2 to 3
  6108                           ; switch strategies available:
  6109                           ; Name         Instructions Cycles
  6110                           ; simple_byte            7     4 (average)
  6111                           ; direct_byte           13     9 (fixed)
  6112                           ; jumptable            263     9 (fixed)
  6113                           ;	Chosen strategy is simple_byte
  6114  01B4  3A02               	xorlw	2	; case 2
  6115  01B5  1903               	skipnz
  6116  01B6  29A0               	goto	i1l2568
  6117  01B7  3A01               	xorlw	1	; case 3
  6118  01B8  1903               	skipnz
  6119  01B9  29A0               	goto	i1l2568
  6120  01BA  29A3               	goto	i1l2572
  6121  01BB  0008               	return
  6122  01BC                     __end_of_I2C_DO_ADDRESS_NACK:	
  6123                           
  6124                           	psect	text21
  6125  02FA                     __ptext21:	
  6126 ;; *************** function _I2C_DO_RESET *****************
  6127 ;; Defined at:
  6128 ;;		line 495 in file "mcc_generated_files/i2c_master.c"
  6129 ;; Parameters:    Size  Location     Type
  6130 ;;		None
  6131 ;; Auto vars:     Size  Location     Type
  6132 ;;		None
  6133 ;; Return value:  Size  Location     Type
  6134 ;;                  1    wreg      enum E12110
  6135 ;; Registers used:
  6136 ;;		wreg, status,2
  6137 ;; Tracked objects:
  6138 ;;		On entry : 0/0
  6139 ;;		On exit  : 0/0
  6140 ;;		Unchanged: 0/0
  6141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6146 ;;Total ram usage:        0 bytes
  6147 ;; Hardware stack levels used:    1
  6148 ;; This function calls:
  6149 ;;		Nothing
  6150 ;; This function is called by:
  6151 ;;		_I2C_MasterFsm
  6152 ;; This function uses a non-reentrant model
  6153 ;;
  6154                           
  6155                           
  6156                           ;psect for function _I2C_DO_RESET
  6157  02FA                     _I2C_DO_RESET:	
  6158                           
  6159                           ;i2c_master.c: 497: I2C_Status.busy = 0;
  6160                           
  6161                           ;incstack = 0
  6162                           ; Regs used in _I2C_DO_RESET: [wreg+status,2]
  6163  02FA  0020               	movlb	0	; select bank0
  6164  02FB  10BC               	bcf	_I2C_Status+28,1
  6165                           
  6166                           ;i2c_master.c: 498: I2C_Status.error = I2C_NOERR;
  6167  02FC  01BB               	clrf	_I2C_Status+27
  6168                           
  6169                           ;i2c_master.c: 499: return I2C_RESET;
  6170  02FD  300E               	movlw	14
  6171  02FE  0008               	return
  6172  02FF                     __end_of_I2C_DO_RESET:	
  6173                           
  6174                           	psect	text22
  6175  030D                     __ptext22:	
  6176 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  6177 ;; Defined at:
  6178 ;;		line 489 in file "mcc_generated_files/i2c_master.c"
  6179 ;; Parameters:    Size  Location     Type
  6180 ;;		None
  6181 ;; Auto vars:     Size  Location     Type
  6182 ;;		None
  6183 ;; Return value:  Size  Location     Type
  6184 ;;                  1    wreg      enum E12110
  6185 ;; Registers used:
  6186 ;;		wreg, status,2, status,0, pclath, cstack
  6187 ;; Tracked objects:
  6188 ;;		On entry : 0/0
  6189 ;;		On exit  : 0/0
  6190 ;;		Unchanged: 0/0
  6191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6196 ;;Total ram usage:        0 bytes
  6197 ;; Hardware stack levels used:    1
  6198 ;; Hardware stack levels required when called:    1
  6199 ;; This function calls:
  6200 ;;		_I2C_MasterSendNack
  6201 ;; This function is called by:
  6202 ;;		_I2C_DO_RX
  6203 ;;		_I2C_MasterFsm
  6204 ;; This function uses a non-reentrant model
  6205 ;;
  6206                           
  6207                           
  6208                           ;psect for function _I2C_DO_RX_NACK_RESTART
  6209  030D                     _I2C_DO_RX_NACK_RESTART:	
  6210                           
  6211                           ;i2c_master.c: 491: I2C_MasterSendNack();
  6212                           
  6213                           ;incstack = 0
  6214                           ; Regs used in _I2C_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
  6215  030D  3183  232D         	fcall	_I2C_MasterSendNack
  6216                           
  6217                           ;i2c_master.c: 492: return I2C_SEND_RESTART;
  6218  030F  3009               	movlw	9
  6219  0310  0008               	return
  6220  0311                     __end_of_I2C_DO_RX_NACK_RESTART:	
  6221                           
  6222                           	psect	text23
  6223  0311                     __ptext23:	
  6224 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  6225 ;; Defined at:
  6226 ;;		line 483 in file "mcc_generated_files/i2c_master.c"
  6227 ;; Parameters:    Size  Location     Type
  6228 ;;		None
  6229 ;; Auto vars:     Size  Location     Type
  6230 ;;		None
  6231 ;; Return value:  Size  Location     Type
  6232 ;;                  1    wreg      enum E12110
  6233 ;; Registers used:
  6234 ;;		wreg, status,2, status,0, pclath, cstack
  6235 ;; Tracked objects:
  6236 ;;		On entry : 0/0
  6237 ;;		On exit  : 0/0
  6238 ;;		Unchanged: 0/0
  6239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6244 ;;Total ram usage:        0 bytes
  6245 ;; Hardware stack levels used:    1
  6246 ;; Hardware stack levels required when called:    1
  6247 ;; This function calls:
  6248 ;;		_I2C_MasterSendNack
  6249 ;; This function is called by:
  6250 ;;		_I2C_DO_RX
  6251 ;;		_I2C_MasterFsm
  6252 ;; This function uses a non-reentrant model
  6253 ;;
  6254                           
  6255                           
  6256                           ;psect for function _I2C_DO_RX_NACK_STOP
  6257  0311                     _I2C_DO_RX_NACK_STOP:	
  6258                           
  6259                           ;i2c_master.c: 485: I2C_MasterSendNack();
  6260                           
  6261                           ;incstack = 0
  6262                           ; Regs used in _I2C_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
  6263  0311  3183  232D         	fcall	_I2C_MasterSendNack
  6264                           
  6265                           ;i2c_master.c: 486: return I2C_SEND_STOP;
  6266  0313  300A               	movlw	10
  6267  0314  0008               	return
  6268  0315                     __end_of_I2C_DO_RX_NACK_STOP:	
  6269                           
  6270                           	psect	text24
  6271  0315                     __ptext24:	
  6272 ;; *************** function _I2C_DO_RX_ACK *****************
  6273 ;; Defined at:
  6274 ;;		line 476 in file "mcc_generated_files/i2c_master.c"
  6275 ;; Parameters:    Size  Location     Type
  6276 ;;		None
  6277 ;; Auto vars:     Size  Location     Type
  6278 ;;		None
  6279 ;; Return value:  Size  Location     Type
  6280 ;;                  1    wreg      enum E12110
  6281 ;; Registers used:
  6282 ;;		wreg, status,2, status,0, pclath, cstack
  6283 ;; Tracked objects:
  6284 ;;		On entry : 0/0
  6285 ;;		On exit  : 0/0
  6286 ;;		Unchanged: 0/0
  6287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6292 ;;Total ram usage:        0 bytes
  6293 ;; Hardware stack levels used:    1
  6294 ;; Hardware stack levels required when called:    1
  6295 ;; This function calls:
  6296 ;;		_I2C_MasterSendAck
  6297 ;; This function is called by:
  6298 ;;		_I2C_MasterFsm
  6299 ;; This function uses a non-reentrant model
  6300 ;;
  6301                           
  6302                           
  6303                           ;psect for function _I2C_DO_RX_ACK
  6304  0315                     _I2C_DO_RX_ACK:	
  6305                           
  6306                           ;i2c_master.c: 478: I2C_MasterSendAck();
  6307                           
  6308                           ;incstack = 0
  6309                           ; Regs used in _I2C_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
  6310  0315  3183  2329         	fcall	_I2C_MasterSendAck
  6311                           
  6312                           ;i2c_master.c: 479: return I2C_RCEN;
  6313  0317  3005               	movlw	5
  6314  0318  0008               	return
  6315  0319                     __end_of_I2C_DO_RX_ACK:	
  6316                           
  6317                           	psect	text25
  6318  0319                     __ptext25:	
  6319 ;; *************** function _I2C_DO_SEND_STOP *****************
  6320 ;; Defined at:
  6321 ;;		line 470 in file "mcc_generated_files/i2c_master.c"
  6322 ;; Parameters:    Size  Location     Type
  6323 ;;		None
  6324 ;; Auto vars:     Size  Location     Type
  6325 ;;		None
  6326 ;; Return value:  Size  Location     Type
  6327 ;;                  1    wreg      enum E12110
  6328 ;; Registers used:
  6329 ;;		wreg, status,2, status,0, pclath, cstack
  6330 ;; Tracked objects:
  6331 ;;		On entry : 0/0
  6332 ;;		On exit  : 0/0
  6333 ;;		Unchanged: 0/0
  6334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6339 ;;Total ram usage:        0 bytes
  6340 ;; Hardware stack levels used:    1
  6341 ;; Hardware stack levels required when called:    1
  6342 ;; This function calls:
  6343 ;;		_I2C_MasterStop
  6344 ;; This function is called by:
  6345 ;;		_I2C_DO_TX
  6346 ;;		_I2C_DO_TX_EMPTY
  6347 ;;		_I2C_DO_ADDRESS_NACK
  6348 ;;		_I2C_MasterFsm
  6349 ;; This function uses a non-reentrant model
  6350 ;;
  6351                           
  6352                           
  6353                           ;psect for function _I2C_DO_SEND_STOP
  6354  0319                     _I2C_DO_SEND_STOP:	
  6355                           
  6356                           ;i2c_master.c: 472: I2C_MasterStop();
  6357                           
  6358                           ;incstack = 0
  6359                           ; Regs used in _I2C_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
  6360  0319  3183  2340         	fcall	_I2C_MasterStop
  6361                           
  6362                           ;i2c_master.c: 473: return I2C_IDLE;
  6363  031B  3000               	movlw	0
  6364  031C  0008               	return
  6365  031D                     __end_of_I2C_DO_SEND_STOP:	
  6366                           
  6367                           	psect	text26
  6368  031D                     __ptext26:	
  6369 ;; *************** function _I2C_DO_SEND_RESTART *****************
  6370 ;; Defined at:
  6371 ;;		line 464 in file "mcc_generated_files/i2c_master.c"
  6372 ;; Parameters:    Size  Location     Type
  6373 ;;		None
  6374 ;; Auto vars:     Size  Location     Type
  6375 ;;		None
  6376 ;; Return value:  Size  Location     Type
  6377 ;;                  1    wreg      enum E12110
  6378 ;; Registers used:
  6379 ;;		wreg, status,2, status,0, pclath, cstack
  6380 ;; Tracked objects:
  6381 ;;		On entry : 0/0
  6382 ;;		On exit  : 0/0
  6383 ;;		Unchanged: 0/0
  6384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6389 ;;Total ram usage:        0 bytes
  6390 ;; Hardware stack levels used:    1
  6391 ;; Hardware stack levels required when called:    1
  6392 ;; This function calls:
  6393 ;;		_I2C_MasterEnableRestart
  6394 ;; This function is called by:
  6395 ;;		_I2C_DO_TX_EMPTY
  6396 ;;		_I2C_DO_ADDRESS_NACK
  6397 ;;		_I2C_MasterFsm
  6398 ;; This function uses a non-reentrant model
  6399 ;;
  6400                           
  6401                           
  6402                           ;psect for function _I2C_DO_SEND_RESTART
  6403  031D                     _I2C_DO_SEND_RESTART:	
  6404                           
  6405                           ;i2c_master.c: 466: I2C_MasterEnableRestart();
  6406                           
  6407                           ;incstack = 0
  6408                           ; Regs used in _I2C_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
  6409  031D  3183  2343         	fcall	_I2C_MasterEnableRestart
  6410                           
  6411                           ;i2c_master.c: 467: return I2C_SEND_ADR_READ;
  6412  031F  3001               	movlw	1
  6413  0320  0008               	return
  6414  0321                     __end_of_I2C_DO_SEND_RESTART:	
  6415                           
  6416                           	psect	text27
  6417  0321                     __ptext27:	
  6418 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  6419 ;; Defined at:
  6420 ;;		line 457 in file "mcc_generated_files/i2c_master.c"
  6421 ;; Parameters:    Size  Location     Type
  6422 ;;		None
  6423 ;; Auto vars:     Size  Location     Type
  6424 ;;		None
  6425 ;; Return value:  Size  Location     Type
  6426 ;;                  1    wreg      enum E12110
  6427 ;; Registers used:
  6428 ;;		wreg, status,2, status,0, pclath, cstack
  6429 ;; Tracked objects:
  6430 ;;		On entry : 0/0
  6431 ;;		On exit  : 0/0
  6432 ;;		Unchanged: 0/0
  6433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6438 ;;Total ram usage:        0 bytes
  6439 ;; Hardware stack levels used:    1
  6440 ;; Hardware stack levels required when called:    1
  6441 ;; This function calls:
  6442 ;;		_I2C_MasterEnableRestart
  6443 ;; This function is called by:
  6444 ;;		_I2C_DO_TX
  6445 ;;		_I2C_MasterFsm
  6446 ;; This function uses a non-reentrant model
  6447 ;;
  6448                           
  6449                           
  6450                           ;psect for function _I2C_DO_SEND_RESTART_WRITE
  6451  0321                     _I2C_DO_SEND_RESTART_WRITE:	
  6452                           
  6453                           ;i2c_master.c: 459: I2C_MasterEnableRestart();
  6454                           
  6455                           ;incstack = 0
  6456                           ; Regs used in _I2C_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
  6457  0321  3183  2343         	fcall	_I2C_MasterEnableRestart
  6458                           
  6459                           ;i2c_master.c: 460: return I2C_SEND_ADR_WRITE;
  6460  0323  3002               	movlw	2
  6461  0324  0008               	return
  6462  0325                     __end_of_I2C_DO_SEND_RESTART_WRITE:	
  6463                           
  6464                           	psect	text28
  6465  0325                     __ptext28:	
  6466 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  6467 ;; Defined at:
  6468 ;;		line 451 in file "mcc_generated_files/i2c_master.c"
  6469 ;; Parameters:    Size  Location     Type
  6470 ;;		None
  6471 ;; Auto vars:     Size  Location     Type
  6472 ;;		None
  6473 ;; Return value:  Size  Location     Type
  6474 ;;                  1    wreg      enum E12110
  6475 ;; Registers used:
  6476 ;;		wreg, status,2, status,0, pclath, cstack
  6477 ;; Tracked objects:
  6478 ;;		On entry : 0/0
  6479 ;;		On exit  : 0/0
  6480 ;;		Unchanged: 0/0
  6481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6486 ;;Total ram usage:        0 bytes
  6487 ;; Hardware stack levels used:    1
  6488 ;; Hardware stack levels required when called:    1
  6489 ;; This function calls:
  6490 ;;		_I2C_MasterEnableRestart
  6491 ;; This function is called by:
  6492 ;;		_I2C_DO_TX
  6493 ;;		_I2C_MasterFsm
  6494 ;; This function uses a non-reentrant model
  6495 ;;
  6496                           
  6497                           
  6498                           ;psect for function _I2C_DO_SEND_RESTART_READ
  6499  0325                     _I2C_DO_SEND_RESTART_READ:	
  6500                           
  6501                           ;i2c_master.c: 453: I2C_MasterEnableRestart();
  6502                           
  6503                           ;incstack = 0
  6504                           ; Regs used in _I2C_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
  6505  0325  3183  2343         	fcall	_I2C_MasterEnableRestart
  6506                           
  6507                           ;i2c_master.c: 454: return I2C_SEND_ADR_READ;
  6508  0327  3001               	movlw	1
  6509  0328  0008               	return
  6510  0329                     __end_of_I2C_DO_SEND_RESTART_READ:	
  6511                           
  6512                           	psect	text29
  6513  02EE                     __ptext29:	
  6514 ;; *************** function _I2C_DO_RCEN *****************
  6515 ;; Defined at:
  6516 ;;		line 404 in file "mcc_generated_files/i2c_master.c"
  6517 ;; Parameters:    Size  Location     Type
  6518 ;;		None
  6519 ;; Auto vars:     Size  Location     Type
  6520 ;;		None
  6521 ;; Return value:  Size  Location     Type
  6522 ;;                  1    wreg      enum E12110
  6523 ;; Registers used:
  6524 ;;		wreg, status,2, status,0, pclath, cstack
  6525 ;; Tracked objects:
  6526 ;;		On entry : 0/0
  6527 ;;		On exit  : 0/0
  6528 ;;		Unchanged: 0/0
  6529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6534 ;;Total ram usage:        0 bytes
  6535 ;; Hardware stack levels used:    1
  6536 ;; Hardware stack levels required when called:    1
  6537 ;; This function calls:
  6538 ;;		_I2C_MasterStartRx
  6539 ;; This function is called by:
  6540 ;;		_I2C_MasterFsm
  6541 ;; This function uses a non-reentrant model
  6542 ;;
  6543                           
  6544                           
  6545                           ;psect for function _I2C_DO_RCEN
  6546  02EE                     _I2C_DO_RCEN:	
  6547                           
  6548                           ;i2c_master.c: 406: I2C_Status.addressNackCheck = 0;
  6549                           
  6550                           ;incstack = 0
  6551                           ; Regs used in _I2C_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
  6552  02EE  0020               	movlb	0	; select bank0
  6553  02EF  103C               	bcf	_I2C_Status+28,0
  6554                           
  6555                           ;i2c_master.c: 407: I2C_MasterStartRx();
  6556  02F0  3183  233D         	fcall	_I2C_MasterStartRx
  6557                           
  6558                           ;i2c_master.c: 408: return I2C_RX;
  6559  02F2  3004               	movlw	4
  6560  02F3  0008               	return
  6561  02F4                     __end_of_I2C_DO_RCEN:	
  6562                           
  6563                           	psect	text30
  6564  00CA                     __ptext30:	
  6565 ;; *************** function _I2C_DO_RX *****************
  6566 ;; Defined at:
  6567 ;;		line 380 in file "mcc_generated_files/i2c_master.c"
  6568 ;; Parameters:    Size  Location     Type
  6569 ;;		None
  6570 ;; Auto vars:     Size  Location     Type
  6571 ;;		None
  6572 ;; Return value:  Size  Location     Type
  6573 ;;                  1    wreg      enum E12110
  6574 ;; Registers used:
  6575 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6576 ;; Tracked objects:
  6577 ;;		On entry : 0/0
  6578 ;;		On exit  : 0/0
  6579 ;;		Unchanged: 0/0
  6580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6583 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6584 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6585 ;;Total ram usage:        1 bytes
  6586 ;; Hardware stack levels used:    1
  6587 ;; Hardware stack levels required when called:    3
  6588 ;; This function calls:
  6589 ;;		Absolute function
  6590 ;;		_I2C_CallbackReturnReset
  6591 ;;		_I2C_CallbackReturnStop
  6592 ;;		_I2C_DO_RX_NACK_RESTART
  6593 ;;		_I2C_DO_RX_NACK_STOP
  6594 ;;		_I2C_MasterGetRxData
  6595 ;;		_I2C_MasterSendAck
  6596 ;;		_rd1RegCompleteHandler
  6597 ;;		_rd2RegCompleteHandler
  6598 ;;		_rdBlkRegCompleteHandler
  6599 ;;		_wr1RegCompleteHandler
  6600 ;;		_wr2RegCompleteHandler
  6601 ;; This function is called by:
  6602 ;;		_I2C_MasterFsm
  6603 ;; This function uses a non-reentrant model
  6604 ;;
  6605                           
  6606                           
  6607                           ;psect for function _I2C_DO_RX
  6608  00CA                     _I2C_DO_RX:	
  6609                           
  6610                           ;i2c_master.c: 382: *I2C_Status.data_ptr++ = I2C_MasterGetRxData();
  6611                           
  6612                           ;incstack = 0
  6613                           ; Regs used in _I2C_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6614  00CA  3183  233A  3180   	fcall	_I2C_MasterGetRxData
  6615  00CD  00F0               	movwf	??_I2C_DO_RX
  6616  00CE  0020               	movlb	0	; select bank0
  6617  00CF  0837               	movf	low ((_I2C_Status| 0+23)),w
  6618  00D0  0086               	movwf	6
  6619  00D1  0187               	clrf	7
  6620  00D2  0870               	movf	??_I2C_DO_RX,w
  6621  00D3  0081               	movwf	1
  6622  00D4  3001               	movlw	1
  6623  00D5  00F0               	movwf	??_I2C_DO_RX
  6624  00D6  0870               	movf	??_I2C_DO_RX,w
  6625  00D7  07B7               	addwf	low ((_I2C_Status| 0+23)),f
  6626                           
  6627                           ;i2c_master.c: 383: if(--I2C_Status.data_length)
  6628  00D8  3001               	movlw	1
  6629  00D9  02B8               	subwf	_I2C_Status+24,f
  6630  00DA  3000               	movlw	0
  6631  00DB  3BB9               	subwfb	_I2C_Status+25,f
  6632  00DC  0838               	movf	_I2C_Status+24,w
  6633  00DD  0439               	iorwf	_I2C_Status+25,w
  6634  00DE  1903               	btfsc	3,2
  6635  00DF  28E4               	goto	i1l206
  6636                           
  6637                           ;i2c_master.c: 384: {
  6638                           ;i2c_master.c: 385: I2C_MasterSendAck();
  6639  00E0  3183  2329         	fcall	_I2C_MasterSendAck
  6640                           
  6641                           ;i2c_master.c: 386: return I2C_RCEN;
  6642  00E2  3005               	movlw	5
  6643                           
  6644                           ;i2c_master.c: 387: }
  6645  00E3  0008               	return
  6646  00E4                     i1l206:	
  6647                           
  6648                           ;i2c_master.c: 388: else
  6649                           ;i2c_master.c: 389: {
  6650                           ;i2c_master.c: 390: I2C_Status.bufferFree = 1;
  6651  00E4  15BC               	bsf	_I2C_Status+28,3
  6652                           
  6653                           ;i2c_master.c: 391: switch(I2C_Status.callbackTable[I2C_DATA_COMPLETE](I2C_Status.callba
      +                          ckPayload[I2C_DATA_COMPLETE]))
  6654  00E5  28EC               	goto	i1l2542
  6655  00E6                     i1l2532:	
  6656                           ;i2c_master.c: 392: {
  6657                           ;i2c_master.c: 393: case I2C_RESTART_WRITE:
  6658                           
  6659                           
  6660                           ;i2c_master.c: 394: case I2C_RESTART_READ:
  6661                           ;i2c_master.c: 395: return I2C_DO_RX_NACK_RESTART();
  6662  00E6  3183  230D         	fcall	_I2C_DO_RX_NACK_RESTART
  6663  00E8  0008               	return
  6664  00E9                     i1l2536:	
  6665                           ;i2c_master.c: 397: case I2C_CONTINUE:
  6666                           
  6667                           ;i2c_master.c: 396: default:
  6668                           
  6669                           
  6670                           ;i2c_master.c: 398: case I2C_STOP:
  6671                           ;i2c_master.c: 399: return I2C_DO_RX_NACK_STOP();
  6672  00E9  3183  2311         	fcall	_I2C_DO_RX_NACK_STOP
  6673                           
  6674                           ;i2c_master.c: 400: }
  6675  00EB  0008               	return
  6676  00EC                     i1l2542:	
  6677  00EC  0020               	movlb	0	; select bank0
  6678  00ED  082C               	movf	low ((_I2C_Status| 0+12)),w
  6679  00EE  00F0               	movwf	??_I2C_DO_RX
  6680  00EF  0870               	movf	??_I2C_DO_RX,w
  6681  00F0  00C7               	movwf	rdBlkRegCompleteHandler@ptr
  6682  00F1  0821               	movf	_I2C_Status+1,w
  6683  00F2  008A               	movwf	10
  6684  00F3  0820               	movf	_I2C_Status,w
  6685  00F4  000A               	callw
  6686  00F5  3180               	pagesel	$
  6687                           
  6688                           ; Switch size 1, requested type "space"
  6689                           ; Number of cases is 4, Range of values is 1 to 4
  6690                           ; switch strategies available:
  6691                           ; Name         Instructions Cycles
  6692                           ; simple_byte           13     7 (average)
  6693                           ; direct_byte           17     9 (fixed)
  6694                           ; jumptable            263     9 (fixed)
  6695                           ;	Chosen strategy is simple_byte
  6696  00F6  3A01               	xorlw	1	; case 1
  6697  00F7  1903               	skipnz
  6698  00F8  28E9               	goto	i1l2536
  6699  00F9  3A03               	xorlw	3	; case 2
  6700  00FA  1903               	skipnz
  6701  00FB  28E6               	goto	i1l2532
  6702  00FC  3A01               	xorlw	1	; case 3
  6703  00FD  1903               	skipnz
  6704  00FE  28E6               	goto	i1l2532
  6705  00FF  3A07               	xorlw	7	; case 4
  6706  0100  1903               	skipnz
  6707  0101  28E9               	goto	i1l2536
  6708  0102  28E9               	goto	i1l2536
  6709  0103  0008               	return
  6710  0104                     __end_of_I2C_DO_RX:	
  6711                           
  6712                           	psect	text31
  6713  0043                     __ptext31:	
  6714 ;; *************** function _I2C_DO_TX *****************
  6715 ;; Defined at:
  6716 ;;		line 356 in file "mcc_generated_files/i2c_master.c"
  6717 ;; Parameters:    Size  Location     Type
  6718 ;;		None
  6719 ;; Auto vars:     Size  Location     Type
  6720 ;;		None
  6721 ;; Return value:  Size  Location     Type
  6722 ;;                  1    wreg      enum E12110
  6723 ;; Registers used:
  6724 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6725 ;; Tracked objects:
  6726 ;;		On entry : 0/0
  6727 ;;		On exit  : 0/0
  6728 ;;		Unchanged: 0/0
  6729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6731 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6732 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6733 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6734 ;;Total ram usage:        3 bytes
  6735 ;; Hardware stack levels used:    1
  6736 ;; Hardware stack levels required when called:    3
  6737 ;; This function calls:
  6738 ;;		Absolute function
  6739 ;;		_I2C_CallbackReturnReset
  6740 ;;		_I2C_CallbackReturnStop
  6741 ;;		_I2C_DO_SEND_RESTART_READ
  6742 ;;		_I2C_DO_SEND_RESTART_WRITE
  6743 ;;		_I2C_DO_SEND_STOP
  6744 ;;		_I2C_MasterIsNack
  6745 ;;		_I2C_MasterSendTxData
  6746 ;;		_rd1RegCompleteHandler
  6747 ;;		_rd2RegCompleteHandler
  6748 ;;		_rdBlkRegCompleteHandler
  6749 ;;		_wr1RegCompleteHandler
  6750 ;;		_wr2RegCompleteHandler
  6751 ;; This function is called by:
  6752 ;;		_I2C_MasterFsm
  6753 ;; This function uses a non-reentrant model
  6754 ;;
  6755                           
  6756                           
  6757                           ;psect for function _I2C_DO_TX
  6758  0043                     _I2C_DO_TX:	
  6759                           
  6760                           ;i2c_master.c: 358: if(I2C_MasterIsNack())
  6761                           
  6762                           ;incstack = 0
  6763                           ; Regs used in _I2C_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6764  0043  3182  22F4  3180   	fcall	_I2C_MasterIsNack
  6765  0046  3A00               	xorlw	0
  6766  0047  1D03               	btfss	3,2
  6767  0048  2853               	goto	i1l2506
  6768  0049  286F               	goto	i1l190
  6769  004A                     i1l2492:	
  6770                           ;i2c_master.c: 361: {
  6771                           ;i2c_master.c: 362: case I2C_RESTART_READ:
  6772                           
  6773                           ;i2c_master.c: 359: {
  6774                           ;i2c_master.c: 360: switch(I2C_Status.callbackTable[I2C_DATA_NACK](I2C_Status.callbackPa
      +                          yload[I2C_DATA_NACK]))
  6775                           
  6776                           
  6777                           ;i2c_master.c: 363: return I2C_DO_SEND_RESTART_READ();
  6778  004A  3183  2325         	fcall	_I2C_DO_SEND_RESTART_READ
  6779  004C  0008               	return
  6780  004D                     i1l2496:	
  6781                           ;i2c_master.c: 364: case I2C_RESTART_WRITE:
  6782                           
  6783                           
  6784                           ;i2c_master.c: 365: return I2C_DO_SEND_RESTART_WRITE();
  6785  004D  3183  2321         	fcall	_I2C_DO_SEND_RESTART_WRITE
  6786  004F  0008               	return
  6787  0050                     i1l2500:	
  6788                           ;i2c_master.c: 367: case I2C_CONTINUE:
  6789                           
  6790                           ;i2c_master.c: 366: default:
  6791                           
  6792                           
  6793                           ;i2c_master.c: 368: case I2C_STOP:
  6794                           ;i2c_master.c: 369: return I2C_DO_SEND_STOP();
  6795  0050  3183  2319         	fcall	_I2C_DO_SEND_STOP
  6796                           
  6797                           ;i2c_master.c: 370: }
  6798  0052  0008               	return
  6799  0053                     i1l2506:	
  6800  0053  0020               	movlb	0	; select bank0
  6801  0054  082F               	movf	low ((_I2C_Status| 0+15)),w
  6802  0055  00F1               	movwf	??_I2C_DO_TX
  6803  0056  0871               	movf	??_I2C_DO_TX,w
  6804  0057  00C7               	movwf	rdBlkRegCompleteHandler@ptr
  6805  0058  3006               	movlw	6
  6806  0059  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  6807  005A  0086               	movwf	6
  6808  005B  0187               	clrf	7
  6809  005C  3F41               	moviw [1]fsr1
  6810  005D  008A               	movwf	10
  6811  005E  3F40               	moviw [0]fsr1
  6812  005F  000A               	callw
  6813  0060  3180               	pagesel	$
  6814                           
  6815                           ; Switch size 1, requested type "space"
  6816                           ; Number of cases is 4, Range of values is 1 to 4
  6817                           ; switch strategies available:
  6818                           ; Name         Instructions Cycles
  6819                           ; simple_byte           13     7 (average)
  6820                           ; direct_byte           17     9 (fixed)
  6821                           ; jumptable            263     9 (fixed)
  6822                           ;	Chosen strategy is simple_byte
  6823  0061  3A01               	xorlw	1	; case 1
  6824  0062  1903               	skipnz
  6825  0063  2850               	goto	i1l2500
  6826  0064  3A03               	xorlw	3	; case 2
  6827  0065  1903               	skipnz
  6828  0066  284A               	goto	i1l2492
  6829  0067  3A01               	xorlw	1	; case 3
  6830  0068  1903               	skipnz
  6831  0069  284D               	goto	i1l2496
  6832  006A  3A07               	xorlw	7	; case 4
  6833  006B  1903               	skipnz
  6834  006C  2850               	goto	i1l2500
  6835  006D  2850               	goto	i1l2500
  6836                           
  6837                           ;i2c_master.c: 371: }
  6838  006E  0008               	return
  6839  006F                     i1l190:	
  6840                           
  6841                           ;i2c_master.c: 372: else
  6842                           ;i2c_master.c: 373: {
  6843                           ;i2c_master.c: 374: I2C_Status.addressNackCheck = 0;
  6844  006F  0020               	movlb	0	; select bank0
  6845  0070  103C               	bcf	_I2C_Status+28,0
  6846                           
  6847                           ;i2c_master.c: 375: I2C_MasterSendTxData(*I2C_Status.data_ptr++);
  6848  0071  3017               	movlw	23
  6849  0072  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  6850  0073  0086               	movwf	6
  6851  0074  0187               	clrf	7
  6852  0075  3F40               	moviw [0]fsr1
  6853  0076  0084               	movwf	4
  6854  0077  0185               	clrf	5
  6855  0078  0A81               	incf	1,f
  6856  0079  0800               	movf	0,w
  6857  007A  3183  2304  3180   	fcall	_I2C_MasterSendTxData
  6858                           
  6859                           ;i2c_master.c: 376: return (--I2C_Status.data_length)?I2C_TX:I2C_TX_EMPTY;
  6860  007D  3001               	movlw	1
  6861  007E  0020               	movlb	0	; select bank0
  6862  007F  02B8               	subwf	_I2C_Status+24,f
  6863  0080  3000               	movlw	0
  6864  0081  3BB9               	subwfb	_I2C_Status+25,f
  6865  0082  0838               	movf	_I2C_Status+24,w
  6866  0083  0439               	iorwf	_I2C_Status+25,w
  6867  0084  1D03               	btfss	3,2
  6868  0085  2888               	goto	i1l2514
  6869  0086  3006               	movlw	6
  6870  0087  2889               	goto	L1
  6871  0088                     i1l2514:	
  6872  0088  3003               	movlw	3
  6873  0089                     L1:	
  6874  0089  00F2               	movwf	_I2C_DO_TX$504
  6875  008A  3000               	movlw	0
  6876  008B  00F3               	movwf	_I2C_DO_TX$504+1
  6877  008C  0872               	movf	_I2C_DO_TX$504,w
  6878  008D  0008               	return
  6879  008E                     __end_of_I2C_DO_TX:	
  6880                           
  6881                           	psect	text32
  6882  02C9                     __ptext32:	
  6883 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  6884 ;; Defined at:
  6885 ;;		line 349 in file "mcc_generated_files/i2c_master.c"
  6886 ;; Parameters:    Size  Location     Type
  6887 ;;		None
  6888 ;; Auto vars:     Size  Location     Type
  6889 ;;		None
  6890 ;; Return value:  Size  Location     Type
  6891 ;;                  1    wreg      enum E12110
  6892 ;; Registers used:
  6893 ;;		wreg, status,2, status,0, pclath, cstack
  6894 ;; Tracked objects:
  6895 ;;		On entry : 0/0
  6896 ;;		On exit  : 0/0
  6897 ;;		Unchanged: 0/0
  6898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6903 ;;Total ram usage:        0 bytes
  6904 ;; Hardware stack levels used:    1
  6905 ;; Hardware stack levels required when called:    1
  6906 ;; This function calls:
  6907 ;;		_I2C_MasterSendTxData
  6908 ;; This function is called by:
  6909 ;;		_I2C_MasterFsm
  6910 ;; This function uses a non-reentrant model
  6911 ;;
  6912                           
  6913                           
  6914                           ;psect for function _I2C_DO_SEND_ADR_WRITE
  6915  02C9                     _I2C_DO_SEND_ADR_WRITE:	
  6916                           
  6917                           ;i2c_master.c: 351: I2C_Status.addressNackCheck = 1;
  6918                           
  6919                           ;incstack = 0
  6920                           ; Regs used in _I2C_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
  6921  02C9  0020               	movlb	0	; select bank0
  6922  02CA  143C               	bsf	_I2C_Status+28,0
  6923                           
  6924                           ;i2c_master.c: 352: I2C_MasterSendTxData(I2C_Status.address << 1);
  6925  02CB  3536               	lslf	_I2C_Status+22,w
  6926  02CC  3183  2304         	fcall	_I2C_MasterSendTxData
  6927                           
  6928                           ;i2c_master.c: 353: return I2C_TX;
  6929  02CE  3003               	movlw	3
  6930  02CF  0008               	return
  6931  02D0                     __end_of_I2C_DO_SEND_ADR_WRITE:	
  6932                           
  6933                           	psect	text33
  6934  02C1                     __ptext33:	
  6935 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  6936 ;; Defined at:
  6937 ;;		line 342 in file "mcc_generated_files/i2c_master.c"
  6938 ;; Parameters:    Size  Location     Type
  6939 ;;		None
  6940 ;; Auto vars:     Size  Location     Type
  6941 ;;		None
  6942 ;; Return value:  Size  Location     Type
  6943 ;;                  1    wreg      enum E12110
  6944 ;; Registers used:
  6945 ;;		wreg, status,2, status,0, pclath, cstack
  6946 ;; Tracked objects:
  6947 ;;		On entry : 0/0
  6948 ;;		On exit  : 0/0
  6949 ;;		Unchanged: 0/0
  6950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6955 ;;Total ram usage:        0 bytes
  6956 ;; Hardware stack levels used:    1
  6957 ;; Hardware stack levels required when called:    1
  6958 ;; This function calls:
  6959 ;;		_I2C_MasterSendTxData
  6960 ;; This function is called by:
  6961 ;;		_I2C_MasterFsm
  6962 ;; This function uses a non-reentrant model
  6963 ;;
  6964                           
  6965                           
  6966                           ;psect for function _I2C_DO_SEND_ADR_READ
  6967  02C1                     _I2C_DO_SEND_ADR_READ:	
  6968                           
  6969                           ;i2c_master.c: 344: I2C_Status.addressNackCheck = 1;
  6970                           
  6971                           ;incstack = 0
  6972                           ; Regs used in _I2C_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
  6973  02C1  0020               	movlb	0	; select bank0
  6974  02C2  143C               	bsf	_I2C_Status+28,0
  6975                           
  6976                           ;i2c_master.c: 345: I2C_MasterSendTxData(I2C_Status.address << 1 | 1);
  6977  02C3  1403               	setc
  6978  02C4  0D36               	rlf	_I2C_Status+22,w
  6979  02C5  3183  2304         	fcall	_I2C_MasterSendTxData
  6980                           
  6981                           ;i2c_master.c: 346: return I2C_RCEN;
  6982  02C7  3005               	movlw	5
  6983  02C8  0008               	return
  6984  02C9                     __end_of_I2C_DO_SEND_ADR_READ:	
  6985                           
  6986                           	psect	text34
  6987  02FF                     __ptext34:	
  6988 ;; *************** function _I2C_DO_IDLE *****************
  6989 ;; Defined at:
  6990 ;;		line 335 in file "mcc_generated_files/i2c_master.c"
  6991 ;; Parameters:    Size  Location     Type
  6992 ;;		None
  6993 ;; Auto vars:     Size  Location     Type
  6994 ;;		None
  6995 ;; Return value:  Size  Location     Type
  6996 ;;                  1    wreg      enum E12110
  6997 ;; Registers used:
  6998 ;;		wreg, status,2
  6999 ;; Tracked objects:
  7000 ;;		On entry : 0/0
  7001 ;;		On exit  : 0/0
  7002 ;;		Unchanged: 0/0
  7003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7008 ;;Total ram usage:        0 bytes
  7009 ;; Hardware stack levels used:    1
  7010 ;; This function calls:
  7011 ;;		Nothing
  7012 ;; This function is called by:
  7013 ;;		_I2C_MasterFsm
  7014 ;; This function uses a non-reentrant model
  7015 ;;
  7016                           
  7017                           
  7018                           ;psect for function _I2C_DO_IDLE
  7019  02FF                     _I2C_DO_IDLE:	
  7020                           
  7021                           ;i2c_master.c: 337: I2C_Status.busy = 0;
  7022                           
  7023                           ;incstack = 0
  7024                           ; Regs used in _I2C_DO_IDLE: [wreg+status,2]
  7025  02FF  0020               	movlb	0	; select bank0
  7026  0300  10BC               	bcf	_I2C_Status+28,1
  7027                           
  7028                           ;i2c_master.c: 338: I2C_Status.error = I2C_NOERR;
  7029  0301  01BB               	clrf	_I2C_Status+27
  7030                           
  7031                           ;i2c_master.c: 339: return I2C_RESET;
  7032  0302  300E               	movlw	14
  7033  0303  0008               	return
  7034  0304                     __end_of_I2C_DO_IDLE:	
  7035                           
  7036                           	psect	text35
  7037  0150                     __ptext35:	
  7038 ;; *************** function _I2C_DO_TX_EMPTY *****************
  7039 ;; Defined at:
  7040 ;;		line 411 in file "mcc_generated_files/i2c_master.c"
  7041 ;; Parameters:    Size  Location     Type
  7042 ;;		None
  7043 ;; Auto vars:     Size  Location     Type
  7044 ;;		None
  7045 ;; Return value:  Size  Location     Type
  7046 ;;                  1    wreg      enum E12110
  7047 ;; Registers used:
  7048 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7049 ;; Tracked objects:
  7050 ;;		On entry : 0/0
  7051 ;;		On exit  : 0/0
  7052 ;;		Unchanged: 0/0
  7053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7056 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7057 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7058 ;;Total ram usage:        1 bytes
  7059 ;; Hardware stack levels used:    1
  7060 ;; Hardware stack levels required when called:    3
  7061 ;; This function calls:
  7062 ;;		Absolute function
  7063 ;;		_I2C_CallbackReturnReset
  7064 ;;		_I2C_CallbackReturnStop
  7065 ;;		_I2C_DO_SEND_RESTART
  7066 ;;		_I2C_DO_SEND_STOP
  7067 ;;		_I2C_MasterSetIrq
  7068 ;;		_rd1RegCompleteHandler
  7069 ;;		_rd2RegCompleteHandler
  7070 ;;		_rdBlkRegCompleteHandler
  7071 ;;		_wr1RegCompleteHandler
  7072 ;;		_wr2RegCompleteHandler
  7073 ;; This function is called by:
  7074 ;;		_I2C_MasterFsm
  7075 ;; This function uses a non-reentrant model
  7076 ;;
  7077                           
  7078                           
  7079                           ;psect for function _I2C_DO_TX_EMPTY
  7080  0150                     _I2C_DO_TX_EMPTY:	
  7081                           
  7082                           ;i2c_master.c: 413: I2C_Status.bufferFree = 1;
  7083                           
  7084                           ;incstack = 0
  7085                           ; Regs used in _I2C_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7086  0150  0020               	movlb	0	; select bank0
  7087  0151  15BC               	bsf	_I2C_Status+28,3
  7088                           
  7089                           ;i2c_master.c: 414: switch(I2C_Status.callbackTable[I2C_DATA_COMPLETE](I2C_Status.callba
      +                          ckPayload[I2C_DATA_COMPLETE]))
  7090  0152  295D               	goto	i1l2562
  7091  0153                     i1l2546:	
  7092                           ;i2c_master.c: 415: {
  7093                           ;i2c_master.c: 416: case I2C_RESTART_READ:
  7094                           
  7095                           
  7096                           ;i2c_master.c: 417: case I2C_RESTART_WRITE:
  7097                           ;i2c_master.c: 418: return I2C_DO_SEND_RESTART();
  7098  0153  3183  231D         	fcall	_I2C_DO_SEND_RESTART
  7099  0155  0008               	return
  7100  0156                     i1l2550:	
  7101                           ;i2c_master.c: 419: case I2C_CONTINUE:
  7102                           
  7103                           
  7104                           ;i2c_master.c: 420: I2C_MasterSetIrq();
  7105  0156  3183  2337         	fcall	_I2C_MasterSetIrq
  7106                           
  7107                           ;i2c_master.c: 421: return I2C_TX;
  7108  0158  3003               	movlw	3
  7109  0159  0008               	return
  7110  015A                     i1l2556:	
  7111                           ;i2c_master.c: 423: case I2C_STOP:
  7112                           
  7113                           ;i2c_master.c: 422: default:
  7114                           
  7115                           
  7116                           ;i2c_master.c: 424: return I2C_DO_SEND_STOP();
  7117  015A  3183  2319         	fcall	_I2C_DO_SEND_STOP
  7118                           
  7119                           ;i2c_master.c: 425: }
  7120  015C  0008               	return
  7121  015D                     i1l2562:	
  7122  015D  0020               	movlb	0	; select bank0
  7123  015E  082C               	movf	low ((_I2C_Status| 0+12)),w
  7124  015F  00F0               	movwf	??_I2C_DO_TX_EMPTY
  7125  0160  0870               	movf	??_I2C_DO_TX_EMPTY,w
  7126  0161  00C7               	movwf	rdBlkRegCompleteHandler@ptr
  7127  0162  0821               	movf	_I2C_Status+1,w
  7128  0163  008A               	movwf	10
  7129  0164  0820               	movf	_I2C_Status,w
  7130  0165  000A               	callw
  7131  0166  3181               	pagesel	$
  7132                           
  7133                           ; Switch size 1, requested type "space"
  7134                           ; Number of cases is 4, Range of values is 1 to 4
  7135                           ; switch strategies available:
  7136                           ; Name         Instructions Cycles
  7137                           ; simple_byte           13     7 (average)
  7138                           ; direct_byte           17     9 (fixed)
  7139                           ; jumptable            263     9 (fixed)
  7140                           ;	Chosen strategy is simple_byte
  7141  0167  3A01               	xorlw	1	; case 1
  7142  0168  1903               	skipnz
  7143  0169  295A               	goto	i1l2556
  7144  016A  3A03               	xorlw	3	; case 2
  7145  016B  1903               	skipnz
  7146  016C  2953               	goto	i1l2546
  7147  016D  3A01               	xorlw	1	; case 3
  7148  016E  1903               	skipnz
  7149  016F  2953               	goto	i1l2546
  7150  0170  3A07               	xorlw	7	; case 4
  7151  0171  1903               	skipnz
  7152  0172  2956               	goto	i1l2550
  7153  0173  295A               	goto	i1l2556
  7154  0174  0008               	return
  7155  0175                     __end_of_I2C_DO_TX_EMPTY:	
  7156                           
  7157                           	psect	text36
  7158  0337                     __ptext36:	
  7159 ;; *************** function _I2C_MasterSetIrq *****************
  7160 ;; Defined at:
  7161 ;;		line 647 in file "mcc_generated_files/i2c_master.c"
  7162 ;; Parameters:    Size  Location     Type
  7163 ;;		None
  7164 ;; Auto vars:     Size  Location     Type
  7165 ;;		None
  7166 ;; Return value:  Size  Location     Type
  7167 ;;                  1    wreg      void 
  7168 ;; Registers used:
  7169 ;;		None
  7170 ;; Tracked objects:
  7171 ;;		On entry : 0/0
  7172 ;;		On exit  : 0/0
  7173 ;;		Unchanged: 0/0
  7174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7179 ;;Total ram usage:        0 bytes
  7180 ;; Hardware stack levels used:    1
  7181 ;; This function calls:
  7182 ;;		Nothing
  7183 ;; This function is called by:
  7184 ;;		_I2C_DO_TX_EMPTY
  7185 ;; This function uses a non-reentrant model
  7186 ;;
  7187                           
  7188                           
  7189                           ;psect for function _I2C_MasterSetIrq
  7190  0337                     _I2C_MasterSetIrq:	
  7191                           
  7192                           ;i2c_master.c: 649: PIR1bits.SSP1IF = 1;
  7193                           
  7194                           ;incstack = 0
  7195                           ; Regs used in _I2C_MasterSetIrq: []
  7196  0337  0020               	movlb	0	; select bank0
  7197  0338  1590               	bsf	16,3	;volatile
  7198  0339  0008               	return
  7199  033A                     __end_of_I2C_MasterSetIrq:	
  7200                           
  7201                           	psect	text37
  7202  02F4                     __ptext37:	
  7203 ;; *************** function _I2C_MasterIsNack *****************
  7204 ;; Defined at:
  7205 ;;		line 599 in file "mcc_generated_files/i2c_master.c"
  7206 ;; Parameters:    Size  Location     Type
  7207 ;;		None
  7208 ;; Auto vars:     Size  Location     Type
  7209 ;;		None
  7210 ;; Return value:  Size  Location     Type
  7211 ;;                  1    wreg      unsigned char 
  7212 ;; Registers used:
  7213 ;;		wreg, status,2, status,0
  7214 ;; Tracked objects:
  7215 ;;		On entry : 0/0
  7216 ;;		On exit  : 0/0
  7217 ;;		Unchanged: 0/0
  7218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7223 ;;Total ram usage:        0 bytes
  7224 ;; Hardware stack levels used:    1
  7225 ;; This function calls:
  7226 ;;		Nothing
  7227 ;; This function is called by:
  7228 ;;		_I2C_MasterFsm
  7229 ;;		_I2C_DO_TX
  7230 ;; This function uses a non-reentrant model
  7231 ;;
  7232                           
  7233                           
  7234                           ;psect for function _I2C_MasterIsNack
  7235  02F4                     _I2C_MasterIsNack:	
  7236                           
  7237                           ;i2c_master.c: 601: return SSP1CON2bits.ACKSTAT;
  7238                           
  7239                           ;incstack = 0
  7240                           ; Regs used in _I2C_MasterIsNack: [wreg+status,2+status,0]
  7241  02F4  0024               	movlb	4	; select bank4
  7242  02F5  0E16               	swapf	22,w	;volatile
  7243  02F6  0C89               	rrf	9,f
  7244  02F7  0C89               	rrf	9,f
  7245  02F8  3901               	andlw	1
  7246  02F9  0008               	return
  7247  02FA                     __end_of_I2C_MasterIsNack:	
  7248                           
  7249                           	psect	text38
  7250  0304                     __ptext38:	
  7251 ;; *************** function _I2C_MasterSendTxData *****************
  7252 ;; Defined at:
  7253 ;;		line 569 in file "mcc_generated_files/i2c_master.c"
  7254 ;; Parameters:    Size  Location     Type
  7255 ;;  data            1    wreg     unsigned char 
  7256 ;; Auto vars:     Size  Location     Type
  7257 ;;  data            1    0[COMMON] unsigned char 
  7258 ;; Return value:  Size  Location     Type
  7259 ;;                  1    wreg      void 
  7260 ;; Registers used:
  7261 ;;		wreg
  7262 ;; Tracked objects:
  7263 ;;		On entry : 0/0
  7264 ;;		On exit  : 0/0
  7265 ;;		Unchanged: 0/0
  7266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7268 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7270 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7271 ;;Total ram usage:        1 bytes
  7272 ;; Hardware stack levels used:    1
  7273 ;; This function calls:
  7274 ;;		Nothing
  7275 ;; This function is called by:
  7276 ;;		_I2C_DO_SEND_ADR_READ
  7277 ;;		_I2C_DO_SEND_ADR_WRITE
  7278 ;;		_I2C_DO_TX
  7279 ;; This function uses a non-reentrant model
  7280 ;;
  7281                           
  7282                           
  7283                           ;psect for function _I2C_MasterSendTxData
  7284  0304                     _I2C_MasterSendTxData:	
  7285                           
  7286                           ;incstack = 0
  7287                           ; Regs used in _I2C_MasterSendTxData: [wreg]
  7288                           ;I2C_MasterSendTxData@data stored from wreg
  7289  0304  00F0               	movwf	I2C_MasterSendTxData@data
  7290                           
  7291                           ;i2c_master.c: 571: SSP1BUF = data;
  7292  0305  0870               	movf	I2C_MasterSendTxData@data,w
  7293  0306  0024               	movlb	4	; select bank4
  7294  0307  0091               	movwf	17	;volatile
  7295  0308  0008               	return
  7296  0309                     __end_of_I2C_MasterSendTxData:	
  7297                           
  7298                           	psect	text39
  7299  0329                     __ptext39:	
  7300 ;; *************** function _I2C_MasterSendAck *****************
  7301 ;; Defined at:
  7302 ;;		line 604 in file "mcc_generated_files/i2c_master.c"
  7303 ;; Parameters:    Size  Location     Type
  7304 ;;		None
  7305 ;; Auto vars:     Size  Location     Type
  7306 ;;		None
  7307 ;; Return value:  Size  Location     Type
  7308 ;;                  1    wreg      void 
  7309 ;; Registers used:
  7310 ;;		None
  7311 ;; Tracked objects:
  7312 ;;		On entry : 0/0
  7313 ;;		On exit  : 0/0
  7314 ;;		Unchanged: 0/0
  7315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7320 ;;Total ram usage:        0 bytes
  7321 ;; Hardware stack levels used:    1
  7322 ;; This function calls:
  7323 ;;		Nothing
  7324 ;; This function is called by:
  7325 ;;		_I2C_DO_RX
  7326 ;;		_I2C_DO_RX_ACK
  7327 ;; This function uses a non-reentrant model
  7328 ;;
  7329                           
  7330                           
  7331                           ;psect for function _I2C_MasterSendAck
  7332  0329                     _I2C_MasterSendAck:	
  7333                           
  7334                           ;i2c_master.c: 606: SSP1CON2bits.ACKDT = 0;
  7335                           
  7336                           ;incstack = 0
  7337                           ; Regs used in _I2C_MasterSendAck: []
  7338  0329  0024               	movlb	4	; select bank4
  7339  032A  1296               	bcf	22,5	;volatile
  7340                           
  7341                           ;i2c_master.c: 607: SSP1CON2bits.ACKEN = 1;
  7342  032B  1616               	bsf	22,4	;volatile
  7343  032C  0008               	return
  7344  032D                     __end_of_I2C_MasterSendAck:	
  7345                           
  7346                           	psect	text40
  7347  033A                     __ptext40:	
  7348 ;; *************** function _I2C_MasterGetRxData *****************
  7349 ;; Defined at:
  7350 ;;		line 564 in file "mcc_generated_files/i2c_master.c"
  7351 ;; Parameters:    Size  Location     Type
  7352 ;;		None
  7353 ;; Auto vars:     Size  Location     Type
  7354 ;;		None
  7355 ;; Return value:  Size  Location     Type
  7356 ;;                  1    wreg      unsigned char 
  7357 ;; Registers used:
  7358 ;;		wreg
  7359 ;; Tracked objects:
  7360 ;;		On entry : 0/0
  7361 ;;		On exit  : 0/0
  7362 ;;		Unchanged: 0/0
  7363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7368 ;;Total ram usage:        0 bytes
  7369 ;; Hardware stack levels used:    1
  7370 ;; This function calls:
  7371 ;;		Nothing
  7372 ;; This function is called by:
  7373 ;;		_I2C_DO_RX
  7374 ;; This function uses a non-reentrant model
  7375 ;;
  7376                           
  7377                           
  7378                           ;psect for function _I2C_MasterGetRxData
  7379  033A                     _I2C_MasterGetRxData:	
  7380                           
  7381                           ;i2c_master.c: 566: return SSP1BUF;
  7382                           
  7383                           ;incstack = 0
  7384                           ; Regs used in _I2C_MasterGetRxData: [wreg]
  7385  033A  0024               	movlb	4	; select bank4
  7386  033B  0811               	movf	17,w	;volatile
  7387  033C  0008               	return
  7388  033D                     __end_of_I2C_MasterGetRxData:	
  7389                           
  7390                           	psect	text41
  7391  032D                     __ptext41:	
  7392 ;; *************** function _I2C_MasterSendNack *****************
  7393 ;; Defined at:
  7394 ;;		line 610 in file "mcc_generated_files/i2c_master.c"
  7395 ;; Parameters:    Size  Location     Type
  7396 ;;		None
  7397 ;; Auto vars:     Size  Location     Type
  7398 ;;		None
  7399 ;; Return value:  Size  Location     Type
  7400 ;;                  1    wreg      void 
  7401 ;; Registers used:
  7402 ;;		None
  7403 ;; Tracked objects:
  7404 ;;		On entry : 0/0
  7405 ;;		On exit  : 0/0
  7406 ;;		Unchanged: 0/0
  7407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7412 ;;Total ram usage:        0 bytes
  7413 ;; Hardware stack levels used:    1
  7414 ;; This function calls:
  7415 ;;		Nothing
  7416 ;; This function is called by:
  7417 ;;		_I2C_DO_RX_NACK_STOP
  7418 ;;		_I2C_DO_RX_NACK_RESTART
  7419 ;; This function uses a non-reentrant model
  7420 ;;
  7421                           
  7422                           
  7423                           ;psect for function _I2C_MasterSendNack
  7424  032D                     _I2C_MasterSendNack:	
  7425                           
  7426                           ;i2c_master.c: 612: SSP1CON2bits.ACKDT = 1;
  7427                           
  7428                           ;incstack = 0
  7429                           ; Regs used in _I2C_MasterSendNack: []
  7430  032D  0024               	movlb	4	; select bank4
  7431  032E  1696               	bsf	22,5	;volatile
  7432                           
  7433                           ;i2c_master.c: 613: SSP1CON2bits.ACKEN = 1;
  7434  032F  1616               	bsf	22,4	;volatile
  7435  0330  0008               	return
  7436  0331                     __end_of_I2C_MasterSendNack:	
  7437                           
  7438                           	psect	text42
  7439  033D                     __ptext42:	
  7440 ;; *************** function _I2C_MasterStartRx *****************
  7441 ;; Defined at:
  7442 ;;		line 584 in file "mcc_generated_files/i2c_master.c"
  7443 ;; Parameters:    Size  Location     Type
  7444 ;;		None
  7445 ;; Auto vars:     Size  Location     Type
  7446 ;;		None
  7447 ;; Return value:  Size  Location     Type
  7448 ;;                  1    wreg      void 
  7449 ;; Registers used:
  7450 ;;		None
  7451 ;; Tracked objects:
  7452 ;;		On entry : 0/0
  7453 ;;		On exit  : 0/0
  7454 ;;		Unchanged: 0/0
  7455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7460 ;;Total ram usage:        0 bytes
  7461 ;; Hardware stack levels used:    1
  7462 ;; This function calls:
  7463 ;;		Nothing
  7464 ;; This function is called by:
  7465 ;;		_I2C_DO_RCEN
  7466 ;; This function uses a non-reentrant model
  7467 ;;
  7468                           
  7469                           
  7470                           ;psect for function _I2C_MasterStartRx
  7471  033D                     _I2C_MasterStartRx:	
  7472                           
  7473                           ;i2c_master.c: 586: SSP1CON2bits.RCEN = 1;
  7474                           
  7475                           ;incstack = 0
  7476                           ; Regs used in _I2C_MasterStartRx: []
  7477  033D  0024               	movlb	4	; select bank4
  7478  033E  1596               	bsf	22,3	;volatile
  7479  033F  0008               	return
  7480  0340                     __end_of_I2C_MasterStartRx:	
  7481                           
  7482                           	psect	text43
  7483  01DC                     __ptext43:	
  7484 ;; *************** function _rdBlkRegCompleteHandler *****************
  7485 ;; Defined at:
  7486 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
  7487 ;; Parameters:    Size  Location     Type
  7488 ;;  ptr             1    1[BANK0 ] PTR void 
  7489 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7490 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  7491 ;; Auto vars:     Size  Location     Type
  7492 ;;		None
  7493 ;; Return value:  Size  Location     Type
  7494 ;;                  1    wreg      enum E97
  7495 ;; Registers used:
  7496 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7497 ;; Tracked objects:
  7498 ;;		On entry : 0/0
  7499 ;;		On exit  : 0/0
  7500 ;;		Unchanged: 0/0
  7501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7502 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7505 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7506 ;;Total ram usage:        1 bytes
  7507 ;; Hardware stack levels used:    1
  7508 ;; Hardware stack levels required when called:    2
  7509 ;; This function calls:
  7510 ;;		_I2C_SetBuffer
  7511 ;;		_I2C_SetDataCompleteCallback
  7512 ;; This function is called by:
  7513 ;;		_I2C_ReadDataBlock
  7514 ;;		_I2C_DO_TX
  7515 ;;		_I2C_DO_RX
  7516 ;;		_I2C_DO_TX_EMPTY
  7517 ;;		_I2C_DO_ADDRESS_NACK
  7518 ;;		_I2C_DO_RX_EMPTY
  7519 ;; This function uses a non-reentrant model
  7520 ;;
  7521                           
  7522                           
  7523                           ;psect for function _rdBlkRegCompleteHandler
  7524  01DC                     _rdBlkRegCompleteHandler:	
  7525                           
  7526                           ;i2c_master_example.c: 172: I2C_SetBuffer(((i2c_buffer_t *)ptr)->data,((i2c_buffer_t*)pt
      +                          r)->len);
  7527                           
  7528                           ;incstack = 0
  7529                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  7530  01DC  0020               	movlb	0	; select bank0
  7531  01DD  0847               	movf	rdBlkRegCompleteHandler@ptr,w
  7532  01DE  0086               	movwf	6
  7533  01DF  0187               	clrf	7
  7534  01E0  3F40               	moviw [0]fsr1
  7535  01E1  00F0               	movwf	I2C_SetBuffer@bufferSize
  7536  01E2  3F41               	moviw [1]fsr1
  7537  01E3  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  7538  01E4  0847               	movf	rdBlkRegCompleteHandler@ptr,w
  7539  01E5  3E02               	addlw	2
  7540  01E6  0086               	movwf	6
  7541  01E7  0187               	clrf	7
  7542  01E8  0801               	movf	1,w
  7543  01E9  3182  2274  3181   	fcall	_I2C_SetBuffer
  7544                           
  7545                           ;i2c_master_example.c: 173: I2C_SetDataCompleteCallback((0),(0));
  7546  01EC  3000               	movlw	0
  7547  01ED  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  7548  01EE  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  7549  01EF  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  7550  01F0  3182  2282         	fcall	_I2C_SetDataCompleteCallback
  7551                           
  7552                           ;i2c_master_example.c: 174: return I2C_RESTART_READ;
  7553  01F2  3002               	movlw	2
  7554  01F3  0008               	return
  7555  01F4                     __end_of_rdBlkRegCompleteHandler:	
  7556                           
  7557                           	psect	text44
  7558  0230                     __ptext44:	
  7559 ;; *************** function _wr1RegCompleteHandler *****************
  7560 ;; Defined at:
  7561 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
  7562 ;; Parameters:    Size  Location     Type
  7563 ;;  ptr             1    1[BANK0 ] PTR void 
  7564 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7565 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  7566 ;; Auto vars:     Size  Location     Type
  7567 ;;		None
  7568 ;; Return value:  Size  Location     Type
  7569 ;;                  1    wreg      enum E97
  7570 ;; Registers used:
  7571 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7572 ;; Tracked objects:
  7573 ;;		On entry : 0/0
  7574 ;;		On exit  : 0/0
  7575 ;;		Unchanged: 0/0
  7576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7577 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7580 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7581 ;;Total ram usage:        1 bytes
  7582 ;; Hardware stack levels used:    1
  7583 ;; Hardware stack levels required when called:    2
  7584 ;; This function calls:
  7585 ;;		_I2C_SetBuffer
  7586 ;;		_I2C_SetDataCompleteCallback
  7587 ;; This function is called by:
  7588 ;;		_I2C_Write1ByteRegister
  7589 ;;		_I2C_DO_TX
  7590 ;;		_I2C_DO_RX
  7591 ;;		_I2C_DO_TX_EMPTY
  7592 ;;		_I2C_DO_ADDRESS_NACK
  7593 ;;		_I2C_DO_RX_EMPTY
  7594 ;; This function uses a non-reentrant model
  7595 ;;
  7596                           
  7597                           
  7598                           ;psect for function _wr1RegCompleteHandler
  7599  0230                     _wr1RegCompleteHandler:	
  7600                           
  7601                           ;i2c_master_example.c: 158: I2C_SetBuffer(ptr,1);
  7602                           
  7603                           ;incstack = 0
  7604                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7605  0230  3001               	movlw	1
  7606  0231  00F0               	movwf	I2C_SetBuffer@bufferSize
  7607  0232  3000               	movlw	0
  7608  0233  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  7609  0234  0020               	movlb	0	; select bank0
  7610  0235  0847               	movf	wr1RegCompleteHandler@ptr,w
  7611  0236  3182  2274  3182   	fcall	_I2C_SetBuffer
  7612                           
  7613                           ;i2c_master_example.c: 159: I2C_SetDataCompleteCallback((0),(0));
  7614  0239  3000               	movlw	0
  7615  023A  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  7616  023B  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  7617  023C  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  7618  023D  3182  2282         	fcall	_I2C_SetDataCompleteCallback
  7619                           
  7620                           ;i2c_master_example.c: 160: return I2C_CONTINUE;
  7621  023F  3004               	movlw	4
  7622  0240  0008               	return
  7623  0241                     __end_of_wr1RegCompleteHandler:	
  7624                           
  7625                           	psect	text45
  7626  0241                     __ptext45:	
  7627 ;; *************** function _rd2RegCompleteHandler *****************
  7628 ;; Defined at:
  7629 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
  7630 ;; Parameters:    Size  Location     Type
  7631 ;;  ptr             1    1[BANK0 ] PTR void 
  7632 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7633 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  7634 ;; Auto vars:     Size  Location     Type
  7635 ;;		None
  7636 ;; Return value:  Size  Location     Type
  7637 ;;                  1    wreg      enum E97
  7638 ;; Registers used:
  7639 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7640 ;; Tracked objects:
  7641 ;;		On entry : 0/0
  7642 ;;		On exit  : 0/0
  7643 ;;		Unchanged: 0/0
  7644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7645 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7648 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7649 ;;Total ram usage:        1 bytes
  7650 ;; Hardware stack levels used:    1
  7651 ;; Hardware stack levels required when called:    2
  7652 ;; This function calls:
  7653 ;;		_I2C_SetBuffer
  7654 ;;		_I2C_SetDataCompleteCallback
  7655 ;; This function is called by:
  7656 ;;		_I2C_Read2ByteRegister
  7657 ;;		_I2C_DO_TX
  7658 ;;		_I2C_DO_RX
  7659 ;;		_I2C_DO_TX_EMPTY
  7660 ;;		_I2C_DO_ADDRESS_NACK
  7661 ;;		_I2C_DO_RX_EMPTY
  7662 ;; This function uses a non-reentrant model
  7663 ;;
  7664                           
  7665                           
  7666                           ;psect for function _rd2RegCompleteHandler
  7667  0241                     _rd2RegCompleteHandler:	
  7668                           
  7669                           ;i2c_master_example.c: 151: I2C_SetBuffer(ptr,2);
  7670                           
  7671                           ;incstack = 0
  7672                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7673  0241  3002               	movlw	2
  7674  0242  00F0               	movwf	I2C_SetBuffer@bufferSize
  7675  0243  3000               	movlw	0
  7676  0244  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  7677  0245  0020               	movlb	0	; select bank0
  7678  0246  0847               	movf	rd2RegCompleteHandler@ptr,w
  7679  0247  3182  2274  3182   	fcall	_I2C_SetBuffer
  7680                           
  7681                           ;i2c_master_example.c: 152: I2C_SetDataCompleteCallback((0),(0));
  7682  024A  3000               	movlw	0
  7683  024B  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  7684  024C  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  7685  024D  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  7686  024E  3182  2282         	fcall	_I2C_SetDataCompleteCallback
  7687                           
  7688                           ;i2c_master_example.c: 153: return I2C_RESTART_READ;
  7689  0250  3002               	movlw	2
  7690  0251  0008               	return
  7691  0252                     __end_of_rd2RegCompleteHandler:	
  7692                           
  7693                           	psect	text46
  7694  0252                     __ptext46:	
  7695 ;; *************** function _rd1RegCompleteHandler *****************
  7696 ;; Defined at:
  7697 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
  7698 ;; Parameters:    Size  Location     Type
  7699 ;;  ptr             1    1[BANK0 ] PTR void 
  7700 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7701 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  7702 ;; Auto vars:     Size  Location     Type
  7703 ;;		None
  7704 ;; Return value:  Size  Location     Type
  7705 ;;                  1    wreg      enum E97
  7706 ;; Registers used:
  7707 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7708 ;; Tracked objects:
  7709 ;;		On entry : 0/0
  7710 ;;		On exit  : 0/0
  7711 ;;		Unchanged: 0/0
  7712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7713 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7716 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7717 ;;Total ram usage:        1 bytes
  7718 ;; Hardware stack levels used:    1
  7719 ;; Hardware stack levels required when called:    2
  7720 ;; This function calls:
  7721 ;;		_I2C_SetBuffer
  7722 ;;		_I2C_SetDataCompleteCallback
  7723 ;; This function is called by:
  7724 ;;		_I2C_Read1ByteRegister
  7725 ;;		_I2C_DO_TX
  7726 ;;		_I2C_DO_RX
  7727 ;;		_I2C_DO_TX_EMPTY
  7728 ;;		_I2C_DO_ADDRESS_NACK
  7729 ;;		_I2C_DO_RX_EMPTY
  7730 ;; This function uses a non-reentrant model
  7731 ;;
  7732                           
  7733                           
  7734                           ;psect for function _rd1RegCompleteHandler
  7735  0252                     _rd1RegCompleteHandler:	
  7736                           
  7737                           ;i2c_master_example.c: 144: I2C_SetBuffer(ptr,1);
  7738                           
  7739                           ;incstack = 0
  7740                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7741  0252  3001               	movlw	1
  7742  0253  00F0               	movwf	I2C_SetBuffer@bufferSize
  7743  0254  3000               	movlw	0
  7744  0255  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  7745  0256  0020               	movlb	0	; select bank0
  7746  0257  0847               	movf	rd1RegCompleteHandler@ptr,w
  7747  0258  3182  2274  3182   	fcall	_I2C_SetBuffer
  7748                           
  7749                           ;i2c_master_example.c: 145: I2C_SetDataCompleteCallback((0),(0));
  7750  025B  3000               	movlw	0
  7751  025C  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  7752  025D  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  7753  025E  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  7754  025F  3182  2282         	fcall	_I2C_SetDataCompleteCallback
  7755                           
  7756                           ;i2c_master_example.c: 146: return I2C_RESTART_READ;
  7757  0261  3002               	movlw	2
  7758  0262  0008               	return
  7759  0263                     __end_of_rd1RegCompleteHandler:	
  7760                           
  7761                           	psect	text47
  7762  0346                     __ptext47:	
  7763 ;; *************** function _I2C_CallbackReturnReset *****************
  7764 ;; Defined at:
  7765 ;;		line 526 in file "mcc_generated_files/i2c_master.c"
  7766 ;; Parameters:    Size  Location     Type
  7767 ;;  funPtr          1    1[BANK0 ] PTR void 
  7768 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7769 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  7770 ;; Auto vars:     Size  Location     Type
  7771 ;;		None
  7772 ;; Return value:  Size  Location     Type
  7773 ;;                  1    wreg      enum E97
  7774 ;; Registers used:
  7775 ;;		wreg
  7776 ;; Tracked objects:
  7777 ;;		On entry : 0/0
  7778 ;;		On exit  : 0/0
  7779 ;;		Unchanged: 0/0
  7780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7781 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7784 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7785 ;;Total ram usage:        1 bytes
  7786 ;; Hardware stack levels used:    1
  7787 ;; This function calls:
  7788 ;;		Nothing
  7789 ;; This function is called by:
  7790 ;;		_I2C_Open
  7791 ;;		_I2C_DO_TX
  7792 ;;		_I2C_DO_RX
  7793 ;;		_I2C_DO_TX_EMPTY
  7794 ;;		_I2C_DO_ADDRESS_NACK
  7795 ;;		_I2C_DO_RX_EMPTY
  7796 ;; This function uses a non-reentrant model
  7797 ;;
  7798                           
  7799                           
  7800                           ;psect for function _I2C_CallbackReturnReset
  7801  0346                     _I2C_CallbackReturnReset:	
  7802                           
  7803                           ;i2c_master.c: 528: return I2C_RESET_LINK;
  7804                           
  7805                           ;incstack = 0
  7806                           ; Regs used in _I2C_CallbackReturnReset: [wreg]
  7807  0346  3005               	movlw	5
  7808  0347  0008               	return
  7809  0348                     __end_of_I2C_CallbackReturnReset:	
  7810                           
  7811                           	psect	text48
  7812  0348                     __ptext48:	
  7813 ;; *************** function _I2C_CallbackReturnStop *****************
  7814 ;; Defined at:
  7815 ;;		line 521 in file "mcc_generated_files/i2c_master.c"
  7816 ;; Parameters:    Size  Location     Type
  7817 ;;  funPtr          1    1[BANK0 ] PTR void 
  7818 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7819 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  7820 ;; Auto vars:     Size  Location     Type
  7821 ;;		None
  7822 ;; Return value:  Size  Location     Type
  7823 ;;                  1    wreg      enum E97
  7824 ;; Registers used:
  7825 ;;		wreg
  7826 ;; Tracked objects:
  7827 ;;		On entry : 0/0
  7828 ;;		On exit  : 0/0
  7829 ;;		Unchanged: 0/0
  7830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7831 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7834 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7835 ;;Total ram usage:        1 bytes
  7836 ;; Hardware stack levels used:    1
  7837 ;; This function calls:
  7838 ;;		Nothing
  7839 ;; This function is called by:
  7840 ;;		_I2C_SetCallback
  7841 ;;		_I2C_Open
  7842 ;;		_I2C_DO_TX
  7843 ;;		_I2C_DO_RX
  7844 ;;		_I2C_DO_TX_EMPTY
  7845 ;;		_I2C_DO_ADDRESS_NACK
  7846 ;;		_I2C_DO_RX_EMPTY
  7847 ;; This function uses a non-reentrant model
  7848 ;;
  7849                           
  7850                           
  7851                           ;psect for function _I2C_CallbackReturnStop
  7852  0348                     _I2C_CallbackReturnStop:	
  7853                           
  7854                           ;i2c_master.c: 523: return I2C_STOP;
  7855                           
  7856                           ;incstack = 0
  7857                           ; Regs used in _I2C_CallbackReturnStop: [wreg]
  7858  0348  3001               	movlw	1
  7859  0349  0008               	return
  7860  034A                     __end_of_I2C_CallbackReturnStop:	
  7861                           
  7862                           	psect	text49
  7863  0263                     __ptext49:	
  7864 ;; *************** function _wr2RegCompleteHandler *****************
  7865 ;; Defined at:
  7866 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
  7867 ;; Parameters:    Size  Location     Type
  7868 ;;  ptr             1    1[BANK0 ] PTR void 
  7869 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7870 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  7871 ;; Auto vars:     Size  Location     Type
  7872 ;;		None
  7873 ;; Return value:  Size  Location     Type
  7874 ;;                  1    wreg      enum E97
  7875 ;; Registers used:
  7876 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7877 ;; Tracked objects:
  7878 ;;		On entry : 0/0
  7879 ;;		On exit  : 0/0
  7880 ;;		Unchanged: 0/0
  7881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7882 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7885 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7886 ;;Total ram usage:        1 bytes
  7887 ;; Hardware stack levels used:    1
  7888 ;; Hardware stack levels required when called:    2
  7889 ;; This function calls:
  7890 ;;		_I2C_SetBuffer
  7891 ;;		_I2C_SetDataCompleteCallback
  7892 ;; This function is called by:
  7893 ;;		_I2C_Write2ByteRegister
  7894 ;;		_I2C_DO_TX
  7895 ;;		_I2C_DO_RX
  7896 ;;		_I2C_DO_TX_EMPTY
  7897 ;;		_I2C_DO_ADDRESS_NACK
  7898 ;;		_I2C_DO_RX_EMPTY
  7899 ;; This function uses a non-reentrant model
  7900 ;;
  7901                           
  7902                           
  7903                           ;psect for function _wr2RegCompleteHandler
  7904  0263                     _wr2RegCompleteHandler:	
  7905                           
  7906                           ;i2c_master_example.c: 165: I2C_SetBuffer(ptr,2);
  7907                           
  7908                           ;incstack = 0
  7909                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7910  0263  3002               	movlw	2
  7911  0264  00F0               	movwf	I2C_SetBuffer@bufferSize
  7912  0265  3000               	movlw	0
  7913  0266  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  7914  0267  0020               	movlb	0	; select bank0
  7915  0268  0847               	movf	wr2RegCompleteHandler@ptr,w
  7916  0269  3182  2274  3182   	fcall	_I2C_SetBuffer
  7917                           
  7918                           ;i2c_master_example.c: 166: I2C_SetDataCompleteCallback((0),(0));
  7919  026C  3000               	movlw	0
  7920  026D  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  7921  026E  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  7922  026F  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  7923  0270  3182  2282         	fcall	_I2C_SetDataCompleteCallback
  7924                           
  7925                           ;i2c_master_example.c: 167: return I2C_CONTINUE;
  7926  0272  3004               	movlw	4
  7927  0273  0008               	return
  7928  0274                     __end_of_wr2RegCompleteHandler:	
  7929                           
  7930                           	psect	text50
  7931  0282                     __ptext50:	
  7932 ;; *************** function _I2C_SetDataCompleteCallback *****************
  7933 ;; Defined at:
  7934 ;;		line 274 in file "mcc_generated_files/i2c_master.c"
  7935 ;; Parameters:    Size  Location     Type
  7936 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
  7937 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), 
  7938 ;;		 -> rd1RegCompleteHandler(1), Absolute function(1), 
  7939 ;;  ptr             1    7[COMMON] PTR void 
  7940 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7941 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  7942 ;; Auto vars:     Size  Location     Type
  7943 ;;		None
  7944 ;; Return value:  Size  Location     Type
  7945 ;;                  1    wreg      void 
  7946 ;; Registers used:
  7947 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7948 ;; Tracked objects:
  7949 ;;		On entry : 0/0
  7950 ;;		On exit  : 0/0
  7951 ;;		Unchanged: 0/0
  7952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7953 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7955 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7956 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7957 ;;Total ram usage:        4 bytes
  7958 ;; Hardware stack levels used:    1
  7959 ;; Hardware stack levels required when called:    1
  7960 ;; This function calls:
  7961 ;;		_I2C_SetCallback
  7962 ;; This function is called by:
  7963 ;;		_rd1RegCompleteHandler
  7964 ;;		_rd2RegCompleteHandler
  7965 ;;		_wr1RegCompleteHandler
  7966 ;;		_wr2RegCompleteHandler
  7967 ;;		_rdBlkRegCompleteHandler
  7968 ;;		_I2C_Read1ByteRegister
  7969 ;;		_I2C_Read2ByteRegister
  7970 ;;		_I2C_Write1ByteRegister
  7971 ;;		_I2C_Write2ByteRegister
  7972 ;;		_I2C_ReadDataBlock
  7973 ;; This function uses a non-reentrant model
  7974 ;;
  7975                           
  7976                           
  7977                           ;psect for function _I2C_SetDataCompleteCallback
  7978  0282                     _I2C_SetDataCompleteCallback:	
  7979                           
  7980                           ;i2c_master.c: 276: I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  7981                           
  7982                           ;incstack = 0
  7983                           ; Regs used in _I2C_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  7984  0282  0876               	movf	I2C_SetDataCompleteCallback@cb+1,w
  7985  0283  00F1               	movwf	I2C_SetCallback@cb+1
  7986  0284  0875               	movf	I2C_SetDataCompleteCallback@cb,w
  7987  0285  00F0               	movwf	I2C_SetCallback@cb
  7988  0286  0877               	movf	I2C_SetDataCompleteCallback@ptr,w
  7989  0287  0020               	movlb	0	; select bank0
  7990  0288  00C6               	movwf	??_I2C_SetDataCompleteCallback
  7991  0289  0846               	movf	??_I2C_SetDataCompleteCallback,w
  7992  028A  00F2               	movwf	I2C_SetCallback@ptr
  7993  028B  3000               	movlw	0
  7994  028C  3181  2175         	fcall	_I2C_SetCallback
  7995  028E  0008               	return
  7996  028F                     __end_of_I2C_SetDataCompleteCallback:	
  7997                           
  7998                           	psect	text51
  7999  0175                     __ptext51:	
  8000 ;; *************** function _I2C_SetCallback *****************
  8001 ;; Defined at:
  8002 ;;		line 304 in file "mcc_generated_files/i2c_master.c"
  8003 ;; Parameters:    Size  Location     Type
  8004 ;;  idx             1    wreg     enum E12128
  8005 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
  8006 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), 
  8007 ;;		 -> rd1RegCompleteHandler(1), Absolute function(1), 
  8008 ;;  ptr             1    2[COMMON] PTR void 
  8009 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  8010 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  8011 ;; Auto vars:     Size  Location     Type
  8012 ;;  idx             1    4[COMMON] enum E12128
  8013 ;; Return value:  Size  Location     Type
  8014 ;;                  1    wreg      void 
  8015 ;; Registers used:
  8016 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8017 ;; Tracked objects:
  8018 ;;		On entry : 0/0
  8019 ;;		On exit  : 0/0
  8020 ;;		Unchanged: 0/0
  8021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8022 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8023 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8024 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8025 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8026 ;;Total ram usage:        5 bytes
  8027 ;; Hardware stack levels used:    1
  8028 ;; This function calls:
  8029 ;;		Nothing
  8030 ;; This function is called by:
  8031 ;;		_I2C_SetDataCompleteCallback
  8032 ;;		_I2C_SetWriteCollisionCallback
  8033 ;;		_I2C_SetAddressNackCallback
  8034 ;;		_I2C_SetDataNackCallback
  8035 ;;		_I2C_SetTimeoutCallback
  8036 ;; This function uses a non-reentrant model
  8037 ;;
  8038                           
  8039                           
  8040                           ;psect for function _I2C_SetCallback
  8041  0175                     _I2C_SetCallback:	
  8042                           
  8043                           ;incstack = 0
  8044                           ; Regs used in _I2C_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
  8045                           ;I2C_SetCallback@idx stored from wreg
  8046  0175  00F4               	movwf	I2C_SetCallback@idx
  8047                           
  8048                           ;i2c_master.c: 306: if(cb)
  8049  0176  0870               	movf	I2C_SetCallback@cb,w
  8050  0177  0471               	iorwf	I2C_SetCallback@cb+1,w
  8051  0178  1903               	btfsc	3,2
  8052  0179  298B               	goto	i1l2438
  8053                           
  8054                           ;i2c_master.c: 307: {
  8055                           ;i2c_master.c: 308: I2C_Status.callbackTable[idx] = cb;
  8056  017A  3574               	lslf	I2C_SetCallback@idx,w
  8057  017B  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  8058  017C  0086               	movwf	6
  8059  017D  0187               	clrf	7
  8060  017E  0870               	movf	I2C_SetCallback@cb,w
  8061  017F  3FC0               	movwi [0]fsr1
  8062  0180  0871               	movf	I2C_SetCallback@cb+1,w
  8063  0181  3FC1               	movwi [1]fsr1
  8064                           
  8065                           ;i2c_master.c: 309: I2C_Status.callbackPayload[idx] = ptr;
  8066  0182  0872               	movf	I2C_SetCallback@ptr,w
  8067  0183  00F3               	movwf	??_I2C_SetCallback
  8068  0184  0874               	movf	I2C_SetCallback@idx,w
  8069  0185  3E2C               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  8070  0186  0086               	movwf	6
  8071  0187  0187               	clrf	7
  8072  0188  0873               	movf	??_I2C_SetCallback,w
  8073  0189  0081               	movwf	1
  8074                           
  8075                           ;i2c_master.c: 310: }
  8076  018A  0008               	return
  8077  018B                     i1l2438:	
  8078                           
  8079                           ;i2c_master.c: 311: else
  8080                           ;i2c_master.c: 312: {
  8081                           ;i2c_master.c: 313: I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  8082  018B  3574               	lslf	I2C_SetCallback@idx,w
  8083  018C  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  8084  018D  0086               	movwf	6
  8085  018E  0187               	clrf	7
  8086  018F  3048               	movlw	low _I2C_CallbackReturnStop
  8087  0190  3FC0               	movwi [0]fsr1
  8088  0191  3003               	movlw	high _I2C_CallbackReturnStop
  8089  0192  3FC1               	movwi [1]fsr1
  8090                           
  8091                           ;i2c_master.c: 314: I2C_Status.callbackPayload[idx] = (0);
  8092  0193  0874               	movf	I2C_SetCallback@idx,w
  8093  0194  3E2C               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  8094  0195  0086               	movwf	6
  8095  0196  0187               	clrf	7
  8096  0197  0181               	clrf	1
  8097  0198  0008               	return
  8098  0199                     __end_of_I2C_SetCallback:	
  8099                           
  8100                           	psect	text52
  8101  0274                     __ptext52:	
  8102 ;; *************** function _I2C_SetBuffer *****************
  8103 ;; Defined at:
  8104 ;;		line 264 in file "mcc_generated_files/i2c_master.c"
  8105 ;; Parameters:    Size  Location     Type
  8106 ;;  buffer          1    wreg     PTR void 
  8107 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegiste
      +r@data(2), 
  8108 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegist
      +er@returnValue(2), 
  8109 ;;		 -> I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  8110 ;;  bufferSize      2    0[COMMON] unsigned int 
  8111 ;; Auto vars:     Size  Location     Type
  8112 ;;  buffer          1    3[COMMON] PTR void 
  8113 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegiste
      +r@data(2), 
  8114 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegist
      +er@returnValue(2), 
  8115 ;;		 -> I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  8116 ;; Return value:  Size  Location     Type
  8117 ;;                  1    wreg      void 
  8118 ;; Registers used:
  8119 ;;		wreg
  8120 ;; Tracked objects:
  8121 ;;		On entry : 0/0
  8122 ;;		On exit  : 0/0
  8123 ;;		Unchanged: 0/0
  8124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8125 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8126 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8127 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8128 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8129 ;;Total ram usage:        4 bytes
  8130 ;; Hardware stack levels used:    1
  8131 ;; This function calls:
  8132 ;;		Nothing
  8133 ;; This function is called by:
  8134 ;;		_rd1RegCompleteHandler
  8135 ;;		_rd2RegCompleteHandler
  8136 ;;		_wr1RegCompleteHandler
  8137 ;;		_wr2RegCompleteHandler
  8138 ;;		_rdBlkRegCompleteHandler
  8139 ;;		_I2C_Read1ByteRegister
  8140 ;;		_I2C_Read2ByteRegister
  8141 ;;		_I2C_Write1ByteRegister
  8142 ;;		_I2C_Write2ByteRegister
  8143 ;;		_I2C_WriteNBytes
  8144 ;;		_I2C_ReadNBytes
  8145 ;;		_I2C_ReadDataBlock
  8146 ;; This function uses a non-reentrant model
  8147 ;;
  8148                           
  8149                           
  8150                           ;psect for function _I2C_SetBuffer
  8151  0274                     _I2C_SetBuffer:	
  8152                           
  8153                           ;incstack = 0
  8154                           ; Regs used in _I2C_SetBuffer: [wreg]
  8155                           ;I2C_SetBuffer@buffer stored from wreg
  8156  0274  00F3               	movwf	I2C_SetBuffer@buffer
  8157                           
  8158                           ;i2c_master.c: 266: if(I2C_Status.bufferFree)
  8159  0275  0020               	movlb	0	; select bank0
  8160  0276  1DBC               	btfss	_I2C_Status+28,3
  8161  0277  0008               	return
  8162                           
  8163                           ;i2c_master.c: 267: {
  8164                           ;i2c_master.c: 268: I2C_Status.data_ptr = buffer;
  8165  0278  0873               	movf	I2C_SetBuffer@buffer,w
  8166  0279  00F2               	movwf	??_I2C_SetBuffer
  8167  027A  0872               	movf	??_I2C_SetBuffer,w
  8168  027B  00B7               	movwf	low ((_I2C_Status| 0+23))
  8169                           
  8170                           ;i2c_master.c: 269: I2C_Status.data_length = bufferSize;
  8171  027C  0871               	movf	I2C_SetBuffer@bufferSize+1,w
  8172  027D  00B9               	movwf	_I2C_Status+25
  8173  027E  0870               	movf	I2C_SetBuffer@bufferSize,w
  8174  027F  00B8               	movwf	_I2C_Status+24
  8175                           
  8176                           ;i2c_master.c: 270: I2C_Status.bufferFree = 0;
  8177  0280  11BC               	bcf	_I2C_Status+28,3
  8178  0281  0008               	return
  8179  0282                     __end_of_I2C_SetBuffer:	
  8180                           
  8181                           	psect	text53
  8182  0340                     __ptext53:	
  8183 ;; *************** function _I2C_MasterStop *****************
  8184 ;; Defined at:
  8185 ;;		line 594 in file "mcc_generated_files/i2c_master.c"
  8186 ;; Parameters:    Size  Location     Type
  8187 ;;		None
  8188 ;; Auto vars:     Size  Location     Type
  8189 ;;		None
  8190 ;; Return value:  Size  Location     Type
  8191 ;;                  1    wreg      void 
  8192 ;; Registers used:
  8193 ;;		None
  8194 ;; Tracked objects:
  8195 ;;		On entry : 0/0
  8196 ;;		On exit  : 0/0
  8197 ;;		Unchanged: 0/0
  8198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8203 ;;Total ram usage:        0 bytes
  8204 ;; Hardware stack levels used:    1
  8205 ;; This function calls:
  8206 ;;		Nothing
  8207 ;; This function is called by:
  8208 ;;		_I2C_DO_SEND_STOP
  8209 ;; This function uses a non-reentrant model
  8210 ;;
  8211                           
  8212                           
  8213                           ;psect for function _I2C_MasterStop
  8214  0340                     _I2C_MasterStop:	
  8215                           
  8216                           ;i2c_master.c: 596: SSP1CON2bits.PEN = 1;
  8217                           
  8218                           ;incstack = 0
  8219                           ; Regs used in _I2C_MasterStop: []
  8220  0340  0024               	movlb	4	; select bank4
  8221  0341  1516               	bsf	22,2	;volatile
  8222  0342  0008               	return
  8223  0343                     __end_of_I2C_MasterStop:	
  8224                           
  8225                           	psect	text54
  8226  0343                     __ptext54:	
  8227 ;; *************** function _I2C_MasterEnableRestart *****************
  8228 ;; Defined at:
  8229 ;;		line 574 in file "mcc_generated_files/i2c_master.c"
  8230 ;; Parameters:    Size  Location     Type
  8231 ;;		None
  8232 ;; Auto vars:     Size  Location     Type
  8233 ;;		None
  8234 ;; Return value:  Size  Location     Type
  8235 ;;                  1    wreg      void 
  8236 ;; Registers used:
  8237 ;;		None
  8238 ;; Tracked objects:
  8239 ;;		On entry : 0/0
  8240 ;;		On exit  : 0/0
  8241 ;;		Unchanged: 0/0
  8242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8247 ;;Total ram usage:        0 bytes
  8248 ;; Hardware stack levels used:    1
  8249 ;; This function calls:
  8250 ;;		Nothing
  8251 ;; This function is called by:
  8252 ;;		_I2C_DO_SEND_RESTART_READ
  8253 ;;		_I2C_DO_SEND_RESTART_WRITE
  8254 ;;		_I2C_DO_SEND_RESTART
  8255 ;;		_I2C_DO_RX_EMPTY
  8256 ;; This function uses a non-reentrant model
  8257 ;;
  8258                           
  8259                           
  8260                           ;psect for function _I2C_MasterEnableRestart
  8261  0343                     _I2C_MasterEnableRestart:	
  8262                           
  8263                           ;i2c_master.c: 576: SSP1CON2bits.RSEN = 1;
  8264                           
  8265                           ;incstack = 0
  8266                           ; Regs used in _I2C_MasterEnableRestart: []
  8267  0343  0024               	movlb	4	; select bank4
  8268  0344  1496               	bsf	22,1	;volatile
  8269  0345  0008               	return
  8270  0346                     __end_of_I2C_MasterEnableRestart:	
  8271  007E                     btemp	set	126	;btemp
  8272  007E                     int$flags	set	126
  8273  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    32
    Data        0
    BSS         44
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80      2      40
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_DO_TX$1870$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_DO_RX$1876$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_DO_TX_EMPTY$1882$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_DO_RX_EMPTY$1888$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_DO_TX_EMPTY$1887	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_DO_TX_EMPTY$1882	PTR FTN(PTR void ,)enum E97 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), 

    I2C_DO_RX$1881	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_DO_RX$1876	PTR FTN(PTR void ,)enum E97 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), 

    I2C_DO_TX$1875	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_DO_TX$1870	PTR FTN(PTR void ,)enum E97 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), 

    I2C_MasterFsm$1869	const PTR FTN()enum E12110 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    S124$0$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    S747$data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0

    I2C_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E97 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), Absolute function(), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), Absolute function(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E97 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), Absolute function(), 

    I2C_SetBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    S124$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    S124$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    S124$callbackTable	PTR FTN(PTR void ,)enum E97[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E97[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), 

    fsmStateTable	const PTR FTN()enum E12110[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _I2C_MasterIsr->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_DO_TX->_I2C_MasterSendTxData
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback

Critical Paths under _main in BANK0

    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     392
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     392
                     _ADC_Initialize
                  _EUSART_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      98
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0   88767
                                              7 COMMON     1     1      0
                   Absolute function *
                      _I2C_MasterIsr *
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR2_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterIsr                                        0     0      0   88767
                      _I2C_MasterFsm
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterFsm                                        3     3      0   88767
                                              4 COMMON     3     3      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX_EMPTY                                      1     1      0   22166
                                              0 COMMON     1     1      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX                                            3     3      0   22225
                                              1 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_WRITE                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_READ                                 0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendTxData                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX                                            1     1      0   22166
                                              0 COMMON     1     1      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_ADDRESS_NACK                                  1     1      0   22166
                                              0 COMMON     1     1      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                1     0      1    4362
                                              1 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                1     0      1    4362
                                              1 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              1     0      1    4718
                                              1 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                1     0      1    4362
                                              1 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                1     0      1    4362
                                              1 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _I2C_SetDataCompleteCallback                          4     1      3    2979
                                              5 COMMON     3     0      3
                                              0 BANK0      1     1      0
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (10) _I2C_SetCallback                                     5     2      3    1117
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (9) _I2C_SetBuffer                                        4     2      2    1352
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterEnableRestart                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnStop                               1     0      1       0
                                              1 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnReset                              1     0      1       0
                                              1 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM3_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _I2C_MasterIsr *
     _I2C_MasterFsm
       _I2C_DO_ADDRESS_NACK *
         Absolute function(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_STOP *
           _I2C_MasterStop
         _rd1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rd2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rdBlkRegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _wr1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _wr2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
       _I2C_DO_IDLE *
       _I2C_DO_RCEN *
         _I2C_MasterStartRx
       _I2C_DO_RESET *
       _I2C_DO_RX *
         Absolute function(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_RX_NACK_RESTART *
           _I2C_MasterSendNack
         _I2C_DO_RX_NACK_STOP *
           _I2C_MasterSendNack
         _I2C_MasterGetRxData *
         _I2C_MasterSendAck *
         _rd1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rd2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rdBlkRegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _wr1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _wr2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
       _I2C_DO_RX_ACK *
         _I2C_MasterSendAck
       _I2C_DO_RX_NACK_RESTART *
         _I2C_MasterSendNack
       _I2C_DO_RX_NACK_STOP *
         _I2C_MasterSendNack
       _I2C_DO_SEND_ADR_READ *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_ADR_WRITE *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_RESTART *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_RESTART_READ *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_RESTART_WRITE *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_STOP *
         _I2C_MasterStop
       _I2C_DO_TX *
         Absolute function(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART_READ *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_RESTART_WRITE *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_STOP *
           _I2C_MasterStop
         _I2C_MasterIsNack *
         _I2C_MasterSendTxData *
         _rd1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rd2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rdBlkRegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _wr1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _wr2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
       _I2C_DO_TX_EMPTY *
         Absolute function(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_STOP *
           _I2C_MasterStop
         _I2C_MasterSetIrq *
         _rd1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rd2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rdBlkRegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _wr1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _wr2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
       _I2C_MasterClearIrq *
       _I2C_MasterIsNack *
   _TMR2_ISR *
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2      28       5       50.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      36      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      36      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Jun 24 12:40:01 2020

                       ??_I2C_DO_SEND_ADR_READ 0070                    __size_of_I2C_MasterSendNack 0004  
             __end_of_TMR2_SetInterruptHandler 02DC                                              l9 030C  
                      ??_I2C_DO_SEND_ADR_WRITE 0071                                    __CFG_CP$OFF 0000  
                        ??_I2C_DO_SEND_RESTART 0070                                    __CFG_LVP$ON 0000  
                __size_of_I2C_MasterSendTxData 0005                                            l512 02AB  
                                          _PR2 001B                 ?_EUSART_SetFramingErrorHandler 0046  
                              _TMR2_Initialize 0209                                   __CFG_BORV$LO 0000  
                                          wreg 0009                                   __CFG_IESO$ON 0000  
                     ??_I2C_CallbackReturnStop 0078                                   _I2C_DO_RESET 02FA  
                                 __CFG_ZCD$OFF 0000                        ??_rd2RegCompleteHandler 0078  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           _T2PR 001B  
                                         _PLLR 04D6                                           _TMR2 001A  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _WPUC 020E                        ??_wr2RegCompleteHandler 0078  
                                 __CFG_WRT$OFF 0000                                  __CFG_FCMEN$ON 0000  
                                         _main 0309                       ?_I2C_CallbackReturnReset 0047  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                  __CFG_BOREN$ON 0000  
                                         start 0030                                  __CFG_MCLRE$ON 0000  
             __size_of_rdBlkRegCompleteHandler 0018                                  _I2C_DO_TX$504 0072  
                                __CFG_PLLEN$ON 0000                 __size_of_OSCILLATOR_Initialize 000A  
                                _I2C_DO_RX_ACK 0315                  __end_of_OSCILLATOR_Initialize 02AF  
                                        ?_main 0070                                  __CFG_WDTE$OFF 0000  
                                        _T2CON 001C                                          _T2HLT 001D  
                                        _T2TMR 001A                                          i1l206 00E4  
                                        _T2RST 001F                                          i1l190 006F  
                                        i1l371 0017                                          i1l373 0023  
                                        i1l378 002B                   __size_of_I2C_DO_RX_NACK_STOP 0004  
                            ??_I2C_DO_TX_EMPTY 0070                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        _RXPPS 0E24                              __end_of_I2C_DO_RX 0104  
                            __end_of_I2C_DO_TX 008E                               __end_of_TMR2_ISR 0230  
                       __size_of_I2C_MasterFsm 0027                         __size_of_I2C_MasterIsr 0003  
                      _I2C_MasterEnableRestart 0343                        __end_of_PWM3_Initialize 029A  
                                        pclath 000A                               ?_I2C_SetCallback 0070  
                                        status 0003                                          wtemp0 007E  
                            ?_I2C_DO_SEND_STOP 0070                         __size_of_I2C_SetBuffer 000E  
                           ??_I2C_DO_SEND_STOP 0070                                  _fsmStateTable 01BC  
                              __initialization 0032                                   __end_of_main 030D  
            __size_of_I2C_DO_SEND_RESTART_READ 0004                      ?_I2C_DO_SEND_RESTART_READ 0070  
                               ?_I2C_DO_RX_ACK 0070                        __end_of_TMR2_Initialize 021E  
                               __CFG_LPBOR$OFF 0000                    ?_INTERRUPT_InterruptManager 0070  
                     _TMR2_SetInterruptHandler 02D6                                         ??_main 0048  
                            ?_I2C_MasterIsNack 0070                              ?_I2C_MasterSetIrq 0070  
                           ??_I2C_MasterIsNack 0070                             ??_I2C_MasterSetIrq 0070  
            _EUSART_DefaultFramingErrorHandler 0000                                         _ADCON0 009D  
                                       _ADCON1 009E                                         _ADCON2 009F  
                   _EUSART_OverrunErrorHandler 0041                __end_of_I2C_CallbackReturnReset 0348  
                                       _ADRESH 009C                                         _ADRESL 009B  
              __size_of_I2C_CallbackReturnStop 0002                  I2C_SetDataCompleteCallback@cb 0075  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _ANSELC 018E                                         _BORCON 0116  
                                       _RC1REG 0199                                         _RC1STA 019D  
                                       _RB4PPS 0E9C                                         _RB6PPS 0E9E  
                                       _RB7PPS 0E9F                                         _RC5PPS 0EA5  
                                       _ODCONA 028C                                         _ODCONB 028D  
                                       _ODCONC 028E                                         i1l2500 0050  
                                       i1l2514 0088                                         i1l2506 0053  
                                       i1l2532 00E6                                         i1l2438 018B  
                                       i1l2550 0156                                         i1l2542 00EC  
                                       i1l2536 00E9                                         i1l2546 0153  
                                       i1l2562 015D                                         i1l2556 015A  
                                       i1l2492 004A                                         i1l2572 01A3  
                                       i1l2496 004D                                         i1l2568 01A0  
                                       i1l2578 01A6                                         i1l2588 0115  
                                       _INLVLA 038C                                         _INLVLB 038D  
                                       _INLVLC 038E                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _TX1REG 019A                                         _TX1STA 019E  
                               __CFG_PWRTE$OFF 0000                            _I2C_MasterGetRxData 033A  
                                _I2C_MasterFsm 0104                                  _I2C_MasterIsr 0331  
                               __CFG_STVREN$ON 0000                              I2C_SetCallback@cb 0070  
                      __size_of_I2C_MasterStop 0003                        __size_of_I2C_Initialize 0009  
                                _I2C_SetBuffer 0274                            _I2C_DO_ADDRESS_NACK 0199  
                         ?_I2C_MasterGetRxData 0070                      ??_I2C_MasterEnableRestart 0070  
     TMR2_SetInterruptHandler@InterruptHandler 0046                               ?_PWM3_Initialize 0070  
                            _SYSTEM_Initialize 01F4                        __end_of__initialization 003F  
                        __end_of_TMR2_CallBack 02A5                             ?_SYSTEM_Initialize 0070  
                         ?_I2C_DO_ADDRESS_NACK 0070                        _rdBlkRegCompleteHandler 01DC  
                               __pcstackCOMMON 0070                                 ?_I2C_MasterFsm 0070  
                               ?_I2C_MasterIsr 0070                                ??_I2C_DO_RX_ACK 0070  
                       _I2C_CallbackReturnStop 0348                            ??_SYSTEM_Initialize 0048  
                                    ?_TMR2_ISR 0070                               ?_TMR2_Initialize 0070  
                               ?_I2C_SetBuffer 0070                 __size_of_I2C_DO_SEND_ADR_WRITE 0007  
           __size_of_I2C_DO_SEND_RESTART_WRITE 0004                  __end_of_I2C_DO_SEND_ADR_WRITE 02D0  
                   ?_I2C_DO_SEND_RESTART_WRITE 0070                          ??_I2C_MasterGetRxData 0070  
                               _OPTION_REGbits 0095                     __end_of_I2C_MasterClearIrq 0337  
              ??_EUSART_SetOverrunErrorHandler 0048                      __end_of_SYSTEM_Initialize 0209  
                            _I2C_MasterSendAck 0329                                     __pbssBANK0 0020  
                                ??_I2C_DO_IDLE 0070                 __size_of_rd2RegCompleteHandler 0011  
                                ??_I2C_DO_RCEN 0070                  __end_of_rd2RegCompleteHandler 0252  
                 __end_of_I2C_MasterSendTxData 0309                             ?_I2C_MasterSendAck 0070  
                            _I2C_MasterStartRx 033D                 __size_of_wr2RegCompleteHandler 0011  
                        ??_I2C_DO_ADDRESS_NACK 0070                  __end_of_wr2RegCompleteHandler 0274  
                          _I2C_DO_RX_NACK_STOP 0311                          _rd1RegCompleteHandler 0252  
                           ?_I2C_MasterStartRx 0070                     __end_of_I2C_MasterSendNack 0331  
                        _wr1RegCompleteHandler 0230                                     __pmaintext 0309  
                          ??_I2C_MasterSendAck 0070                       rd1RegCompleteHandler@ptr 0047  
                  __end_of_I2C_DO_SEND_RESTART 0321                                _I2C_DO_TX_EMPTY 0150  
                          I2C_SetBuffer@buffer 0073                                __CFG_PPS1WAY$ON 0000  
                                   ??_TMR2_ISR 0070                                     __pintentry 0004  
                          ??_I2C_MasterStartRx 0070                  __size_of_I2C_DO_SEND_ADR_READ 0008  
             __size_of_I2C_CallbackReturnReset 0002                 I2C_SetDataCompleteCallback@ptr 0077  
                      __size_of_ADC_Initialize 0009                       ??_I2C_DO_RX_NACK_RESTART 0070  
            __end_of_I2C_DO_SEND_RESTART_WRITE 0325                           ?_I2C_DO_RX_NACK_STOP 0070  
                              __CFG_WDTCCS$SWC 0000                      __end_of_I2C_MasterSendAck 032D  
                                      _OSCTUNE 0098                                        _PWM3DCH 0618  
                                      _PWM3DCL 0617                                        _PWM3CON 0619  
                                      _SSP1ADD 0212                                        _SLRCONA 030C  
                                      _SLRCONB 030D                                        _SLRCONC 030E  
                                      _SSP1BUF 0211                       ??_EUSART_SetErrorHandler 0048  
                    __end_of_I2C_MasterStartRx 0340                   ?_I2C_SetDataCompleteCallback 0075  
                                    _I2C_DO_RX 00CA                                      _I2C_DO_TX 0043  
             __end_of_I2C_DO_SEND_RESTART_READ 0329                      ??_rdBlkRegCompleteHandler 0078  
                              ??_I2C_MasterFsm 0074                                ??_I2C_MasterIsr 0077  
                         _ADC_InterruptHandler 0078                     ??_TMR2_SetInterruptHandler 0048  
                          __end_of_I2C_DO_IDLE 0304                            __end_of_I2C_DO_RCEN 02F4  
                              ??_I2C_SetBuffer 0072                        I2C_SetBuffer@bufferSize 0070  
                               _I2C_MasterStop 0340                                 _I2C_Initialize 02AF  
                    __size_of_I2C_DO_SEND_STOP 0004                                        __ptext1 01F4  
                                      __ptext2 0209                                        __ptext3 02D6  
                                      __ptext4 028F                                        __ptext5 008E  
                                      __ptext6 02A5                                        __ptext7 02AF  
                                      __ptext8 012B                                        __ptext9 02DC  
                        ??_I2C_DO_RX_NACK_STOP 0070                          _OSCILLATOR_Initialize 02A5  
                                    _T2CONbits 001C                             I2C_SetCallback@idx 0074  
                     ??_PIN_MANAGER_Initialize 0046                  I2C_CallbackReturnReset@funPtr 0047  
                                    _T2HLTbits 001D                             I2C_SetCallback@ptr 0072  
                     wr1RegCompleteHandler@ptr 0047                     __size_of_SYSTEM_Initialize 0015  
                                      clrloop0 02D1                           end_of_initialization 003F  
                                    _T2RSTbits 001F                                     ?_I2C_DO_RX 0070  
                                   ?_I2C_DO_TX 0070          __end_of_EUSART_SetOverrunErrorHandler 02E2  
       __size_of_EUSART_SetOverrunErrorHandler 0006                  _EUSART_SetOverrunErrorHandler 02DC  
                    __size_of_I2C_MasterIsNack 0006                         ?_rd1RegCompleteHandler 0047  
                      __end_of_I2C_DO_TX_EMPTY 0175                      __size_of_I2C_MasterSetIrq 0003  
                            _EUSART_Initialize 012B                         ?_wr1RegCompleteHandler 0047  
                           ?_EUSART_Initialize 0070                       __size_of_I2C_SetCallback 0024  
                       __end_of_I2C_MasterStop 0343                         __end_of_I2C_Initialize 02B8  
                          ??_EUSART_Initialize 0048                __end_of_rdBlkRegCompleteHandler 01F4  
                         _I2C_MasterSendTxData 0304                                      _SSPDATPPS 0E21  
              __size_of_I2C_DO_RX_NACK_RESTART 0004                                      _SSPCLKPPS 0E20  
                             __CFG_FOSC$INTOSC 0000                     __size_of_I2C_MasterSendAck 0004  
              __size_of_EUSART_SetErrorHandler 0006                     __size_of_I2C_MasterStartRx 0003  
                    __end_of_EUSART_Initialize 0150                                    _I2C_DO_IDLE 02FF  
                                  _I2C_DO_RCEN 02EE                     rdBlkRegCompleteHandler@ptr 0047  
                      ?_I2C_CallbackReturnStop 0047                       _I2C_DO_SEND_RESTART_READ 0325  
                 I2C_CallbackReturnStop@funPtr 0047                                ?_I2C_MasterStop 0070  
                              ?_I2C_Initialize 0070           __end_of_TMR2_DefaultInterruptHandler 034B  
        __size_of_TMR2_DefaultInterruptHandler 0001                   _TMR2_DefaultInterruptHandler 034A  
                      _I2C_CallbackReturnReset 0346                     _EUSART_DefaultErrorHandler 0000  
         __size_of_I2C_SetDataCompleteCallback 000D                              __size_of_TMR2_ISR 0012  
                               _ADC_Initialize 02B8                          ?_I2C_MasterSendTxData 0070  
                       ?_OSCILLATOR_Initialize 0070                    ??_I2C_DO_SEND_RESTART_WRITE 0070  
                          start_initialization 0032                __size_of_PIN_MANAGER_Initialize 003C  
                                ?_I2C_DO_RESET 0070                                    ??_I2C_DO_RX 0070  
                                  ??_I2C_DO_TX 0071                 __end_of_I2C_CallbackReturnStop 034A  
                       _I2C_DO_RX_NACK_RESTART 030D                               ?_I2C_DO_TX_EMPTY 0070  
                           _I2C_MasterClearIrq 0334                 ?_EUSART_SetOverrunErrorHandler 0046  
                     __size_of_PWM3_Initialize 000B                     _EUSART_FramingErrorHandler 0043  
                       _EUSART_SetErrorHandler 02E8                                    _CCPTMRSbits 029E  
                          ?_I2C_MasterClearIrq 0070                         __end_of_ADC_Initialize 02C1  
                  __end_of_I2C_MasterGetRxData 033D                          __end_of_I2C_DO_RX_ACK 0319  
                ?_TMR2_DefaultInterruptHandler 0070                               _I2C_DO_SEND_STOP 0319  
                            ??_I2C_SetCallback 0073                             _I2C_MasterSendNack 032D  
                     ?_I2C_MasterEnableRestart 0070                         __size_of_TMR2_CallBack 000B  
                        _I2C_DO_SEND_ADR_WRITE 02C9                                    __pbssCOMMON 0078  
                                    ___latbits 0002                                  __pcstackBANK0 0046  
                               ??_I2C_DO_RESET 0070                       __size_of_TMR2_Initialize 0015  
                          ?_I2C_MasterSendNack 0070                   __end_of_I2C_DO_SEND_ADR_READ 02C9  
                         ??_I2C_MasterClearIrq 0070                    __end_of_I2C_DO_ADDRESS_NACK 01BC  
                             _I2C_MasterIsNack 02F4                     __size_of_EUSART_Initialize 0025  
                    _I2C_DO_SEND_RESTART_WRITE 0321                               _I2C_MasterSetIrq 0337  
                        _rd2RegCompleteHandler 0241                          __end_of_fsmStateTable 01DC  
                       _PIN_MANAGER_Initialize 008E                          _wr2RegCompleteHandler 0263  
                    ??_I2C_CallbackReturnReset 0078                           ??_I2C_MasterSendNack 0070  
                     rd2RegCompleteHandler@ptr 0047                                ?_ADC_Initialize 0070  
                       ??_I2C_MasterSendTxData 0070                   ??_INTERRUPT_InterruptManager 0077  
                 __size_of_I2C_DO_SEND_RESTART 0004                                       _BAUD1CON 019F  
                                     _T2CLKCON 001E                        ??_rd1RegCompleteHandler 0078  
                      ??_wr1RegCompleteHandler 0078         EUSART_SetErrorHandler@interruptHandler 0046  
                                    clear_ram0 02D0                                  _TMR2_CallBack 029A  
                                     _PIE1bits 0090                                       _PIE2bits 0091  
                            _eusartRxLastError 0045            __size_of_INTERRUPT_InterruptManager 002C  
                                     _PIR1bits 0010                ??_EUSART_SetFramingErrorHandler 0048  
                                     _PIR2bits 0011                          __end_of_I2C_MasterFsm 012B  
                        __end_of_I2C_MasterIsr 0334                    __end_of_I2C_DO_RX_NACK_STOP 0315  
                         __CFG_WDTCPS$WDTCPS1F 0000                                       _SSP1CON1 0215  
                                     _SSP1CON2 0216              _EUSART_DefaultOverrunErrorHandler 0000  
                                     _TMR2_ISR 021E                __end_of_I2C_MasterEnableRestart 0346  
                                     _SSP1STAT 0214                          __end_of_I2C_SetBuffer 0282  
                            ??_PWM3_Initialize 0046                                     _ADCON0bits 009D  
                       ?_I2C_DO_SEND_ADR_WRITE 0070                       I2C_MasterSendTxData@data 0070  
               ??_TMR2_DefaultInterruptHandler 0070              __size_of_TMR2_SetInterruptHandler 0006  
                    ?_TMR2_SetInterruptHandler 0046                       wr2RegCompleteHandler@ptr 0047  
                   ??_I2C_DO_SEND_RESTART_READ 0070                       ?_rdBlkRegCompleteHandler 0047  
                                   _I2C_Status 0020                                   ?_I2C_DO_IDLE 0070  
                                 ?_I2C_DO_RCEN 0070                              ??_TMR2_Initialize 0048  
                       ?_rd2RegCompleteHandler 0047                                 ?_TMR2_CallBack 0070  
                       ?_wr2RegCompleteHandler 0047                               ??_I2C_MasterStop 0070  
                             ??_I2C_Initialize 0046                           __end_of_I2C_DO_RESET 02FF  
                      ??_OSCILLATOR_Initialize 0046                            _EUSART_ErrorHandler 003F  
                         _I2C_DO_SEND_ADR_READ 02C1                                       __ptext10 02E2  
                                     __ptext11 02E8                                       __ptext20 0199  
                                     __ptext12 02B8                                       __ptext21 02FA  
                                     __ptext30 00CA                                       __ptext22 030D  
                                     __ptext14 021E                                       __ptext31 0043  
                                     __ptext23 0311                                       __ptext15 029A  
                                     __ptext40 033A                                       __ptext32 02C9  
                                     __ptext24 0315                                       __ptext16 034A  
                                     __ptext41 032D                                       __ptext33 02C1  
                                     __ptext25 0319                                       __ptext17 0331  
                                     __ptext50 0282                                       __ptext42 033D  
                                     __ptext34 02FF                                       __ptext26 031D  
                                     __ptext18 0104                                       __ptext51 0175  
                                     __ptext43 01DC                                       __ptext35 0150  
                                     __ptext27 0321                                       __ptext19 0334  
                                     __ptext52 0274                                       __ptext44 0230  
                                     __ptext36 0337                                       __ptext28 0325  
                                     __ptext53 0340                                       __ptext45 0241  
                                     __ptext37 02F4                                       __ptext29 02EE  
                                     __ptext54 0343                                       __ptext46 0252  
                                     __ptext38 0304                                       __ptext47 0346  
                                     __ptext39 0329                                       __ptext48 0348  
                                     __ptext49 0263                                   _SSP1CON1bits 0215  
                                 _SSP1CON2bits 0216            __end_of_I2C_SetDataCompleteCallback 028F  
                  _I2C_SetDataCompleteCallback 0282                        ?_I2C_DO_RX_NACK_RESTART 0070  
                     __end_of_I2C_DO_SEND_STOP 031D                                  __size_of_main 0004  
                         __CFG_WDTCWS$WDTCWSSW 0000                        ?_EUSART_SetErrorHandler 0046  
                              _I2C_SetCallback 0175                  ??_I2C_SetDataCompleteCallback 0046  
                                   _RC1STAbits 019D  EUSART_SetOverrunErrorHandler@interruptHandler 0046  
                                     int$flags 007E                          ?_I2C_DO_SEND_ADR_READ 0070  
           __end_of_INTERRUPT_InterruptManager 0030                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 02E8         __size_of_EUSART_SetFramingErrorHandler 0006  
                _EUSART_SetFramingErrorHandler 02E2                                   _SSP1STATbits 0214  
                     __end_of_I2C_MasterIsNack 02FA                       __end_of_I2C_MasterSetIrq 033A  
                                   _INTCONbits 000B                 __end_of_I2C_DO_RX_NACK_RESTART 0311  
                                     intlevel1 0000                                ??_TMR2_CallBack 0070  
             __size_of_I2C_MasterEnableRestart 0003                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 02EE                              __CFG_CLKOUTEN$OFF 0000  
                          _I2C_DO_SEND_RESTART 031D                               ??_ADC_Initialize 0046  
EUSART_SetFramingErrorHandler@interruptHandler 0046                       __size_of_I2C_DO_TX_EMPTY 0025  
                                __pstringtext1 01BC                           ?_I2C_DO_SEND_RESTART 0070  
                        TMR2_ISR@CountCallBack 007A                   __size_of_I2C_MasterGetRxData 0003  
                                   _TX1STAbits 019E                    __size_of_I2C_MasterClearIrq 0003  
                      __end_of_I2C_SetCallback 0199                 __end_of_PIN_MANAGER_Initialize 00CA  
               __size_of_rd1RegCompleteHandler 0011                  __end_of_rd1RegCompleteHandler 0263  
                       __size_of_I2C_DO_RX_ACK 0004                 __size_of_wr1RegCompleteHandler 0011  
                        __size_of_I2C_DO_RESET 0005                  __end_of_wr1RegCompleteHandler 0241  
                        _TMR2_InterruptHandler 003D                          _MSSP_InterruptHandler 007C  
                 __size_of_I2C_DO_ADDRESS_NACK 0023                           __size_of_I2C_DO_IDLE 0005  
                         __size_of_I2C_DO_RCEN 0006                                _PWM3_Initialize 028F  
                           __size_of_I2C_DO_RX 003A                             __size_of_I2C_DO_TX 004B  
